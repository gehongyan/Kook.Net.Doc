{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API 文档 | KaiHeiLa.Net 文档",
    "keywords": "API 文档 用于浏览 KaiHeiLa.Net 的全部公开 API 信息。 常见实体 KaiHeiLa.WebSocket KaiHeiLaSocketClient SocketGuild SocketGuildChannel SocketRole SocketGuildUser SocketMessage"
  },
  "api/KaiHeiLa.ActionGroupModule.html": {
    "href": "api/KaiHeiLa.ActionGroupModule.html",
    "title": "Class ActionGroupModule | KaiHeiLa.Net 文档",
    "keywords": "Class ActionGroupModule Represents an action group module that can be used in an ICard . Inheritance System.Object ActionGroupModule Implements IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ActionGroupModule : object, IModule Properties | Improve this Doc View Source Elements Gets the elements of this module. Declaration public ImmutableArray<ButtonElement> Elements { get; } Property Value Type Description ImmutableArray < ButtonElement > An containing the elements of this module. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IModule"
  },
  "api/KaiHeiLa.ActionGroupModuleBuilder.html": {
    "href": "api/KaiHeiLa.ActionGroupModuleBuilder.html",
    "title": "Class ActionGroupModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class ActionGroupModuleBuilder Represents a action group module builder for creating an ActionGroupModule . Inheritance System.Object ActionGroupModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ActionGroupModuleBuilder : object, IModuleBuilder Constructors | Improve this Doc View Source ActionGroupModuleBuilder() Declaration public ActionGroupModuleBuilder() Fields | Improve this Doc View Source MaxElementCount Returns the maximum number of elements allowed by KaiHeiLa. Declaration public const int MaxElementCount = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source Elements Gets or sets the button elements of the action group module. Declaration public List<ButtonElementBuilder> Elements { get; set; } Property Value Type Description List < ButtonElementBuilder > A containing the button elements of the action group module. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source AddElement(Action<ButtonElementBuilder>) Adds a button element to the action group module. Declaration public ActionGroupModuleBuilder AddElement(Action<ButtonElementBuilder> action) Parameters Type Name Description Action < ButtonElementBuilder > action The action to add a button element to the action group module. Returns Type Description ActionGroupModuleBuilder The current builder. | Improve this Doc View Source AddElement(ButtonElementBuilder) Adds a button element to the action group module. Declaration public ActionGroupModuleBuilder AddElement(ButtonElementBuilder field) Parameters Type Name Description ButtonElementBuilder field The button element to add. Returns Type Description ActionGroupModuleBuilder The current builder. | Improve this Doc View Source Build() Builds this builder into an ActionGroupModule . Declaration public ActionGroupModule Build() Returns Type Description ActionGroupModule An ActionGroupModule representing the built action group module object. Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.ActivityType.html": {
    "href": "api/KaiHeiLa.ActivityType.html",
    "title": "Enum ActivityType | KaiHeiLa.Net 文档",
    "keywords": "Enum ActivityType Specifies the type of activities. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ActivityType : int Fields Name Description Game Specifies that the activity is a game. Music Specifies that the activity is music."
  },
  "api/KaiHeiLa.AsyncEnumerableExtensions.html": {
    "href": "api/KaiHeiLa.AsyncEnumerableExtensions.html",
    "title": "Class AsyncEnumerableExtensions | KaiHeiLa.Net 文档",
    "keywords": "Class AsyncEnumerableExtensions An extension class for squashing . Inheritance System.Object AsyncEnumerableExtensions Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public static class AsyncEnumerableExtensions : object Remarks This set of extension methods will squash an into a single . This is often associated with requests that has a set limit when requesting. Methods | Improve this Doc View Source Flatten<T>(IAsyncEnumerable<IEnumerable<T>>) Flattens the specified pages into one . Declaration public static IAsyncEnumerable<T> Flatten<T>(this IAsyncEnumerable<IEnumerable<T>> source) Parameters Type Name Description IAsyncEnumerable < IEnumerable <T>> source Returns Type Description IAsyncEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>) Flattens the specified pages into one asynchronously. Declaration public static Task<IEnumerable<T>> FlattenAsync<T>(this IAsyncEnumerable<IEnumerable<T>> source) Parameters Type Name Description IAsyncEnumerable < IEnumerable <T>> source Returns Type Description Task < IEnumerable <T>> Type Parameters Name Description T"
  },
  "api/KaiHeiLa.Attachment.html": {
    "href": "api/KaiHeiLa.Attachment.html",
    "title": "Class Attachment | KaiHeiLa.Net 文档",
    "keywords": "Class Attachment Represents a message attachment found in a IUserMessage . Inheritance System.Object Attachment Implements IAttachment Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Rest.dll Syntax public class Attachment : object, IAttachment Properties | Improve this Doc View Source Duration Declaration public TimeSpan? Duration { get; } Property Value Type Description System.Nullable < TimeSpan > | Improve this Doc View Source Filename Declaration public string Filename { get; } Property Value Type Description System.String | Improve this Doc View Source FileType Declaration public string FileType { get; } Property Value Type Description System.String | Improve this Doc View Source Height Declaration public int? Height { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Size Declaration public int? Size { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Type Gets the type of the attachment. Declaration public AttachmentType Type { get; } Property Value Type Description AttachmentType An AttachmentType representing the type of the attachment. | Improve this Doc View Source Url Declaration public string Url { get; } Property Value Type Description System.String | Improve this Doc View Source Width Declaration public int? Width { get; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source ToString() Returns the filename of this attachment. Declaration public override string ToString() Returns Type Description System.String A string containing the filename of this attachment. Implements IAttachment"
  },
  "api/KaiHeiLa.AttachmentType.html": {
    "href": "api/KaiHeiLa.AttachmentType.html",
    "title": "Enum AttachmentType | KaiHeiLa.Net 文档",
    "keywords": "Enum AttachmentType Specifies the type of the attachment. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum AttachmentType : int Fields Name Description File The attachment is a file. Image The attachment is an image. Video The attachment is a video."
  },
  "api/KaiHeiLa.Audio.AudioApplication.html": {
    "href": "api/KaiHeiLa.Audio.AudioApplication.html",
    "title": "Enum AudioApplication | KaiHeiLa.Net 文档",
    "keywords": "Enum AudioApplication Namespace : KaiHeiLa.Audio Assembly : KaiHeiLa.Net.Core.dll Syntax public enum AudioApplication : int Fields Name Description Mixed Music Voice"
  },
  "api/KaiHeiLa.Audio.AudioInStream.html": {
    "href": "api/KaiHeiLa.Audio.AudioInStream.html",
    "title": "Class AudioInStream | KaiHeiLa.Net 文档",
    "keywords": "Class AudioInStream Inheritance System.Object AudioStream AudioInStream InputStream Inherited Members AudioStream.CanSeek AudioStream.WriteHeader(UInt16, UInt32, Boolean) AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.ClearAsync(CancellationToken) AudioStream.Length AudioStream.Position AudioStream.Read(Byte[], Int32, Int32) AudioStream.SetLength(Int64) AudioStream.Seek(Int64, SeekOrigin) Namespace : KaiHeiLa.Audio Assembly : KaiHeiLa.Net.Core.dll Syntax public abstract class AudioInStream : AudioStream Properties | Improve this Doc View Source AvailableFrames Declaration public abstract int AvailableFrames { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description System.Boolean Overrides AudioStream.CanRead | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean Overrides AudioStream.CanWrite Methods | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public override Task FlushAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source ReadFrameAsync(CancellationToken) Declaration public abstract Task<RTPFrame> ReadFrameAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task < RTPFrame > | Improve this Doc View Source TryReadFrame(CancellationToken, out RTPFrame) Declaration public abstract bool TryReadFrame(CancellationToken cancelToken, out RTPFrame frame) Parameters Type Name Description CancellationToken cancelToken RTPFrame frame Returns Type Description System.Boolean"
  },
  "api/KaiHeiLa.Audio.AudioOutStream.html": {
    "href": "api/KaiHeiLa.Audio.AudioOutStream.html",
    "title": "Class AudioOutStream | KaiHeiLa.Net 文档",
    "keywords": "Class AudioOutStream Inheritance System.Object AudioStream AudioOutStream BufferedWriteStream OpusDecodeStream OpusEncodeStream OutputStream RTPReadStream RTPWriteStream SodiumDecryptStream SodiumEncryptStream Inherited Members AudioStream.CanRead AudioStream.CanSeek AudioStream.WriteHeader(UInt16, UInt32, Boolean) AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.ClearAsync(CancellationToken) AudioStream.Length AudioStream.Position Namespace : KaiHeiLa.Audio Assembly : KaiHeiLa.Net.Core.dll Syntax public abstract class AudioOutStream : AudioStream Properties | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean Overrides AudioStream.CanWrite Methods | Improve this Doc View Source Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count Returns Type Description System.Int32 Overrides AudioStream.Read(Byte[], Int32, Int32) | Improve this Doc View Source Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description System.Int64 offset SeekOrigin origin Returns Type Description System.Int64 Overrides AudioStream.Seek(Int64, SeekOrigin) | Improve this Doc View Source SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description System.Int64 value Overrides AudioStream.SetLength(Int64)"
  },
  "api/KaiHeiLa.Audio.AudioStream.html": {
    "href": "api/KaiHeiLa.Audio.AudioStream.html",
    "title": "Class AudioStream | KaiHeiLa.Net 文档",
    "keywords": "Class AudioStream Inheritance System.Object AudioStream AudioInStream AudioOutStream Namespace : KaiHeiLa.Audio Assembly : KaiHeiLa.Net.Core.dll Syntax public abstract class AudioStream : Stream Properties | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Length Declaration public override long Length { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Position Declaration public override long Position { get; set; } Property Value Type Description System.Int64 Methods | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source ClearAsync(CancellationToken) Declaration public virtual Task ClearAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Flush() Declaration public override void Flush() | Improve this Doc View Source Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count Returns Type Description System.Int32 | Improve this Doc View Source Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description System.Int64 offset SeekOrigin origin Returns Type Description System.Int64 | Improve this Doc View Source SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description System.Int64 value | Improve this Doc View Source Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count | Improve this Doc View Source WriteHeader(UInt16, UInt32, Boolean) Declaration public virtual void WriteHeader(ushort seq, uint timestamp, bool missed) Parameters Type Name Description System.UInt16 seq System.UInt32 timestamp System.Boolean missed"
  },
  "api/KaiHeiLa.Audio.html": {
    "href": "api/KaiHeiLa.Audio.html",
    "title": "Namespace KaiHeiLa.Audio | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.Audio Classes AudioInStream AudioOutStream AudioStream SecretBox Structs RTPFrame Interfaces IAudioClient Enums AudioApplication"
  },
  "api/KaiHeiLa.Audio.IAudioClient.html": {
    "href": "api/KaiHeiLa.Audio.IAudioClient.html",
    "title": "Interface IAudioClient | KaiHeiLa.Net 文档",
    "keywords": "Interface IAudioClient Namespace : KaiHeiLa.Audio Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IAudioClient : IDisposable Properties | Improve this Doc View Source ConnectionState Gets the current connection state of this client. Declaration ConnectionState ConnectionState { get; } Property Value Type Description ConnectionState | Improve this Doc View Source Latency Gets the estimated round-trip latency, in milliseconds, to the voice WebSocket server. Declaration int Latency { get; } Property Value Type Description System.Int32 | Improve this Doc View Source UdpLatency Gets the estimated round-trip latency, in milliseconds, to the voice UDP server. Declaration int UdpLatency { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source CreateDirectOpusStream() Creates a new outgoing stream accepting Opus-encoded data. This is a direct stream with no internal timer. Declaration AudioOutStream CreateDirectOpusStream() Returns Type Description AudioOutStream | Improve this Doc View Source CreateDirectPCMStream(AudioApplication, Nullable<Int32>, Int32) Creates a new direct outgoing stream accepting PCM (raw) data. This is a direct stream with no internal timer. Declaration AudioOutStream CreateDirectPCMStream(AudioApplication application, int? bitrate = null, int packetLoss = 30) Parameters Type Name Description AudioApplication application System.Nullable < System.Int32 > bitrate System.Int32 packetLoss Returns Type Description AudioOutStream | Improve this Doc View Source CreateOpusStream(Int32) Creates a new outgoing stream accepting Opus-encoded data. Declaration AudioOutStream CreateOpusStream(int bufferMillis = 1000) Parameters Type Name Description System.Int32 bufferMillis Returns Type Description AudioOutStream | Improve this Doc View Source CreatePCMStream(AudioApplication, Nullable<Int32>, Int32, Int32) Creates a new outgoing stream accepting PCM (raw) data. Declaration AudioOutStream CreatePCMStream(AudioApplication application, int? bitrate = null, int bufferMillis = 1000, int packetLoss = 30) Parameters Type Name Description AudioApplication application System.Nullable < System.Int32 > bitrate System.Int32 bufferMillis System.Int32 packetLoss Returns Type Description AudioOutStream | Improve this Doc View Source GetStreams() Gets the current audio streams. Declaration IReadOnlyDictionary<ulong, AudioInStream> GetStreams() Returns Type Description IReadOnlyDictionary < System.UInt64 , AudioInStream > | Improve this Doc View Source StopAsync() Declaration Task StopAsync() Returns Type Description Task Events | Improve this Doc View Source Connected Declaration event Func<Task> Connected Event Type Type Description Func < Task > | Improve this Doc View Source Disconnected Declaration event Func<Exception, Task> Disconnected Event Type Type Description Func < Exception , Task > | Improve this Doc View Source LatencyUpdated Declaration event Func<int, int, Task> LatencyUpdated Event Type Type Description Func < System.Int32 , System.Int32 , Task > | Improve this Doc View Source SpeakingUpdated Declaration event Func<ulong, bool, Task> SpeakingUpdated Event Type Type Description Func < System.UInt64 , System.Boolean , Task > | Improve this Doc View Source StreamCreated Declaration event Func<ulong, AudioInStream, Task> StreamCreated Event Type Type Description Func < System.UInt64 , AudioInStream , Task > | Improve this Doc View Source StreamDestroyed Declaration event Func<ulong, Task> StreamDestroyed Event Type Type Description Func < System.UInt64 , Task > | Improve this Doc View Source UdpLatencyUpdated Declaration event Func<int, int, Task> UdpLatencyUpdated Event Type Type Description Func < System.Int32 , System.Int32 , Task >"
  },
  "api/KaiHeiLa.Audio.RTPFrame.html": {
    "href": "api/KaiHeiLa.Audio.RTPFrame.html",
    "title": "Struct RTPFrame | KaiHeiLa.Net 文档",
    "keywords": "Struct RTPFrame Namespace : KaiHeiLa.Audio Assembly : KaiHeiLa.Net.Core.dll Syntax public struct RTPFrame Constructors | Improve this Doc View Source RTPFrame(UInt16, UInt32, Byte[], Boolean) Declaration public RTPFrame(ushort sequence, uint timestamp, byte[] payload, bool missed) Parameters Type Name Description System.UInt16 sequence System.UInt32 timestamp System.Byte [] payload System.Boolean missed Fields | Improve this Doc View Source Missed Declaration public readonly bool Missed Field Value Type Description System.Boolean | Improve this Doc View Source Payload Declaration public readonly byte[] Payload Field Value Type Description System.Byte [] | Improve this Doc View Source Sequence Declaration public readonly ushort Sequence Field Value Type Description System.UInt16 | Improve this Doc View Source Timestamp Declaration public readonly uint Timestamp Field Value Type Description System.UInt32"
  },
  "api/KaiHeiLa.Audio.SecretBox.html": {
    "href": "api/KaiHeiLa.Audio.SecretBox.html",
    "title": "Class SecretBox | KaiHeiLa.Net 文档",
    "keywords": "Class SecretBox Inheritance System.Object SecretBox Namespace : KaiHeiLa.Audio Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public static class SecretBox : object Methods | Improve this Doc View Source Decrypt(Byte[], Int32, Int32, Byte[], Int32, Byte[], Byte[]) Declaration public static int Decrypt(byte[] input, int inputOffset, int inputLength, byte[] output, int outputOffset, byte[] nonce, byte[] secret) Parameters Type Name Description System.Byte [] input System.Int32 inputOffset System.Int32 inputLength System.Byte [] output System.Int32 outputOffset System.Byte [] nonce System.Byte [] secret Returns Type Description System.Int32 | Improve this Doc View Source Encrypt(Byte[], Int32, Int32, Byte[], Int32, Byte[], Byte[]) Declaration public static int Encrypt(byte[] input, int inputOffset, int inputLength, byte[] output, int outputOffset, byte[] nonce, byte[] secret) Parameters Type Name Description System.Byte [] input System.Int32 inputOffset System.Int32 inputLength System.Byte [] output System.Int32 outputOffset System.Byte [] nonce System.Byte [] secret Returns Type Description System.Int32"
  },
  "api/KaiHeiLa.Audio.Streams.BufferedWriteStream.html": {
    "href": "api/KaiHeiLa.Audio.Streams.BufferedWriteStream.html",
    "title": "Class BufferedWriteStream | KaiHeiLa.Net 文档",
    "keywords": "Class BufferedWriteStream Wraps another stream with a timed buffer. Inheritance System.Object AudioStream AudioOutStream BufferedWriteStream Inherited Members AudioOutStream.CanWrite AudioOutStream.Read(Byte[], Int32, Int32) AudioOutStream.SetLength(Int64) AudioOutStream.Seek(Int64, SeekOrigin) AudioStream.CanRead AudioStream.CanSeek AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.Length AudioStream.Position Namespace : KaiHeiLa.Audio.Streams Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class BufferedWriteStream : AudioOutStream Constructors | Improve this Doc View Source BufferedWriteStream(AudioStream, IAudioClient, Int32, CancellationToken, Int32) Declaration public BufferedWriteStream(AudioStream next, IAudioClient client, int bufferMillis, CancellationToken cancelToken, int maxFrameSize = 1500) Parameters Type Name Description AudioStream next IAudioClient client System.Int32 bufferMillis CancellationToken cancelToken System.Int32 maxFrameSize Methods | Improve this Doc View Source ClearAsync(CancellationToken) Declaration public override Task ClearAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public override Task FlushAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] data, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] data System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteHeader(UInt16, UInt32, Boolean) Declaration public override void WriteHeader(ushort seq, uint timestamp, bool missed) Parameters Type Name Description System.UInt16 seq System.UInt32 timestamp System.Boolean missed"
  },
  "api/KaiHeiLa.Audio.Streams.html": {
    "href": "api/KaiHeiLa.Audio.Streams.html",
    "title": "Namespace KaiHeiLa.Audio.Streams | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.Audio.Streams Classes BufferedWriteStream Wraps another stream with a timed buffer. InputStream Reads the payload from an RTP frame OpusDecodeStream Converts Opus to PCM OpusEncodeStream Converts PCM to Opus OutputStream Wraps an IAudioClient, sending voice data on write. RTPReadStream Reads the payload from an RTP frame RTPWriteStream Wraps data in an RTP frame SodiumDecryptStream Decrypts an RTP frame using libsodium. SodiumEncryptStream Encrypts an RTP frame using libsodium."
  },
  "api/KaiHeiLa.Audio.Streams.InputStream.html": {
    "href": "api/KaiHeiLa.Audio.Streams.InputStream.html",
    "title": "Class InputStream | KaiHeiLa.Net 文档",
    "keywords": "Class InputStream Reads the payload from an RTP frame Inheritance System.Object AudioStream AudioInStream InputStream Inherited Members AudioInStream.FlushAsync(CancellationToken) AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.ClearAsync(CancellationToken) AudioStream.Length AudioStream.Position AudioStream.Read(Byte[], Int32, Int32) AudioStream.SetLength(Int64) AudioStream.Seek(Int64, SeekOrigin) Namespace : KaiHeiLa.Audio.Streams Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class InputStream : AudioInStream Constructors | Improve this Doc View Source InputStream() Declaration public InputStream() Properties | Improve this Doc View Source AvailableFrames Declaration public override int AvailableFrames { get; } Property Value Type Description System.Int32 Overrides AudioInStream.AvailableFrames | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description System.Boolean Overrides AudioInStream.CanRead | Improve this Doc View Source CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description System.Boolean Overrides AudioStream.CanSeek | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean Overrides AudioInStream.CanWrite Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool isDisposing) Parameters Type Name Description System.Boolean isDisposing | Improve this Doc View Source ReadAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source ReadFrameAsync(CancellationToken) Declaration public override Task<RTPFrame> ReadFrameAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task < RTPFrame > | Improve this Doc View Source TryReadFrame(CancellationToken, out RTPFrame) Declaration public override bool TryReadFrame(CancellationToken cancelToken, out RTPFrame frame) Parameters Type Name Description CancellationToken cancelToken RTPFrame frame Returns Type Description System.Boolean | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteHeader(UInt16, UInt32, Boolean) Declaration public override void WriteHeader(ushort seq, uint timestamp, bool missed) Parameters Type Name Description System.UInt16 seq System.UInt32 timestamp System.Boolean missed"
  },
  "api/KaiHeiLa.Audio.Streams.OpusDecodeStream.html": {
    "href": "api/KaiHeiLa.Audio.Streams.OpusDecodeStream.html",
    "title": "Class OpusDecodeStream | KaiHeiLa.Net 文档",
    "keywords": "Class OpusDecodeStream Converts Opus to PCM Inheritance System.Object AudioStream AudioOutStream OpusDecodeStream Inherited Members AudioOutStream.CanWrite AudioOutStream.Read(Byte[], Int32, Int32) AudioOutStream.SetLength(Int64) AudioOutStream.Seek(Int64, SeekOrigin) AudioStream.CanRead AudioStream.CanSeek AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.Length AudioStream.Position Namespace : KaiHeiLa.Audio.Streams Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class OpusDecodeStream : AudioOutStream Constructors | Improve this Doc View Source OpusDecodeStream(AudioStream) Declaration public OpusDecodeStream(AudioStream next) Parameters Type Name Description AudioStream next Fields | Improve this Doc View Source SampleRate Declaration public const int SampleRate = null Field Value Type Description System.Int32 Methods | Improve this Doc View Source ClearAsync(CancellationToken) Declaration public override Task ClearAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public override Task FlushAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteHeader(UInt16, UInt32, Boolean) Declaration public override void WriteHeader(ushort seq, uint timestamp, bool missed) Parameters Type Name Description System.UInt16 seq System.UInt32 timestamp System.Boolean missed"
  },
  "api/KaiHeiLa.Audio.Streams.OpusEncodeStream.html": {
    "href": "api/KaiHeiLa.Audio.Streams.OpusEncodeStream.html",
    "title": "Class OpusEncodeStream | KaiHeiLa.Net 文档",
    "keywords": "Class OpusEncodeStream Converts PCM to Opus Inheritance System.Object AudioStream AudioOutStream OpusEncodeStream Inherited Members AudioOutStream.CanWrite AudioOutStream.Read(Byte[], Int32, Int32) AudioOutStream.SetLength(Int64) AudioOutStream.Seek(Int64, SeekOrigin) AudioStream.CanRead AudioStream.CanSeek AudioStream.WriteHeader(UInt16, UInt32, Boolean) AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.Length AudioStream.Position Namespace : KaiHeiLa.Audio.Streams Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class OpusEncodeStream : AudioOutStream Constructors | Improve this Doc View Source OpusEncodeStream(AudioStream, Int32, AudioApplication, Int32) Declaration public OpusEncodeStream(AudioStream next, int bitrate, AudioApplication application, int packetLoss) Parameters Type Name Description AudioStream next System.Int32 bitrate AudioApplication application System.Int32 packetLoss Fields | Improve this Doc View Source SampleRate Declaration public const int SampleRate = null Field Value Type Description System.Int32 Methods | Improve this Doc View Source ClearAsync(CancellationToken) Declaration public override Task ClearAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public override Task FlushAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task"
  },
  "api/KaiHeiLa.Audio.Streams.OutputStream.html": {
    "href": "api/KaiHeiLa.Audio.Streams.OutputStream.html",
    "title": "Class OutputStream | KaiHeiLa.Net 文档",
    "keywords": "Class OutputStream Wraps an IAudioClient, sending voice data on write. Inheritance System.Object AudioStream AudioOutStream OutputStream Inherited Members AudioOutStream.CanWrite AudioOutStream.Read(Byte[], Int32, Int32) AudioOutStream.SetLength(Int64) AudioOutStream.Seek(Int64, SeekOrigin) AudioStream.CanRead AudioStream.CanSeek AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.ClearAsync(CancellationToken) AudioStream.Length AudioStream.Position Namespace : KaiHeiLa.Audio.Streams Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class OutputStream : AudioOutStream Constructors | Improve this Doc View Source OutputStream(IAudioClient) Declaration public OutputStream(IAudioClient client) Parameters Type Name Description IAudioClient client Methods | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteHeader(UInt16, UInt32, Boolean) Declaration public override void WriteHeader(ushort seq, uint timestamp, bool missed) Parameters Type Name Description System.UInt16 seq System.UInt32 timestamp System.Boolean missed"
  },
  "api/KaiHeiLa.Audio.Streams.RTPReadStream.html": {
    "href": "api/KaiHeiLa.Audio.Streams.RTPReadStream.html",
    "title": "Class RTPReadStream | KaiHeiLa.Net 文档",
    "keywords": "Class RTPReadStream Reads the payload from an RTP frame Inheritance System.Object AudioStream AudioOutStream RTPReadStream Inherited Members AudioOutStream.Read(Byte[], Int32, Int32) AudioOutStream.SetLength(Int64) AudioOutStream.Seek(Int64, SeekOrigin) AudioStream.WriteHeader(UInt16, UInt32, Boolean) AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.ClearAsync(CancellationToken) AudioStream.Length AudioStream.Position Namespace : KaiHeiLa.Audio.Streams Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class RTPReadStream : AudioOutStream Constructors | Improve this Doc View Source RTPReadStream(AudioStream, Int32) Declaration public RTPReadStream(AudioStream next, int bufferSize = 4000) Parameters Type Name Description AudioStream next System.Int32 bufferSize Properties | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description System.Boolean Overrides AudioStream.CanRead | Improve this Doc View Source CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description System.Boolean Overrides AudioStream.CanSeek | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean Overrides AudioOutStream.CanWrite Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source GetHeaderSize(Byte[], Int32) Declaration public static int GetHeaderSize(byte[] buffer, int offset) Parameters Type Name Description System.Byte [] buffer System.Int32 offset Returns Type Description System.Int32 | Improve this Doc View Source TryReadSsrc(Byte[], Int32, out UInt32) Declaration public static bool TryReadSsrc(byte[] buffer, int offset, out uint ssrc) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.UInt32 ssrc Returns Type Description System.Boolean | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task"
  },
  "api/KaiHeiLa.Audio.Streams.RTPWriteStream.html": {
    "href": "api/KaiHeiLa.Audio.Streams.RTPWriteStream.html",
    "title": "Class RTPWriteStream | KaiHeiLa.Net 文档",
    "keywords": "Class RTPWriteStream Wraps data in an RTP frame Inheritance System.Object AudioStream AudioOutStream RTPWriteStream Inherited Members AudioOutStream.CanWrite AudioOutStream.Read(Byte[], Int32, Int32) AudioOutStream.SetLength(Int64) AudioOutStream.Seek(Int64, SeekOrigin) AudioStream.CanRead AudioStream.CanSeek AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.Length AudioStream.Position Namespace : KaiHeiLa.Audio.Streams Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class RTPWriteStream : AudioOutStream Constructors | Improve this Doc View Source RTPWriteStream(AudioStream, UInt32, Int32) Declaration public RTPWriteStream(AudioStream next, uint ssrc, int bufferSize = 4000) Parameters Type Name Description AudioStream next System.UInt32 ssrc System.Int32 bufferSize Fields | Improve this Doc View Source _buffer Declaration protected readonly byte[] _buffer Field Value Type Description System.Byte [] Methods | Improve this Doc View Source ClearAsync(CancellationToken) Declaration public override Task ClearAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public override Task FlushAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteHeader(UInt16, UInt32, Boolean) Declaration public override void WriteHeader(ushort seq, uint timestamp, bool missed) Parameters Type Name Description System.UInt16 seq System.UInt32 timestamp System.Boolean missed"
  },
  "api/KaiHeiLa.Audio.Streams.SodiumDecryptStream.html": {
    "href": "api/KaiHeiLa.Audio.Streams.SodiumDecryptStream.html",
    "title": "Class SodiumDecryptStream | KaiHeiLa.Net 文档",
    "keywords": "Class SodiumDecryptStream Decrypts an RTP frame using libsodium. Inheritance System.Object AudioStream AudioOutStream SodiumDecryptStream Inherited Members AudioOutStream.Read(Byte[], Int32, Int32) AudioOutStream.SetLength(Int64) AudioOutStream.Seek(Int64, SeekOrigin) AudioStream.WriteHeader(UInt16, UInt32, Boolean) AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.Length AudioStream.Position Namespace : KaiHeiLa.Audio.Streams Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SodiumDecryptStream : AudioOutStream Constructors | Improve this Doc View Source SodiumDecryptStream(AudioStream, IAudioClient) Declaration public SodiumDecryptStream(AudioStream next, IAudioClient client) Parameters Type Name Description AudioStream next IAudioClient client Properties | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description System.Boolean Overrides AudioStream.CanRead | Improve this Doc View Source CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description System.Boolean Overrides AudioStream.CanSeek | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean Overrides AudioOutStream.CanWrite Methods | Improve this Doc View Source ClearAsync(CancellationToken) Declaration public override Task ClearAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public override Task FlushAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task"
  },
  "api/KaiHeiLa.Audio.Streams.SodiumEncryptStream.html": {
    "href": "api/KaiHeiLa.Audio.Streams.SodiumEncryptStream.html",
    "title": "Class SodiumEncryptStream | KaiHeiLa.Net 文档",
    "keywords": "Class SodiumEncryptStream Encrypts an RTP frame using libsodium. Inheritance System.Object AudioStream AudioOutStream SodiumEncryptStream Inherited Members AudioOutStream.CanWrite AudioOutStream.Read(Byte[], Int32, Int32) AudioOutStream.SetLength(Int64) AudioOutStream.Seek(Int64, SeekOrigin) AudioStream.CanRead AudioStream.CanSeek AudioStream.Write(Byte[], Int32, Int32) AudioStream.Flush() AudioStream.Clear() AudioStream.Length AudioStream.Position Namespace : KaiHeiLa.Audio.Streams Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SodiumEncryptStream : AudioOutStream Constructors | Improve this Doc View Source SodiumEncryptStream(AudioStream, IAudioClient) Declaration public SodiumEncryptStream(AudioStream next, IAudioClient client) Parameters Type Name Description AudioStream next IAudioClient client Methods | Improve this Doc View Source ClearAsync(CancellationToken) Declaration public override Task ClearAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public override Task FlushAsync(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancelToken) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count CancellationToken cancelToken Returns Type Description Task | Improve this Doc View Source WriteHeader(UInt16, UInt32, Boolean) Declaration public override void WriteHeader(ushort seq, uint timestamp, bool missed) Parameters Type Name Description System.UInt16 seq System.UInt32 timestamp System.Boolean missed"
  },
  "api/KaiHeiLa.AudioModule.html": {
    "href": "api/KaiHeiLa.AudioModule.html",
    "title": "Class AudioModule | KaiHeiLa.Net 文档",
    "keywords": "Class AudioModule Represents an audio module that can be used in an ICard . Inheritance System.Object AudioModule Implements IMediaModule IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class AudioModule : object, IMediaModule, IModule Properties | Improve this Doc View Source Cover Gets the cover of the audio associated with this module. Declaration public string Cover { get; } Property Value Type Description System.String A langword_csharp_string representing the cover of the audio associated with this module. | Improve this Doc View Source Source Gets the source of the media associated with this module. Declaration public string Source { get; } Property Value Type Description System.String A langword_csharp_string representing the source of the audio associated with this module. | Improve this Doc View Source Title Gets the title of the media associated with this module. Declaration public string Title { get; } Property Value Type Description System.String A langword_csharp_string representing the title of the media associated with this module. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IMediaModule IModule"
  },
  "api/KaiHeiLa.AudioModuleBuilder.html": {
    "href": "api/KaiHeiLa.AudioModuleBuilder.html",
    "title": "Class AudioModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class AudioModuleBuilder Represents a audio module builder for creating an AudioModule . Inheritance System.Object AudioModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class AudioModuleBuilder : object, IModuleBuilder Properties | Improve this Doc View Source Cover Gets or sets the cover URL of the video. Declaration public string Cover { get; set; } Property Value Type Description System.String The cover URL of the video. | Improve this Doc View Source Source Gets or sets the source URL of the video. Declaration public string Source { get; set; } Property Value Type Description System.String The source URL of the video. | Improve this Doc View Source Title Gets or sets the title of the video. Declaration public string Title { get; set; } Property Value Type Description System.String The title of the video. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source Build() Builds this builder into an AudioModule . Declaration public AudioModule Build() Returns Type Description AudioModule An AudioModule representing the built audio module object. | Improve this Doc View Source WithCover(String) Sets the cover URL of the video. Declaration public AudioModuleBuilder WithCover(string cover) Parameters Type Name Description System.String cover The cover URL of the video to be set. Returns Type Description AudioModuleBuilder The current builder. | Improve this Doc View Source WithSource(String) Sets the source URL of the video. Declaration public AudioModuleBuilder WithSource(string source) Parameters Type Name Description System.String source The source URL of the video to be set. Returns Type Description AudioModuleBuilder The current builder. | Improve this Doc View Source WithTitle(String) Sets the title of the video. Declaration public AudioModuleBuilder WithTitle(string title) Parameters Type Name Description System.String title The title of the video to be set. Returns Type Description AudioModuleBuilder The current builder. Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.BadgeStyle.html": {
    "href": "api/KaiHeiLa.BadgeStyle.html",
    "title": "Enum BadgeStyle | KaiHeiLa.Net 文档",
    "keywords": "Enum BadgeStyle Specifies the style of badges. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum BadgeStyle : int Fields Name Description GuildName The badge contains only the guild name. OnlineAndTotalMemberCount The badge contains the number of both online and all members in the guild. OnlineMemberCount The badge contains the number of online members in the guild."
  },
  "api/KaiHeiLa.BilibiliVideoEmbed.html": {
    "href": "api/KaiHeiLa.BilibiliVideoEmbed.html",
    "title": "Class BilibiliVideoEmbed | KaiHeiLa.Net 文档",
    "keywords": "Class BilibiliVideoEmbed Inheritance System.Object BilibiliVideoEmbed Implements IEmbed Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class BilibiliVideoEmbed : object, IEmbed Constructors | Improve this Doc View Source BilibiliVideoEmbed(String, String, String, String, TimeSpan, String, String) Declaration public BilibiliVideoEmbed(string url, string originUrl, string bvNumber, string iframePath, TimeSpan duration, string title, string cover) Parameters Type Name Description System.String url System.String originUrl System.String bvNumber System.String iframePath TimeSpan duration System.String title System.String cover Properties | Improve this Doc View Source BvNumber Declaration public string BvNumber { get; set; } Property Value Type Description System.String | Improve this Doc View Source Cover Declaration public string Cover { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Declaration public TimeSpan Duration { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source IframePath Declaration public string IframePath { get; set; } Property Value Type Description System.String | Improve this Doc View Source OriginUrl Declaration public string OriginUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Title Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public EmbedType Type { get; } Property Value Type Description EmbedType | Improve this Doc View Source Url Declaration public string Url { get; } Property Value Type Description System.String Implements IEmbed"
  },
  "api/KaiHeiLa.BoostLevel.html": {
    "href": "api/KaiHeiLa.BoostLevel.html",
    "title": "Enum BoostLevel | KaiHeiLa.Net 文档",
    "keywords": "Enum BoostLevel Specifies the boost level of a guild. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum BoostLevel : int Fields Name Description Level1 Boost level 1. Level2 Boost level 2. Level3 Boost level 3. Level4 Boost level 4. Level5 Boost level 5. Level6 Boost level 6. None No boost."
  },
  "api/KaiHeiLa.ButtonClickEventType.html": {
    "href": "api/KaiHeiLa.ButtonClickEventType.html",
    "title": "Enum ButtonClickEventType | KaiHeiLa.Net 文档",
    "keywords": "Enum ButtonClickEventType Specifies the event type fired when a ButtonElement is clicked. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ButtonClickEventType : int Fields Name Description Link The user will be redirected to the specified URL when the button is clicked. None Nothing will happen when the button is clicked. ReturnValue The value of the button's Value property will be submitted."
  },
  "api/KaiHeiLa.ButtonElement.html": {
    "href": "api/KaiHeiLa.ButtonElement.html",
    "title": "Class ButtonElement | KaiHeiLa.Net 文档",
    "keywords": "Class ButtonElement A button element that can be used in an IModule . Inheritance System.Object ButtonElement Implements IElement Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ButtonElement : object, IElement Properties | Improve this Doc View Source Click Gets the event type fired when the button is clicked. Declaration public ButtonClickEventType Click { get; } Property Value Type Description ButtonClickEventType A ButtonClickEventType value that represents the event type fired when the button is clicked. | Improve this Doc View Source Text Gets the text element of the button. Declaration public IElement Text { get; } Property Value Type Description IElement An IElement value that represents the text element of the button. | Improve this Doc View Source Theme Gets the theme of the button. Declaration public ButtonTheme Theme { get; } Property Value Type Description ButtonTheme A ButtonTheme value that represents the theme of the button. | Improve this Doc View Source Type Gets the theme of the button. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType value that represents the theme of the button. | Improve this Doc View Source Value Gets the value of the button. Declaration public string Value { get; } Property Value Type Description System.String A string value that represents the value of the button. Implements IElement"
  },
  "api/KaiHeiLa.ButtonElementBuilder.html": {
    "href": "api/KaiHeiLa.ButtonElementBuilder.html",
    "title": "Class ButtonElementBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class ButtonElementBuilder An element builder to build a ButtonElement . Inheritance System.Object ButtonElementBuilder Implements IElementBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ButtonElementBuilder : object, IElementBuilder Fields | Improve this Doc View Source MaxButtonTextLength Gets the maximum button text length allowed by KaiHeiLa. Declaration public const int MaxButtonTextLength = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source Click Gets or sets the type of the click event. Declaration public ButtonClickEventType Click { get; set; } Property Value Type Description ButtonClickEventType A ButtonClickEventType that represents the type of the click event. | Improve this Doc View Source Text Gets or sets the text element of the button. Declaration public IElementBuilder Text { get; set; } Property Value Type Description IElementBuilder An IElementBuilder that represents the text of the button. Remarks This property only takes a PlainTextElementBuilder or a KMarkdownElementBuilder . | Improve this Doc View Source Theme Gets or sets the theme of the button. Declaration public ButtonTheme Theme { get; set; } Property Value Type Description ButtonTheme A ButtonTheme that represents the theme of the button. | Improve this Doc View Source Type Gets the type of the element that this builder builds. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType that represents the type of element that this builder builds. | Improve this Doc View Source Value Gets or sets the value of the button. Declaration public string Value { get; set; } Property Value Type Description System.String A string that represents the value of the button. Remarks If the Click is set to ReturnValue , the value of the property will be returned when the button is clicked. Methods | Improve this Doc View Source Build() Builds the ButtonElementBuilder into a ButtonElement . Declaration public ButtonElement Build() Returns Type Description ButtonElement A ButtonElement represents the built element object. | Improve this Doc View Source WithClick(ButtonClickEventType) Sets the type of the event to be fired when the button is clicked in a ButtonElement . Declaration public ButtonElementBuilder WithClick(ButtonClickEventType click) Parameters Type Name Description ButtonClickEventType click The type of the event to be fired when the button is clicked. Returns Type Description ButtonElementBuilder The current builder. | Improve this Doc View Source WithText(KMarkdownElementBuilder) Sets the text of a ButtonElement . Declaration public ButtonElementBuilder WithText(KMarkdownElementBuilder text) Parameters Type Name Description KMarkdownElementBuilder text The builder of a KMarkdownElement , which will be set as the text of the button. Returns Type Description ButtonElementBuilder The current builder. | Improve this Doc View Source WithText(PlainTextElementBuilder) Sets the text of a ButtonElement . Declaration public ButtonElementBuilder WithText(PlainTextElementBuilder text) Parameters Type Name Description PlainTextElementBuilder text The builder of a PlainTextElement , which will be set as the text of the button. Returns Type Description ButtonElementBuilder The current builder. | Improve this Doc View Source WithText(String, Boolean) Sets the text of a ButtonElement . Declaration public ButtonElementBuilder WithText(string text, bool isKMarkdown = false) Parameters Type Name Description System.String text A string to be set as the text of the button. System.Boolean isKMarkdown A bool indicating whether the text is in KMarkdown format; if true , the text will be set as a KMarkdownElement ; if false , the text will be set as a PlainTextElement . Returns Type Description ButtonElementBuilder The current builder. | Improve this Doc View Source WithText<T>(Action<T>) Sets the text of a ButtonElement . Declaration public ButtonElementBuilder WithText<T>(Action<T> action = null) where T : IElementBuilder, new() Parameters Type Name Description Action <T> action The action to create a builder of an IElementBuilder , which will be set as the text of the button. The action must return a PlainTextElementBuilder or a KMarkdownElementBuilder . Returns Type Description ButtonElementBuilder The current builder. Type Parameters Name Description T | Improve this Doc View Source WithTheme(ButtonTheme) Sets the theme of a ButtonElement . Declaration public ButtonElementBuilder WithTheme(ButtonTheme theme) Parameters Type Name Description ButtonTheme theme The theme to be set. Returns Type Description ButtonElementBuilder The current builder. | Improve this Doc View Source WithValue(String) Sets the value of a ButtonElement . Declaration public ButtonElementBuilder WithValue(string value) Parameters Type Name Description System.String value The value to be set. Returns Type Description ButtonElementBuilder The current builder. Explicit Interface Implementations | Improve this Doc View Source IElementBuilder.Build() Builds the IElementBuilder into an IElement . Declaration IElement IElementBuilder.Build() Returns Type Description IElement An IElement represents the built element object. Implements IElementBuilder"
  },
  "api/KaiHeiLa.ButtonTheme.html": {
    "href": "api/KaiHeiLa.ButtonTheme.html",
    "title": "Enum ButtonTheme | KaiHeiLa.Net 文档",
    "keywords": "Enum ButtonTheme Specifies the theme of a ButtonElement . Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ButtonTheme : int Fields Name Description Danger The button is a danger button. Info The button is an info button. Primary The button is a primary button. Secondary The button is a secondary button. Success The button is a success button. Warning The button is a warning button."
  },
  "api/KaiHeiLa.Cacheable-2.html": {
    "href": "api/KaiHeiLa.Cacheable-2.html",
    "title": "Struct Cacheable<TEntity, TId> | KaiHeiLa.Net 文档",
    "keywords": "Struct Cacheable<TEntity, TId> Represents a cached entity. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct Cacheable<TEntity, TId> where TEntity : IEntity<TId> where TId : IEquatable<TId> Type Parameters Name Description TEntity The type of entity that is cached. TId The type of this entity's ID. Properties | Improve this Doc View Source HasValue Gets whether this entity is cached. Declaration public bool HasValue { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Id Gets the ID of this entity. Declaration public TId Id { get; } Property Value Type Description TId | Improve this Doc View Source Value Gets the entity if it could be pulled from cache. Declaration public TEntity Value { get; } Property Value Type Description TEntity Remarks This value is not guaranteed to be set; in cases where the entity cannot be pulled from cache, it is null . Methods | Improve this Doc View Source DownloadAsync() Downloads this entity to cache. Declaration public Task<TEntity> DownloadAsync() Returns Type Description Task <TEntity> A task that represents the asynchronous download operation. The task result contains the downloaded entity. Exceptions Type Condition HttpException Thrown when used from a user account. | Improve this Doc View Source GetOrDownloadAsync() Returns the cached entity if it exists; otherwise downloads it. Declaration public Task<TEntity> GetOrDownloadAsync() Returns Type Description Task <TEntity> A task that represents the asynchronous operation that attempts to get the message via cache or to download the message. The task result contains the downloaded entity. Exceptions Type Condition HttpException Thrown when used from a user account."
  },
  "api/KaiHeiLa.Cacheable-4.html": {
    "href": "api/KaiHeiLa.Cacheable-4.html",
    "title": "Struct Cacheable<TCachedEntity, TDownloadableEntity, TRelationship, TId> | KaiHeiLa.Net 文档",
    "keywords": "Struct Cacheable<TCachedEntity, TDownloadableEntity, TRelationship, TId> Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct Cacheable<TCachedEntity, TDownloadableEntity, TRelationship, TId> where TCachedEntity : IEntity<TId>, TRelationship where TDownloadableEntity : IEntity<TId>, TRelationship where TId : IEquatable<TId> Type Parameters Name Description TCachedEntity TDownloadableEntity TRelationship TId Properties | Improve this Doc View Source HasValue Gets whether this entity is cached. Declaration public bool HasValue { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Id Gets the ID of this entity. Declaration public TId Id { get; } Property Value Type Description TId | Improve this Doc View Source Value Gets the entity if it could be pulled from cache. Declaration public TCachedEntity Value { get; } Property Value Type Description TCachedEntity Remarks This value is not guaranteed to be set; in cases where the entity cannot be pulled from cache, it is null . Methods | Improve this Doc View Source DownloadAsync() Downloads this entity. Declaration public Task<TDownloadableEntity> DownloadAsync() Returns Type Description Task <TDownloadableEntity> A task that represents the asynchronous download operation. The task result contains the downloaded entity. Exceptions Type Condition HttpException Thrown when used from a user account. | Improve this Doc View Source GetOrDownloadAsync() Returns the cached entity if it exists; otherwise downloads it. Declaration public Task<TRelationship> GetOrDownloadAsync() Returns Type Description Task <TRelationship> A task that represents the asynchronous operation that attempts to get the message via cache or to download the message. The task result contains the downloaded entity. Exceptions Type Condition HttpException Thrown when used from a user account."
  },
  "api/KaiHeiLa.CacheMode.html": {
    "href": "api/KaiHeiLa.CacheMode.html",
    "title": "Enum CacheMode | KaiHeiLa.Net 文档",
    "keywords": "Enum CacheMode Specifies the cache mode that should be used. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum CacheMode : int Fields Name Description AllowDownload Allows the object to be downloaded if it does not exist in the current cache. CacheOnly Only allows the object to be pulled from the existing cache."
  },
  "api/KaiHeiLa.Card.html": {
    "href": "api/KaiHeiLa.Card.html",
    "title": "Class Card | KaiHeiLa.Net 文档",
    "keywords": "Class Card Represents a card object seen in an IUserMessage . Inheritance System.Object Card Implements ICard Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class Card : object, ICard Properties | Improve this Doc View Source Color Gets the color of this embed. Declaration public Color? Color { get; } Property Value Type Description System.Nullable < Color > A Color represents a color present on the side of the card, or null if none is set. | Improve this Doc View Source ModuleCount Gets the number of the modules in this card. Declaration public int ModuleCount { get; } Property Value Type Description System.Int32 An langword_csharp_int value that represents how many modules are in this card. | Improve this Doc View Source Modules Gets the modules in this card. Declaration public ImmutableArray<IModule> Modules { get; } Property Value Type Description ImmutableArray < IModule > An array of the modules of the card. | Improve this Doc View Source Size Gets the size of this card. Declaration public CardSize Size { get; } Property Value Type Description CardSize A CardSize value that represents the size of this card. | Improve this Doc View Source Theme Gets the theme of this card. Declaration public CardTheme Theme { get; } Property Value Type Description CardTheme A CardTheme value that represents the theme of this card. | Improve this Doc View Source Type Gets the type of the card. Declaration public CardType Type { get; } Property Value Type Description CardType A CardType value that represents the type of the card. Implements ICard"
  },
  "api/KaiHeiLa.CardBuilder.html": {
    "href": "api/KaiHeiLa.CardBuilder.html",
    "title": "Class CardBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class CardBuilder Represents a builder class for creating a Card . Inheritance System.Object CardBuilder Implements ICardBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class CardBuilder : object, ICardBuilder Constructors | Improve this Doc View Source CardBuilder() Initializes a new instance of the CardBuilder class. Declaration public CardBuilder() Properties | Improve this Doc View Source Color Gets or sets the color displayed along the left side of the card. Declaration public Color? Color { get; set; } Property Value Type Description System.Nullable < Color > A Color value that represents the color displayed along the left side of the card. | Improve this Doc View Source Modules Gets or sets the modules in the card. Declaration public List<IModuleBuilder> Modules { get; set; } Property Value Type Description List < IModuleBuilder > A containing the modules in the card. | Improve this Doc View Source Size Gets or sets the size of the card. Declaration public CardSize Size { get; set; } Property Value Type Description CardSize A CardSize value that represents the size of the card. | Improve this Doc View Source Theme Gets or sets the theme of the card. Declaration public CardTheme Theme { get; set; } Property Value Type Description CardTheme A CardTheme value that represents the theme of the card. | Improve this Doc View Source Type Gets the type of the card. Declaration public CardType Type { get; } Property Value Type Description CardType A CardType value that represents the type of the card. Methods | Improve this Doc View Source AddModule(IModuleBuilder) Adds a module to the card. Declaration public CardBuilder AddModule(IModuleBuilder module) Parameters Type Name Description IModuleBuilder module An IModuleBuilder that represents the module to be added to the card. Returns Type Description CardBuilder The current builder. | Improve this Doc View Source AddModule<T>(Action<T>) Adds a module to the card. Declaration public CardBuilder AddModule<T>(Action<T> action = null) where T : IModuleBuilder, new() Parameters Type Name Description Action <T> action The action to adds a module to the card. Returns Type Description CardBuilder The current builder. Type Parameters Name Description T | Improve this Doc View Source Build() Builds the CardBuilder into a Card . Declaration public Card Build() Returns Type Description Card A KMarkdownElement represents the built element object. | Improve this Doc View Source WithColor(Color) Sets the color displayed along the left side of the card. Declaration public CardBuilder WithColor(Color color) Parameters Type Name Description Color color A Color value that represents the color displayed along the left side of the card to be set. Returns Type Description CardBuilder The current builder. | Improve this Doc View Source WithSize(CardSize) Sets the size of the card. Declaration public CardBuilder WithSize(CardSize size) Parameters Type Name Description CardSize size A CardSize value that represents the size of the card to be set. Returns Type Description CardBuilder The current builder. | Improve this Doc View Source WithTheme(CardTheme) Sets the theme of the card. Declaration public CardBuilder WithTheme(CardTheme theme) Parameters Type Name Description CardTheme theme A CardTheme value that represents the theme of the card to be set. Returns Type Description CardBuilder The current builder. Explicit Interface Implementations | Improve this Doc View Source ICardBuilder.Build() Builds the ICardBuilder into an ICard . Declaration ICard ICardBuilder.Build() Returns Type Description ICard An ICard represents the built card object. Implements ICardBuilder"
  },
  "api/KaiHeiLa.CardSize.html": {
    "href": "api/KaiHeiLa.CardSize.html",
    "title": "Enum CardSize | KaiHeiLa.Net 文档",
    "keywords": "Enum CardSize Specifies the size of a card. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum CardSize : int Fields Name Description Large The card is a large card. Small The card is a small card."
  },
  "api/KaiHeiLa.CardTheme.html": {
    "href": "api/KaiHeiLa.CardTheme.html",
    "title": "Enum CardTheme | KaiHeiLa.Net 文档",
    "keywords": "Enum CardTheme Specifies the theme of the card. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum CardTheme : uint Fields Name Description Danger The card shows like an error message. Info The card shows like an info message. None The card shows like a dark message. Primary The card shows like a regular message. Secondary The card shows like a light message. Success The card shows like a success message. Warning The card shows like a warning message."
  },
  "api/KaiHeiLa.CardType.html": {
    "href": "api/KaiHeiLa.CardType.html",
    "title": "Enum CardType | KaiHeiLa.Net 文档",
    "keywords": "Enum CardType Specifies the type of the card. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum CardType : int Fields Name Description Card The card is a normal card."
  },
  "api/KaiHeiLa.ChannelExtensions.html": {
    "href": "api/KaiHeiLa.ChannelExtensions.html",
    "title": "Class ChannelExtensions | KaiHeiLa.Net 文档",
    "keywords": "Class ChannelExtensions Inheritance System.Object ChannelExtensions Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public static class ChannelExtensions : object Methods | Improve this Doc View Source GetChannelType(IChannel) Attempts to get the ChannelType based off of the channel's interfaces. Declaration public static ChannelType? GetChannelType(this IChannel channel) Parameters Type Name Description IChannel channel The channel to get the type of. Returns Type Description System.Nullable < ChannelType > The ChannelType of the channel if found, otherwise null . | Improve this Doc View Source GetJumpUrl(IChannel) Gets a URL that jumps to the channel. Declaration public static string GetJumpUrl(this IChannel channel) Parameters Type Name Description IChannel channel The channel to jump to. Returns Type Description System.String A string that contains a URL for jumping to the message in chat."
  },
  "api/KaiHeiLa.ChannelPermission.html": {
    "href": "api/KaiHeiLa.ChannelPermission.html",
    "title": "Enum ChannelPermission | KaiHeiLa.Net 文档",
    "keywords": "Enum ChannelPermission Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ChannelPermission : uint Fields Name Description AddReactions Allows for the addition of reactions to messages. AttachFiles Allows for uploading images and files. Connect Allows for joining of a voice channel. CreateInvites Allows creation of invites. DeafenMembers Allows for deafening of members in a voice channel. ManageChannels Allows management and editing of channels. ManageMessages Allows for deletion of other users messages. ManageRoles Allows management and editing of roles. ManageVoice Allows for disconnection of members, and moving of members between voice channels. MentionEveryone Allows for using the everyone mention tag to notify all users in a channel, and the online mention tag to notify all online users in a channel. MuteMembers Allows for muting members in a voice channel. PassiveConnect Limits the user to connecting to a voice channel only when the user is invited or moved by others. PlaySoundtrack Allows for playing soundtracks in a voice channel. SendMessages Allows for sending messages in a channel Speak Allows for speaking in a voice channel. UseVoiceActivity Allows for speaking in voice a channel without having to press the speaking key. ViewChannel Allows guild members to view a channel, which includes reading messages in text channels."
  },
  "api/KaiHeiLa.ChannelPermissions.html": {
    "href": "api/KaiHeiLa.ChannelPermissions.html",
    "title": "Struct ChannelPermissions | KaiHeiLa.Net 文档",
    "keywords": "Struct ChannelPermissions Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct ChannelPermissions Constructors | Improve this Doc View Source ChannelPermissions(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>) Creates a new ChannelPermissions with the provided permissions. Declaration public ChannelPermissions(bool? createInvites, bool? manageChannels, bool? manageRoles, bool? viewChannel, bool? sendMessages, bool? manageMessages, bool? attachFiles, bool? connect, bool? manageVoice, bool? mentionEveryone, bool? addReactions, bool? passiveConnect, bool? useVoiceActivity, bool? speak, bool? deafenMembers, bool? muteMembers, bool? playSoundtrack) Parameters Type Name Description System.Nullable < System.Boolean > createInvites System.Nullable < System.Boolean > manageChannels System.Nullable < System.Boolean > manageRoles System.Nullable < System.Boolean > viewChannel System.Nullable < System.Boolean > sendMessages System.Nullable < System.Boolean > manageMessages System.Nullable < System.Boolean > attachFiles System.Nullable < System.Boolean > connect System.Nullable < System.Boolean > manageVoice System.Nullable < System.Boolean > mentionEveryone System.Nullable < System.Boolean > addReactions System.Nullable < System.Boolean > passiveConnect System.Nullable < System.Boolean > useVoiceActivity System.Nullable < System.Boolean > speak System.Nullable < System.Boolean > deafenMembers System.Nullable < System.Boolean > muteMembers System.Nullable < System.Boolean > playSoundtrack | Improve this Doc View Source ChannelPermissions(UInt64) Creates a new ChannelPermissions with the provided packed value. Declaration public ChannelPermissions(ulong rawValue) Parameters Type Name Description System.UInt64 rawValue Fields | Improve this Doc View Source Category Gets a ChannelPermissions that grants all permissions for category channels. Declaration public static readonly ChannelPermissions Category Field Value Type Description ChannelPermissions | Improve this Doc View Source DM Gets a ChannelPermissions that grants all permissions for direct message channels. Declaration public static readonly ChannelPermissions DM Field Value Type Description ChannelPermissions | Improve this Doc View Source None Gets a blank ChannelPermissions that grants no permissions. Declaration public static readonly ChannelPermissions None Field Value Type Description ChannelPermissions | Improve this Doc View Source Text Gets a ChannelPermissions that grants all permissions for text channels. Declaration public static readonly ChannelPermissions Text Field Value Type Description ChannelPermissions | Improve this Doc View Source Voice Gets a ChannelPermissions that grants all permissions for voice channels. Declaration public static readonly ChannelPermissions Voice Field Value Type Description ChannelPermissions Properties | Improve this Doc View Source AddReactions If true , a user may add reactions. Declaration public bool AddReactions { get; } Property Value Type Description System.Boolean | Improve this Doc View Source AttachFiles If true , a user may send files. Declaration public bool AttachFiles { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Connect If true , a user may connect to a voice channel. Declaration public bool Connect { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CreateInvites If true , a user may create invites. Declaration public bool CreateInvites { get; } Property Value Type Description System.Boolean | Improve this Doc View Source DeafenMembers If true , a user may deafen users. Declaration public bool DeafenMembers { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageChannels If true , a user may view and revoke invites. Declaration public bool ManageChannels { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageMessages If true , a user may delete messages. Declaration public bool ManageMessages { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageRoles If true , a user may adjust roles. Declaration public bool ManageRoles { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageVoice If true , a user may kick other users from voice channels, and move other users between voice channels. Declaration public bool ManageVoice { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MentionEveryone If true , a user may mention all users. Declaration public bool MentionEveryone { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MuteMembers If true , a user may mute users. Declaration public bool MuteMembers { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PassiveConnect If true , a user may connect to a voice channel only when the user is invited or moved by other users. Declaration public bool PassiveConnect { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PlaySoundtrack If true , a user may play soundtracks in a voice channel. Declaration public bool PlaySoundtrack { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RawValue Gets a packed value representing all the permissions in this ChannelPermissions . Declaration public ulong RawValue { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source SendMessages If true , a user may send messages. Declaration public bool SendMessages { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Speak If true , a user may speak in a voice channel. Declaration public bool Speak { get; } Property Value Type Description System.Boolean | Improve this Doc View Source UseVoiceActivity If true , a user may use voice activation. Declaration public bool UseVoiceActivity { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ViewChannel If true , a user may view channels. Declaration public bool ViewChannel { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source All(IChannel) Gets a ChannelPermissions that grants all permissions for a given channel type. Declaration public static ChannelPermissions All(IChannel channel) Parameters Type Name Description IChannel channel Returns Type Description ChannelPermissions | Improve this Doc View Source Has(ChannelPermission) Returns a value that indicates if a specific ChannelPermission is enabled in these permissions. Declaration public bool Has(ChannelPermission permission) Parameters Type Name Description ChannelPermission permission The permission value to check for. Returns Type Description System.Boolean true if the permission is enabled, false otherwise. | Improve this Doc View Source Modify(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>) Creates a new ChannelPermissions from this one, changing the provided non-null permissions. Declaration public ChannelPermissions Modify(bool? createInvites = null, bool? manageChannels = null, bool? manageRoles = null, bool? viewChannel = null, bool? sendMessages = null, bool? manageMessages = null, bool? attachFiles = null, bool? connect = null, bool? manageVoice = null, bool? mentionEveryone = null, bool? addReactions = null, bool? passiveConnect = null, bool? useVoiceActivity = null, bool? speak = null, bool? deafenMembers = null, bool? muteMembers = null, bool? playSoundtrack = null) Parameters Type Name Description System.Nullable < System.Boolean > createInvites System.Nullable < System.Boolean > manageChannels System.Nullable < System.Boolean > manageRoles System.Nullable < System.Boolean > viewChannel System.Nullable < System.Boolean > sendMessages System.Nullable < System.Boolean > manageMessages System.Nullable < System.Boolean > attachFiles System.Nullable < System.Boolean > connect System.Nullable < System.Boolean > manageVoice System.Nullable < System.Boolean > mentionEveryone System.Nullable < System.Boolean > addReactions System.Nullable < System.Boolean > passiveConnect System.Nullable < System.Boolean > useVoiceActivity System.Nullable < System.Boolean > speak System.Nullable < System.Boolean > deafenMembers System.Nullable < System.Boolean > muteMembers System.Nullable < System.Boolean > playSoundtrack Returns Type Description ChannelPermissions | Improve this Doc View Source ToList() Returns a containing all of the ChannelPermission flags that are enabled. Declaration public List<ChannelPermission> ToList() Returns Type Description List < ChannelPermission > A containing ChannelPermission flags. Empty if none are enabled. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/KaiHeiLa.ChannelType.html": {
    "href": "api/KaiHeiLa.ChannelType.html",
    "title": "Enum ChannelType | KaiHeiLa.Net 文档",
    "keywords": "Enum ChannelType Specifies the type of a guild channel. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ChannelType : int Fields Name Description Category Specifies that the channel is a guild category channel. DM Specifies that the channel is a direct message channel. Text Specifies that the channel is a guild text channel. Unspecified Specifies that the type of the channel is unknown. Voice Specifies that the channel is a guild voice channel."
  },
  "api/KaiHeiLa.ClientType.html": {
    "href": "api/KaiHeiLa.ClientType.html",
    "title": "Enum ClientType | KaiHeiLa.Net 文档",
    "keywords": "Enum ClientType Defines the types of clients a user can be active on. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ClientType : int Fields Name Description Android The user is active using the Android application. iOS The user is active using the iOS application. WebSocket The user is active using a WebSocket connection to the server."
  },
  "api/KaiHeiLa.Color.html": {
    "href": "api/KaiHeiLa.Color.html",
    "title": "Struct Color | KaiHeiLa.Net 文档",
    "keywords": "Struct Color Represents a color used in KaiHeiLa. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct Color Constructors | Improve this Doc View Source Color(Byte, Byte, Byte) Initializes a Color struct with the given RGB bytes. Declaration public Color(byte r, byte g, byte b) Parameters Type Name Description System.Byte r The byte that represents the red color. System.Byte g The byte that represents the green color. System.Byte b The byte that represents the blue color. Examples The following will create a color that has a value of #607D8B . Color darkGrey = new Color((byte)0b_01100000, (byte)0b_01111101, (byte)0b_10001011); | Improve this Doc View Source Color(Int32, Int32, Int32) Initializes a Color struct with the given RGB value. Declaration public Color(int r, int g, int b) Parameters Type Name Description System.Int32 r The value that represents the red color. Must be within 0~255. System.Int32 g The value that represents the green color. Must be within 0~255. System.Int32 b The value that represents the blue color. Must be within 0~255. Examples The following will create a color that has a value of #607D8B . Color darkGrey = new Color(96, 125, 139); | Improve this Doc View Source Color(Single, Single, Single) Initializes a Color struct with the given RGB float value. Declaration public Color(float r, float g, float b) Parameters Type Name Description System.Single r The value that represents the red color. Must be within 0~1. System.Single g The value that represents the green color. Must be within 0~1. System.Single b The value that represents the blue color. Must be within 0~1. Examples The following will create a color that has a value of #607c8c . Color darkGrey = new Color(0.38f, 0.49f, 0.55f); | Improve this Doc View Source Color(UInt32) Initializes a Color struct with the given raw value. Declaration public Color(uint rawValue) Parameters Type Name Description System.UInt32 rawValue The raw value of the color (e.g. 0x607D8B ). Examples The following will create a color that has a hex value of #607D8B . Color darkGrey = new Color(0x607D8B); Fields | Improve this Doc View Source Blue Gets the blue color value. Declaration public static readonly Color Blue Field Value Type Description Color A color struct with the hex value of 3498DB . | Improve this Doc View Source DarkBlue Gets the dark blue color value. Declaration public static readonly Color DarkBlue Field Value Type Description Color A color struct with the hex value of 206694 . | Improve this Doc View Source DarkerGrey Gets the darker grey color value. Declaration public static readonly Color DarkerGrey Field Value Type Description Color A color struct with the hex value of 546E7A . | Improve this Doc View Source DarkGreen Gets the dark green color value. Declaration public static readonly Color DarkGreen Field Value Type Description Color A color struct with the hex value of 1F8B4C . | Improve this Doc View Source DarkGrey Gets the dark grey color value. Declaration public static readonly Color DarkGrey Field Value Type Description Color A color struct with the hex value of 607D8B . | Improve this Doc View Source DarkMagenta Gets the dark magenta color value. Declaration public static readonly Color DarkMagenta Field Value Type Description Color A color struct with the hex value of AD1457 . | Improve this Doc View Source DarkOrange Gets the dark orange color value. Declaration public static readonly Color DarkOrange Field Value Type Description Color A color struct with the hex value of A84300 . | Improve this Doc View Source DarkPurple Gets the dark purple color value. Declaration public static readonly Color DarkPurple Field Value Type Description Color A color struct with the hex value of 71368A . | Improve this Doc View Source DarkRed Gets the dark red color value. Declaration public static readonly Color DarkRed Field Value Type Description Color A color struct with the hex value of 992D22 . | Improve this Doc View Source DarkTeal Gets the dark teal color value. Declaration public static readonly Color DarkTeal Field Value Type Description Color A color struct with the hex value of 11806A . | Improve this Doc View Source Default Gets the default user color value. Declaration public static readonly Color Default Field Value Type Description Color | Improve this Doc View Source Gold Gets the gold color value. Declaration public static readonly Color Gold Field Value Type Description Color A color struct with the hex value of F1C40F . | Improve this Doc View Source Green Gets the green color value. Declaration public static readonly Color Green Field Value Type Description Color A color struct with the hex value of 2ECC71 . | Improve this Doc View Source LighterGrey Gets the lighter grey color value. Declaration public static readonly Color LighterGrey Field Value Type Description Color A color struct with the hex value of 95A5A6 . | Improve this Doc View Source LightGrey Gets the light grey color value. Declaration public static readonly Color LightGrey Field Value Type Description Color A color struct with the hex value of 979C9F . | Improve this Doc View Source LightOrange Gets the light orange color value. Declaration public static readonly Color LightOrange Field Value Type Description Color A color struct with the hex value of C27C0E . | Improve this Doc View Source Magenta Gets the magenta color value. Declaration public static readonly Color Magenta Field Value Type Description Color A color struct with the hex value of E91E63 . | Improve this Doc View Source MaxDecimalValue Gets the max decimal value of color. Declaration public const uint MaxDecimalValue = null Field Value Type Description System.UInt32 | Improve this Doc View Source Orange Gets the orange color value. Declaration public static readonly Color Orange Field Value Type Description Color A color struct with the hex value of E67E22 . | Improve this Doc View Source Purple Gets the purple color value. Declaration public static readonly Color Purple Field Value Type Description Color A color struct with the hex value of 9B59B6 . | Improve this Doc View Source Red Gets the red color value. Declaration public static readonly Color Red Field Value Type Description Color A color struct with the hex value of E74C3C . | Improve this Doc View Source Teal Gets the teal color value. Declaration public static readonly Color Teal Field Value Type Description Color A color struct with the hex value of 1ABC9C . Properties | Improve this Doc View Source B Gets the blue component for this color. Declaration public byte B { get; } Property Value Type Description System.Byte | Improve this Doc View Source G Gets the green component for this color. Declaration public byte G { get; } Property Value Type Description System.Byte | Improve this Doc View Source R Gets the red component for this color. Declaration public byte R { get; } Property Value Type Description System.Byte | Improve this Doc View Source RawValue Gets the encoded value for this color. Declaration public uint RawValue { get; } Property Value Type Description System.UInt32 Remarks This value is encoded as an unsigned integer value. The most-significant 8 bits contain the red value, the middle 8 bits contain the green value, and the least-significant 8 bits contain the blue value. Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source ToString() Gets the hexadecimal representation of the color (e.g. #000ccc ). Declaration public override string ToString() Returns Type Description System.String A hexadecimal string of the color. Operators | Improve this Doc View Source Equality(Color, Color) Declaration public static bool operator ==(Color lhs, Color rhs) Parameters Type Name Description Color lhs Color rhs Returns Type Description System.Boolean | Improve this Doc View Source Explicit(System.Drawing.Color to Color) Declaration public static explicit operator Color(System.Drawing.Color color) Parameters Type Name Description System.Drawing.Color color Returns Type Description Color | Improve this Doc View Source Implicit(Color to System.Drawing.Color) Declaration public static implicit operator System.Drawing.Color(Color color) Parameters Type Name Description Color color Returns Type Description System.Drawing.Color | Improve this Doc View Source Implicit(Color to UInt32) Declaration public static implicit operator uint (Color color) Parameters Type Name Description Color color Returns Type Description System.UInt32 | Improve this Doc View Source Implicit(UInt32 to Color) Declaration public static implicit operator Color(uint rawValue) Parameters Type Name Description System.UInt32 rawValue Returns Type Description Color | Improve this Doc View Source Inequality(Color, Color) Declaration public static bool operator !=(Color lhs, Color rhs) Parameters Type Name Description Color lhs Color rhs Returns Type Description System.Boolean"
  },
  "api/KaiHeiLa.Commands.AliasAttribute.html": {
    "href": "api/KaiHeiLa.Commands.AliasAttribute.html",
    "title": "Class AliasAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class AliasAttribute Marks the aliases for a command. Inheritance System.Object AliasAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class AliasAttribute : Attribute Remarks This attribute allows a command to have one or multiple aliases. In other words, the base command can have multiple aliases when triggering the command itself, giving the end-user more freedom of choices when giving hot-words to trigger the desired command. See the example for a better illustration. Examples In the following example, the command can be triggered with the base name, \"stats\", or either \"stat\" or \"info\". [Command(\"stats\")] [Alias(\"stat\", \"info\")] public async Task GetStatsAsync(IUser user) { // ...pull stats } Constructors | Improve this Doc View Source AliasAttribute(String[]) Creates a new AliasAttribute with the given aliases. Declaration public AliasAttribute(params string[] aliases) Parameters Type Name Description System.String [] aliases Properties | Improve this Doc View Source Aliases Gets the aliases which have been defined for the command. Declaration public string[] Aliases { get; } Property Value Type Description System.String []"
  },
  "api/KaiHeiLa.Commands.Builders.CommandBuilder.html": {
    "href": "api/KaiHeiLa.Commands.Builders.CommandBuilder.html",
    "title": "Class CommandBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class CommandBuilder Inheritance System.Object CommandBuilder Namespace : KaiHeiLa.Commands.Builders Assembly : KaiHeiLa.Net.Commands.dll Syntax public class CommandBuilder : object Properties | Improve this Doc View Source Aliases Declaration public IReadOnlyList<string> Aliases { get; } Property Value Type Description IReadOnlyList < System.String > | Improve this Doc View Source Attributes Declaration public IReadOnlyList<Attribute> Attributes { get; } Property Value Type Description IReadOnlyList < Attribute > | Improve this Doc View Source IgnoreExtraArgs Declaration public bool IgnoreExtraArgs { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Module Declaration public ModuleBuilder Module { get; } Property Value Type Description ModuleBuilder | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Parameters Declaration public IReadOnlyList<ParameterBuilder> Parameters { get; } Property Value Type Description IReadOnlyList < ParameterBuilder > | Improve this Doc View Source Preconditions Declaration public IReadOnlyList<PreconditionAttribute> Preconditions { get; } Property Value Type Description IReadOnlyList < PreconditionAttribute > | Improve this Doc View Source PrimaryAlias Declaration public string PrimaryAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source Priority Declaration public int Priority { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Remarks Declaration public string Remarks { get; set; } Property Value Type Description System.String | Improve this Doc View Source RunMode Declaration public RunMode RunMode { get; set; } Property Value Type Description RunMode | Improve this Doc View Source Summary Declaration public string Summary { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source AddAliases(String[]) Declaration public CommandBuilder AddAliases(params string[] aliases) Parameters Type Name Description System.String [] aliases Returns Type Description CommandBuilder | Improve this Doc View Source AddAttributes(Attribute[]) Declaration public CommandBuilder AddAttributes(params Attribute[] attributes) Parameters Type Name Description Attribute [] attributes Returns Type Description CommandBuilder | Improve this Doc View Source AddParameter(String, Type, Action<ParameterBuilder>) Declaration public CommandBuilder AddParameter(string name, Type type, Action<ParameterBuilder> createFunc) Parameters Type Name Description System.String name Type type Action < ParameterBuilder > createFunc Returns Type Description CommandBuilder | Improve this Doc View Source AddParameter<T>(String, Action<ParameterBuilder>) Declaration public CommandBuilder AddParameter<T>(string name, Action<ParameterBuilder> createFunc) Parameters Type Name Description System.String name Action < ParameterBuilder > createFunc Returns Type Description CommandBuilder Type Parameters Name Description T | Improve this Doc View Source AddPrecondition(PreconditionAttribute) Declaration public CommandBuilder AddPrecondition(PreconditionAttribute precondition) Parameters Type Name Description PreconditionAttribute precondition Returns Type Description CommandBuilder | Improve this Doc View Source WithName(String) Declaration public CommandBuilder WithName(string name) Parameters Type Name Description System.String name Returns Type Description CommandBuilder | Improve this Doc View Source WithPriority(Int32) Declaration public CommandBuilder WithPriority(int priority) Parameters Type Name Description System.Int32 priority Returns Type Description CommandBuilder | Improve this Doc View Source WithRemarks(String) Declaration public CommandBuilder WithRemarks(string remarks) Parameters Type Name Description System.String remarks Returns Type Description CommandBuilder | Improve this Doc View Source WithRunMode(RunMode) Declaration public CommandBuilder WithRunMode(RunMode runMode) Parameters Type Name Description RunMode runMode Returns Type Description CommandBuilder | Improve this Doc View Source WithSummary(String) Declaration public CommandBuilder WithSummary(string summary) Parameters Type Name Description System.String summary Returns Type Description CommandBuilder"
  },
  "api/KaiHeiLa.Commands.Builders.html": {
    "href": "api/KaiHeiLa.Commands.Builders.html",
    "title": "Namespace KaiHeiLa.Commands.Builders | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.Commands.Builders Classes CommandBuilder ModuleBuilder ParameterBuilder"
  },
  "api/KaiHeiLa.Commands.Builders.ModuleBuilder.html": {
    "href": "api/KaiHeiLa.Commands.Builders.ModuleBuilder.html",
    "title": "Class ModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class ModuleBuilder Inheritance System.Object ModuleBuilder Namespace : KaiHeiLa.Commands.Builders Assembly : KaiHeiLa.Net.Commands.dll Syntax public class ModuleBuilder : object Properties | Improve this Doc View Source Aliases Declaration public IReadOnlyList<string> Aliases { get; } Property Value Type Description IReadOnlyList < System.String > | Improve this Doc View Source Attributes Declaration public IReadOnlyList<Attribute> Attributes { get; } Property Value Type Description IReadOnlyList < Attribute > | Improve this Doc View Source Commands Declaration public IReadOnlyList<CommandBuilder> Commands { get; } Property Value Type Description IReadOnlyList < CommandBuilder > | Improve this Doc View Source Group Declaration public string Group { get; set; } Property Value Type Description System.String | Improve this Doc View Source Modules Declaration public IReadOnlyList<ModuleBuilder> Modules { get; } Property Value Type Description IReadOnlyList < ModuleBuilder > | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Parent Declaration public ModuleBuilder Parent { get; } Property Value Type Description ModuleBuilder | Improve this Doc View Source Preconditions Declaration public IReadOnlyList<PreconditionAttribute> Preconditions { get; } Property Value Type Description IReadOnlyList < PreconditionAttribute > | Improve this Doc View Source Remarks Declaration public string Remarks { get; set; } Property Value Type Description System.String | Improve this Doc View Source Service Declaration public CommandService Service { get; } Property Value Type Description CommandService | Improve this Doc View Source Summary Declaration public string Summary { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source AddAliases(String[]) Declaration public ModuleBuilder AddAliases(params string[] aliases) Parameters Type Name Description System.String [] aliases Returns Type Description ModuleBuilder | Improve this Doc View Source AddAttributes(Attribute[]) Declaration public ModuleBuilder AddAttributes(params Attribute[] attributes) Parameters Type Name Description Attribute [] attributes Returns Type Description ModuleBuilder | Improve this Doc View Source AddCommand(String, Func<ICommandContext, Object[], IServiceProvider, CommandInfo, Task>, Action<CommandBuilder>) Declaration public ModuleBuilder AddCommand(string primaryAlias, Func<ICommandContext, object[], IServiceProvider, CommandInfo, Task> callback, Action<CommandBuilder> createFunc) Parameters Type Name Description System.String primaryAlias Func < ICommandContext , System.Object [], IServiceProvider , CommandInfo , Task > callback Action < CommandBuilder > createFunc Returns Type Description ModuleBuilder | Improve this Doc View Source AddModule(String, Action<ModuleBuilder>) Declaration public ModuleBuilder AddModule(string primaryAlias, Action<ModuleBuilder> createFunc) Parameters Type Name Description System.String primaryAlias Action < ModuleBuilder > createFunc Returns Type Description ModuleBuilder | Improve this Doc View Source AddPrecondition(PreconditionAttribute) Declaration public ModuleBuilder AddPrecondition(PreconditionAttribute precondition) Parameters Type Name Description PreconditionAttribute precondition Returns Type Description ModuleBuilder | Improve this Doc View Source Build(CommandService, IServiceProvider) Declaration public ModuleInfo Build(CommandService service, IServiceProvider services) Parameters Type Name Description CommandService service IServiceProvider services Returns Type Description ModuleInfo | Improve this Doc View Source WithName(String) Declaration public ModuleBuilder WithName(string name) Parameters Type Name Description System.String name Returns Type Description ModuleBuilder | Improve this Doc View Source WithRemarks(String) Declaration public ModuleBuilder WithRemarks(string remarks) Parameters Type Name Description System.String remarks Returns Type Description ModuleBuilder | Improve this Doc View Source WithSummary(String) Declaration public ModuleBuilder WithSummary(string summary) Parameters Type Name Description System.String summary Returns Type Description ModuleBuilder"
  },
  "api/KaiHeiLa.Commands.Builders.ParameterBuilder.html": {
    "href": "api/KaiHeiLa.Commands.Builders.ParameterBuilder.html",
    "title": "Class ParameterBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class ParameterBuilder Inheritance System.Object ParameterBuilder Namespace : KaiHeiLa.Commands.Builders Assembly : KaiHeiLa.Net.Commands.dll Syntax public class ParameterBuilder : object Properties | Improve this Doc View Source Attributes Declaration public IReadOnlyList<Attribute> Attributes { get; } Property Value Type Description IReadOnlyList < Attribute > | Improve this Doc View Source Command Declaration public CommandBuilder Command { get; } Property Value Type Description CommandBuilder | Improve this Doc View Source DefaultValue Declaration public object DefaultValue { get; set; } Property Value Type Description System.Object | Improve this Doc View Source IsMultiple Declaration public bool IsMultiple { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOptional Declaration public bool IsOptional { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRemainder Declaration public bool IsRemainder { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ParameterType Declaration public Type ParameterType { get; } Property Value Type Description Type | Improve this Doc View Source Preconditions Declaration public IReadOnlyList<ParameterPreconditionAttribute> Preconditions { get; } Property Value Type Description IReadOnlyList < ParameterPreconditionAttribute > | Improve this Doc View Source Summary Declaration public string Summary { get; set; } Property Value Type Description System.String | Improve this Doc View Source TypeReader Declaration public TypeReader TypeReader { get; set; } Property Value Type Description TypeReader Methods | Improve this Doc View Source AddAttributes(Attribute[]) Declaration public ParameterBuilder AddAttributes(params Attribute[] attributes) Parameters Type Name Description Attribute [] attributes Returns Type Description ParameterBuilder | Improve this Doc View Source AddPrecondition(ParameterPreconditionAttribute) Declaration public ParameterBuilder AddPrecondition(ParameterPreconditionAttribute precondition) Parameters Type Name Description ParameterPreconditionAttribute precondition Returns Type Description ParameterBuilder | Improve this Doc View Source WithDefault(Object) Declaration public ParameterBuilder WithDefault(object defaultValue) Parameters Type Name Description System.Object defaultValue Returns Type Description ParameterBuilder | Improve this Doc View Source WithIsMultiple(Boolean) Declaration public ParameterBuilder WithIsMultiple(bool isMultiple) Parameters Type Name Description System.Boolean isMultiple Returns Type Description ParameterBuilder | Improve this Doc View Source WithIsOptional(Boolean) Declaration public ParameterBuilder WithIsOptional(bool isOptional) Parameters Type Name Description System.Boolean isOptional Returns Type Description ParameterBuilder | Improve this Doc View Source WithIsRemainder(Boolean) Declaration public ParameterBuilder WithIsRemainder(bool isRemainder) Parameters Type Name Description System.Boolean isRemainder Returns Type Description ParameterBuilder | Improve this Doc View Source WithSummary(String) Declaration public ParameterBuilder WithSummary(string summary) Parameters Type Name Description System.String summary Returns Type Description ParameterBuilder"
  },
  "api/KaiHeiLa.Commands.ChannelTypeReader-1.html": {
    "href": "api/KaiHeiLa.Commands.ChannelTypeReader-1.html",
    "title": "Class ChannelTypeReader<T> | KaiHeiLa.Net 文档",
    "keywords": "Class ChannelTypeReader<T> A TypeReader for parsing objects implementing IChannel . Inheritance System.Object TypeReader ChannelTypeReader<T> Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class ChannelTypeReader<T> : TypeReader where T : class, IChannel Type Parameters Name Description T The type to be checked; must implement IChannel . Remarks This TypeReader is shipped with KaiHeiLa.Net and is used by default to parse any IChannel implemented object within a command. The TypeReader will attempt to first parse the input by mention, then the identifier, then by name; the highest candidate will be chosen as the final output; otherwise, an erroneous TypeReaderResult is returned. Methods | Improve this Doc View Source ReadAsync(ICommandContext, String, IServiceProvider) Attempts to parse the input into the desired type. Declaration public override Task<TypeReaderResult> ReadAsync(ICommandContext context, string input, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. System.String input The raw input of the command. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < TypeReaderResult > A task that represents the asynchronous parsing operation. The task result contains the parsing result. Overrides TypeReader.ReadAsync(ICommandContext, String, IServiceProvider)"
  },
  "api/KaiHeiLa.Commands.CommandAttribute.html": {
    "href": "api/KaiHeiLa.Commands.CommandAttribute.html",
    "title": "Class CommandAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class CommandAttribute Marks the execution information for a command. Inheritance System.Object CommandAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class CommandAttribute : Attribute Constructors | Improve this Doc View Source CommandAttribute() Declaration public CommandAttribute() | Improve this Doc View Source CommandAttribute(String) Initializes a new CommandAttribute attribute with the specified name. Declaration public CommandAttribute(string text) Parameters Type Name Description System.String text The name of the command. | Improve this Doc View Source CommandAttribute(String, Boolean) Declaration public CommandAttribute(string text, bool ignoreExtraArgs) Parameters Type Name Description System.String text System.Boolean ignoreExtraArgs Properties | Improve this Doc View Source IgnoreExtraArgs Declaration public bool? IgnoreExtraArgs { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source RunMode Specifies the RunMode of the command. This affects how the command is executed. Declaration public RunMode RunMode { get; set; } Property Value Type Description RunMode | Improve this Doc View Source Text Gets the text that has been set to be recognized as a command. Declaration public string Text { get; } Property Value Type Description System.String"
  },
  "api/KaiHeiLa.Commands.CommandContext.html": {
    "href": "api/KaiHeiLa.Commands.CommandContext.html",
    "title": "Class CommandContext | KaiHeiLa.Net 文档",
    "keywords": "Class CommandContext The context of a command which may contain the client, user, guild, channel, and message. Inheritance System.Object CommandContext Implements ICommandContext Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class CommandContext : object, ICommandContext Constructors | Improve this Doc View Source CommandContext(IKaiHeiLaClient, IUserMessage) Initializes a new CommandContext class with the provided client and message. Declaration public CommandContext(IKaiHeiLaClient client, IUserMessage msg) Parameters Type Name Description IKaiHeiLaClient client The underlying client. IUserMessage msg The underlying message. Properties | Improve this Doc View Source Channel Gets the IMessageChannel that the command is executed in. Declaration public IMessageChannel Channel { get; } Property Value Type Description IMessageChannel | Improve this Doc View Source Client Gets the IKaiHeiLaClient that the command is executed with. Declaration public IKaiHeiLaClient Client { get; } Property Value Type Description IKaiHeiLaClient | Improve this Doc View Source Guild Gets the IGuild that the command is executed in. Declaration public IGuild Guild { get; } Property Value Type Description IGuild | Improve this Doc View Source IsPrivate Indicates whether the channel that the command is executed in is a private channel. Declaration public bool IsPrivate { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Message Gets the IUserMessage that the command is interpreted from. Declaration public IUserMessage Message { get; } Property Value Type Description IUserMessage | Improve this Doc View Source User Gets the IUser who executed the command. Declaration public IUser User { get; } Property Value Type Description IUser Implements ICommandContext"
  },
  "api/KaiHeiLa.Commands.CommandError.html": {
    "href": "api/KaiHeiLa.Commands.CommandError.html",
    "title": "Enum CommandError | KaiHeiLa.Net 文档",
    "keywords": "Enum CommandError Defines the type of error a command can throw. Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public enum CommandError : int Fields Name Description BadArgCount Thrown when the input text has too few or too many arguments. Exception Thrown when an exception occurs mid-command execution. MultipleMatches Thrown when more than one object is matched by TypeReader . ObjectNotFound Thrown when the object cannot be found by the TypeReader . ParseFailed Thrown when the command fails to be parsed. UnknownCommand Thrown when the command is unknown. UnmetPrecondition Thrown when the command fails to meet a PreconditionAttribute 's conditions. Unsuccessful Thrown when the command is not successfully executed on runtime."
  },
  "api/KaiHeiLa.Commands.CommandException.html": {
    "href": "api/KaiHeiLa.Commands.CommandException.html",
    "title": "Class CommandException | KaiHeiLa.Net 文档",
    "keywords": "Class CommandException The exception that is thrown if another exception occurs during a command execution. Inheritance System.Object CommandException Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class CommandException : Exception Constructors | Improve this Doc View Source CommandException(CommandInfo, ICommandContext, Exception) Initializes a new instance of the CommandException class using a command information, a command context, and the exception that interrupted the execution. Declaration public CommandException(CommandInfo command, ICommandContext context, Exception ex) Parameters Type Name Description CommandInfo command The command information. ICommandContext context The context of the command. Exception ex The exception that interrupted the command execution. Properties | Improve this Doc View Source Command Gets the command that caused the exception. Declaration public CommandInfo Command { get; } Property Value Type Description CommandInfo | Improve this Doc View Source Context Gets the command context of the exception. Declaration public ICommandContext Context { get; } Property Value Type Description ICommandContext"
  },
  "api/KaiHeiLa.Commands.CommandInfo.html": {
    "href": "api/KaiHeiLa.Commands.CommandInfo.html",
    "title": "Class CommandInfo | KaiHeiLa.Net 文档",
    "keywords": "Class CommandInfo Provides the information of a command. Inheritance System.Object CommandInfo Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class CommandInfo : object Remarks This object contains the information of a command. This can include the module of the command, various descriptions regarding the command, and its RunMode . Properties | Improve this Doc View Source Aliases Gets a list of aliases defined by the AliasAttribute of the command. Declaration public IReadOnlyList<string> Aliases { get; } Property Value Type Description IReadOnlyList < System.String > | Improve this Doc View Source Attributes Gets a list of attributes of the command. Declaration public IReadOnlyList<Attribute> Attributes { get; } Property Value Type Description IReadOnlyList < Attribute > | Improve this Doc View Source HasVarArgs Indicates whether the command accepts a langword_csharp_params [] for its parameter. Declaration public bool HasVarArgs { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IgnoreExtraArgs Indicates whether extra arguments should be ignored for this command. Declaration public bool IgnoreExtraArgs { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Module Gets the module that the command belongs in. Declaration public ModuleInfo Module { get; } Property Value Type Description ModuleInfo | Improve this Doc View Source Name Gets the name of the command. If none is set, the first alias is used. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Parameters Gets a list of information about the parameters of the command. Declaration public IReadOnlyList<ParameterInfo> Parameters { get; } Property Value Type Description IReadOnlyList < ParameterInfo > | Improve this Doc View Source Preconditions Gets a list of preconditions defined by the PreconditionAttribute of the command. Declaration public IReadOnlyList<PreconditionAttribute> Preconditions { get; } Property Value Type Description IReadOnlyList < PreconditionAttribute > | Improve this Doc View Source Priority Gets the priority of the command. This is used when there are multiple overloads of the command. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Remarks Gets the remarks of the command. Declaration public string Remarks { get; } Property Value Type Description System.String Remarks This field returns the summary of the command. Summary and Remarks can be useful in help commands and various implementation that fetches details of the command for the user. | Improve this Doc View Source RunMode Gets the RunMode that is being used for the command. Declaration public RunMode RunMode { get; } Property Value Type Description RunMode | Improve this Doc View Source Summary Gets the summary of the command. Declaration public string Summary { get; } Property Value Type Description System.String Remarks This field returns the summary of the command. Summary and Remarks can be useful in help commands and various implementation that fetches details of the command for the user. Methods | Improve this Doc View Source CheckPreconditionsAsync(ICommandContext, IServiceProvider) Declaration public Task<PreconditionResult> CheckPreconditionsAsync(ICommandContext context, IServiceProvider services = null) Parameters Type Name Description ICommandContext context IServiceProvider services Returns Type Description Task < PreconditionResult > | Improve this Doc View Source ExecuteAsync(ICommandContext, IEnumerable<Object>, IEnumerable<Object>, IServiceProvider) Declaration public Task<IResult> ExecuteAsync(ICommandContext context, IEnumerable<object> argList, IEnumerable<object> paramList, IServiceProvider services) Parameters Type Name Description ICommandContext context IEnumerable < System.Object > argList IEnumerable < System.Object > paramList IServiceProvider services Returns Type Description Task < IResult > | Improve this Doc View Source ExecuteAsync(ICommandContext, ParseResult, IServiceProvider) Declaration public Task<IResult> ExecuteAsync(ICommandContext context, ParseResult parseResult, IServiceProvider services) Parameters Type Name Description ICommandContext context ParseResult parseResult IServiceProvider services Returns Type Description Task < IResult > | Improve this Doc View Source ParseAsync(ICommandContext, Int32, SearchResult, PreconditionResult, IServiceProvider) Declaration public Task<ParseResult> ParseAsync(ICommandContext context, int startIndex, SearchResult searchResult, PreconditionResult preconditionResult = null, IServiceProvider services = null) Parameters Type Name Description ICommandContext context System.Int32 startIndex SearchResult searchResult PreconditionResult preconditionResult IServiceProvider services Returns Type Description Task < ParseResult >"
  },
  "api/KaiHeiLa.Commands.CommandMatch.html": {
    "href": "api/KaiHeiLa.Commands.CommandMatch.html",
    "title": "Struct CommandMatch | KaiHeiLa.Net 文档",
    "keywords": "Struct CommandMatch Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public struct CommandMatch Constructors | Improve this Doc View Source CommandMatch(CommandInfo, String) Declaration public CommandMatch(CommandInfo command, string alias) Parameters Type Name Description CommandInfo command System.String alias Properties | Improve this Doc View Source Alias The alias of the command. Declaration public string Alias { get; } Property Value Type Description System.String | Improve this Doc View Source Command The command that matches the search result. Declaration public CommandInfo Command { get; } Property Value Type Description CommandInfo Methods | Improve this Doc View Source CheckPreconditionsAsync(ICommandContext, IServiceProvider) Declaration public Task<PreconditionResult> CheckPreconditionsAsync(ICommandContext context, IServiceProvider services = null) Parameters Type Name Description ICommandContext context IServiceProvider services Returns Type Description Task < PreconditionResult > | Improve this Doc View Source ExecuteAsync(ICommandContext, IEnumerable<Object>, IEnumerable<Object>, IServiceProvider) Declaration public Task<IResult> ExecuteAsync(ICommandContext context, IEnumerable<object> argList, IEnumerable<object> paramList, IServiceProvider services) Parameters Type Name Description ICommandContext context IEnumerable < System.Object > argList IEnumerable < System.Object > paramList IServiceProvider services Returns Type Description Task < IResult > | Improve this Doc View Source ExecuteAsync(ICommandContext, ParseResult, IServiceProvider) Declaration public Task<IResult> ExecuteAsync(ICommandContext context, ParseResult parseResult, IServiceProvider services) Parameters Type Name Description ICommandContext context ParseResult parseResult IServiceProvider services Returns Type Description Task < IResult > | Improve this Doc View Source ParseAsync(ICommandContext, SearchResult, PreconditionResult, IServiceProvider) Declaration public Task<ParseResult> ParseAsync(ICommandContext context, SearchResult searchResult, PreconditionResult preconditionResult = null, IServiceProvider services = null) Parameters Type Name Description ICommandContext context SearchResult searchResult PreconditionResult preconditionResult IServiceProvider services Returns Type Description Task < ParseResult >"
  },
  "api/KaiHeiLa.Commands.CommandService.html": {
    "href": "api/KaiHeiLa.Commands.CommandService.html",
    "title": "Class CommandService | KaiHeiLa.Net 文档",
    "keywords": "Class CommandService Provides a framework for building KaiHeiLa commands. Inheritance System.Object CommandService Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class CommandService : IDisposable Remarks The service provides a framework for building KaiHeiLa commands both dynamically via runtime builders or statically via compile-time modules. To create a command module at compile-time, see ModuleBase (most common); otherwise, see ModuleBuilder . This service also provides several events for monitoring command usages; such as Log for any command-related log events, and CommandExecuted for information about commands that have been successfully executed. Constructors | Improve this Doc View Source CommandService() Initializes a new CommandService class. Declaration public CommandService() | Improve this Doc View Source CommandService(CommandServiceConfig) Initializes a new CommandService class with the provided configuration. Declaration public CommandService(CommandServiceConfig config) Parameters Type Name Description CommandServiceConfig config The configuration class. Properties | Improve this Doc View Source Commands Represents all commands loaded within CommandService . Declaration public IEnumerable<CommandInfo> Commands { get; } Property Value Type Description IEnumerable < CommandInfo > | Improve this Doc View Source Modules Represents all modules loaded within CommandService . Declaration public IEnumerable<ModuleInfo> Modules { get; } Property Value Type Description IEnumerable < ModuleInfo > | Improve this Doc View Source TypeReaders Represents all TypeReader loaded within CommandService . Declaration public ILookup<Type, TypeReader> TypeReaders { get; } Property Value Type Description ILookup < Type , TypeReader > Methods | Improve this Doc View Source AddModuleAsync(Type, IServiceProvider) Adds a command module from a . Declaration public Task<ModuleInfo> AddModuleAsync(Type type, IServiceProvider services) Parameters Type Name Description Type type The type of module. IServiceProvider services The for your dependency injection solution if using one; otherwise, pass null . Returns Type Description Task < ModuleInfo > A task that represents the asynchronous operation for adding the module. The task result contains the built module. | Improve this Doc View Source AddModuleAsync<T>(IServiceProvider) Add a command module from a . Declaration public Task<ModuleInfo> AddModuleAsync<T>(IServiceProvider services) Parameters Type Name Description IServiceProvider services The for your dependency injection solution if using one; otherwise, pass null . Returns Type Description Task < ModuleInfo > A task that represents the asynchronous operation for adding the module. The task result contains the built module. Type Parameters Name Description T The type of module. Examples The following example registers the module MyModule to commandService . await commandService.AddModuleAsync<MyModule>(serviceProvider); | Improve this Doc View Source AddModulesAsync(Assembly, IServiceProvider) Add command modules from an . Declaration public Task<IEnumerable<ModuleInfo>> AddModulesAsync(Assembly assembly, IServiceProvider services) Parameters Type Name Description Assembly assembly The containing command modules. IServiceProvider services The for your dependency injection solution if using one; otherwise, pass null . Returns Type Description Task < IEnumerable < ModuleInfo >> A task that represents the asynchronous operation for adding the command modules. The task result contains an enumerable collection of modules added. | Improve this Doc View Source AddTypeReader(Type, TypeReader) Adds a custom TypeReader to this CommandService for the supplied object type. If type is a , a nullable TypeReader for the value type will also be added. If a default TypeReader exists for type , a warning will be logged and the default TypeReader will be replaced. Declaration public void AddTypeReader(Type type, TypeReader reader) Parameters Type Name Description Type type A instance for the type to be read. TypeReader reader An instance of the TypeReader to be added. | Improve this Doc View Source AddTypeReader(Type, TypeReader, Boolean) Adds a custom TypeReader to this CommandService for the supplied object type. If type is a , a nullable TypeReader for the value type will also be added. Declaration public void AddTypeReader(Type type, TypeReader reader, bool replaceDefault) Parameters Type Name Description Type type A instance for the type to be read. TypeReader reader An instance of the TypeReader to be added. System.Boolean replaceDefault Defines whether the TypeReader should replace the default one for if it exists. | Improve this Doc View Source AddTypeReader<T>(TypeReader) Adds a custom TypeReader to this CommandService for the supplied object type. If T is a , a nullable TypeReader will also be added. If a default TypeReader exists for T , a warning will be logged and the default TypeReader will be replaced. Declaration public void AddTypeReader<T>(TypeReader reader) Parameters Type Name Description TypeReader reader An instance of the TypeReader to be added. Type Parameters Name Description T The object type to be read by the TypeReader . | Improve this Doc View Source AddTypeReader<T>(TypeReader, Boolean) Adds a custom TypeReader to this CommandService for the supplied object type. If T is a , a nullable TypeReader will also be added. Declaration public void AddTypeReader<T>(TypeReader reader, bool replaceDefault) Parameters Type Name Description TypeReader reader An instance of the TypeReader to be added. System.Boolean replaceDefault Defines whether the TypeReader should replace the default one for if it exists. Type Parameters Name Description T The object type to be read by the TypeReader . | Improve this Doc View Source CreateModuleAsync(String, Action<ModuleBuilder>) Declaration public Task<ModuleInfo> CreateModuleAsync(string primaryAlias, Action<ModuleBuilder> buildFunc) Parameters Type Name Description System.String primaryAlias Action < ModuleBuilder > buildFunc Returns Type Description Task < ModuleInfo > | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source ExecuteAsync(ICommandContext, Int32, IServiceProvider, MultiMatchHandling) Executes the command. Declaration public Task<IResult> ExecuteAsync(ICommandContext context, int argPos, IServiceProvider services, MultiMatchHandling multiMatchHandling = MultiMatchHandling.Exception) Parameters Type Name Description ICommandContext context The context of the command. System.Int32 argPos The position of which the command starts at. IServiceProvider services The service to be used in the command's dependency injection. MultiMatchHandling multiMatchHandling The handling mode when multiple command matches are found. Returns Type Description Task < IResult > A task that represents the asynchronous execution operation. The task result contains the result of the command execution. | Improve this Doc View Source ExecuteAsync(ICommandContext, String, IServiceProvider, MultiMatchHandling) Executes the command. Declaration public Task<IResult> ExecuteAsync(ICommandContext context, string input, IServiceProvider services, MultiMatchHandling multiMatchHandling = MultiMatchHandling.Exception) Parameters Type Name Description ICommandContext context The context of the command. System.String input The command string. IServiceProvider services The service to be used in the command's dependency injection. MultiMatchHandling multiMatchHandling The handling mode when multiple command matches are found. Returns Type Description Task < IResult > A task that represents the asynchronous execution operation. The task result contains the result of the command execution. | Improve this Doc View Source RemoveModuleAsync(ModuleInfo) Removes the command module. Declaration public Task<bool> RemoveModuleAsync(ModuleInfo module) Parameters Type Name Description ModuleInfo module The ModuleInfo to be removed from the service. Returns Type Description Task < System.Boolean > A task that represents the asynchronous removal operation. The task result contains a value that indicates whether the module is successfully removed. | Improve this Doc View Source RemoveModuleAsync(Type) Removes the command module. Declaration public Task<bool> RemoveModuleAsync(Type type) Parameters Type Name Description Type type The of the module. Returns Type Description Task < System.Boolean > A task that represents the asynchronous removal operation. The task result contains a value that indicates whether the module is successfully removed. | Improve this Doc View Source RemoveModuleAsync<T>() Removes the command module. Declaration public Task<bool> RemoveModuleAsync<T>() Returns Type Description Task < System.Boolean > A task that represents the asynchronous removal operation. The task result contains a value that indicates whether the module is successfully removed. Type Parameters Name Description T The of the module. | Improve this Doc View Source Search(ICommandContext, Int32) Searches for the command. Declaration public SearchResult Search(ICommandContext context, int argPos) Parameters Type Name Description ICommandContext context The context of the command. System.Int32 argPos The position of which the command starts at. Returns Type Description SearchResult The result containing the matching commands. | Improve this Doc View Source Search(ICommandContext, String) Searches for the command. Declaration public SearchResult Search(ICommandContext context, string input) Parameters Type Name Description ICommandContext context The context of the command. System.String input The command string. Returns Type Description SearchResult The result containing the matching commands. | Improve this Doc View Source Search(String) Declaration public SearchResult Search(string input) Parameters Type Name Description System.String input Returns Type Description SearchResult | Improve this Doc View Source TryRemoveTypeReader(Type, Boolean, out IDictionary<Type, TypeReader>) Removes a type reader from the list of type readers. Declaration public bool TryRemoveTypeReader(Type type, bool isDefaultTypeReader, out IDictionary<Type, TypeReader> readers) Parameters Type Name Description Type type The type to remove the readers from. System.Boolean isDefaultTypeReader true if the default readers for type should be removed; otherwise false . IDictionary < Type , TypeReader > readers The removed collection of type readers. Returns Type Description System.Boolean true if the remove operation was successful; otherwise false . Remarks Removing a TypeReader from the CommandService will not dereference the TypeReader from the loaded module/command instances. You need to reload the modules for the changes to take effect. | Improve this Doc View Source ValidateAndGetBestMatch(SearchResult, ICommandContext, IServiceProvider, MultiMatchHandling) Validates and gets the best CommandMatch from a specified SearchResult Declaration public Task<IResult> ValidateAndGetBestMatch(SearchResult matches, ICommandContext context, IServiceProvider provider, MultiMatchHandling multiMatchHandling = MultiMatchHandling.Exception) Parameters Type Name Description SearchResult matches The SearchResult. ICommandContext context The context of the command. IServiceProvider provider The service provider to be used on the command's dependency injection. MultiMatchHandling multiMatchHandling The handling mode when multiple command matches are found. Returns Type Description Task < IResult > A task that represents the asynchronous validation operation. The task result contains the result of the command validation as a MatchResult or a SearchResult if no matches were found. Events | Improve this Doc View Source CommandExecuted Occurs when a command is executed. Declaration public event Func<Optional<CommandInfo>, ICommandContext, IResult, Task> CommandExecuted Event Type Type Description Func < Optional < CommandInfo >, ICommandContext , IResult , Task > Remarks This event is fired when a command has been executed, successfully or not. When a command fails to execute during parsing or precondition stage, the CommandInfo may not be returned. | Improve this Doc View Source Log Occurs when a command-related information is received. Declaration public event Func<LogMessage, Task> Log Event Type Type Description Func < LogMessage , Task > Extension Methods CommandServiceExtensions.GetExecutableCommandsAsync(CommandService, ICommandContext, IServiceProvider)"
  },
  "api/KaiHeiLa.Commands.CommandServiceConfig.html": {
    "href": "api/KaiHeiLa.Commands.CommandServiceConfig.html",
    "title": "Class CommandServiceConfig | KaiHeiLa.Net 文档",
    "keywords": "Class CommandServiceConfig Represents a configuration class for CommandService . Inheritance System.Object CommandServiceConfig Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class CommandServiceConfig : object Properties | Improve this Doc View Source CaseSensitiveCommands Gets or sets whether commands should be case-sensitive. Declaration public bool CaseSensitiveCommands { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DefaultRunMode Gets or sets the default RunMode commands should have, if one is not specified on the Command attribute or builder. Declaration public RunMode DefaultRunMode { get; set; } Property Value Type Description RunMode | Improve this Doc View Source IgnoreExtraArgs Gets or sets a value that indicates whether extra parameters should be ignored. Declaration public bool IgnoreExtraArgs { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LogLevel Gets or sets the minimum log level severity that will be sent to the Log event. Declaration public LogSeverity LogLevel { get; set; } Property Value Type Description LogSeverity | Improve this Doc View Source QuotationMarkAliasMap Collection of aliases for matching pairs of string delimiters. The dictionary stores the opening delimiter as a key, and the matching closing delimiter as the value. If no value is supplied KaiHeiLa.Commands.QuotationAliasUtils.GetDefaultAliasMap will be used, which contains many regional equivalents. Only values that are specified in this map will be used as string delimiters, so if \" is removed then it won't be used. If this map is set to null or empty, the default delimiter of \" will be used. Declaration public Dictionary<char, char> QuotationMarkAliasMap { get; set; } Property Value Type Description Dictionary < System.Char , System.Char > Examples QuotationMarkAliasMap = new Dictionary<char, char>() { {'\\\"', '\\\"' }, {'“', '”' }, {'「', '」' }, } | Improve this Doc View Source SeparatorChar Gets or sets the that separates an argument with another. Declaration public char SeparatorChar { get; set; } Property Value Type Description System.Char | Improve this Doc View Source ThrowOnError Gets or sets whether Sync commands should push exceptions up to the caller. Declaration public bool ThrowOnError { get; set; } Property Value Type Description System.Boolean"
  },
  "api/KaiHeiLa.Commands.CommandServiceExtensions.html": {
    "href": "api/KaiHeiLa.Commands.CommandServiceExtensions.html",
    "title": "Class CommandServiceExtensions | KaiHeiLa.Net 文档",
    "keywords": "Class CommandServiceExtensions Provides extension methods for the CommandService class. Inheritance System.Object CommandServiceExtensions Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public static class CommandServiceExtensions : object Methods | Improve this Doc View Source GetExecutableCommandsAsync(ICollection<CommandInfo>, ICommandContext, IServiceProvider) Returns commands that can be executed under the current context. Declaration public static Task<IReadOnlyCollection<CommandInfo>> GetExecutableCommandsAsync(this ICollection<CommandInfo> commands, ICommandContext context, IServiceProvider provider) Parameters Type Name Description ICollection < CommandInfo > commands The set of commands to be checked against. ICommandContext context The current command context. IServiceProvider provider The service provider used for dependency injection upon precondition check. Returns Type Description Task < IReadOnlyCollection < CommandInfo >> A read-only collection of commands that can be executed under the current context. | Improve this Doc View Source GetExecutableCommandsAsync(CommandService, ICommandContext, IServiceProvider) Returns commands that can be executed under the current context. Declaration public static Task<IReadOnlyCollection<CommandInfo>> GetExecutableCommandsAsync(this CommandService commandService, ICommandContext context, IServiceProvider provider) Parameters Type Name Description CommandService commandService The desired command service class to check against. ICommandContext context The current command context. IServiceProvider provider The service provider used for dependency injection upon precondition check. Returns Type Description Task < IReadOnlyCollection < CommandInfo >> A read-only collection of commands that can be executed under the current context. | Improve this Doc View Source GetExecutableCommandsAsync(ModuleInfo, ICommandContext, IServiceProvider) Returns commands that can be executed under the current context. Declaration public static Task<IReadOnlyCollection<CommandInfo>> GetExecutableCommandsAsync(this ModuleInfo module, ICommandContext context, IServiceProvider provider) Parameters Type Name Description ModuleInfo module The module to be checked against. ICommandContext context The current command context. IServiceProvider provider The service provider used for dependency injection upon precondition check. Returns Type Description Task < IReadOnlyCollection < CommandInfo >> A read-only collection of commands that can be executed under the current context."
  },
  "api/KaiHeiLa.Commands.ContextType.html": {
    "href": "api/KaiHeiLa.Commands.ContextType.html",
    "title": "Enum ContextType | KaiHeiLa.Net 文档",
    "keywords": "Enum ContextType Defines the type of command context (i.e. where the command is being executed). Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public enum ContextType : int Fields Name Description DM Specifies the command to be executed within a DM. Guild Specifies the command to be executed within a guild."
  },
  "api/KaiHeiLa.Commands.DontAutoLoadAttribute.html": {
    "href": "api/KaiHeiLa.Commands.DontAutoLoadAttribute.html",
    "title": "Class DontAutoLoadAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class DontAutoLoadAttribute Prevents the marked module from being loaded automatically. Inheritance System.Object DontAutoLoadAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class DontAutoLoadAttribute : Attribute Remarks This attribute tells CommandService to ignore the marked module from being loaded automatically (e.g. the AddModulesAsync(Assembly, IServiceProvider) method). If a non-public module marked with this attribute is attempted to be loaded manually, the loading process will also fail."
  },
  "api/KaiHeiLa.Commands.DontInjectAttribute.html": {
    "href": "api/KaiHeiLa.Commands.DontInjectAttribute.html",
    "title": "Class DontInjectAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class DontInjectAttribute Prevents the marked property from being injected into a module. Inheritance System.Object DontInjectAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class DontInjectAttribute : Attribute Remarks This attribute prevents the marked member from being injected into its parent module. Useful when you have a public property that you do not wish to invoke the library's dependency injection service. Examples In the following example, DatabaseService will not be automatically injected into the module and will not throw an error message if the dependency fails to be resolved. public class MyModule : ModuleBase { [DontInject] public DatabaseService DatabaseService; public MyModule() { DatabaseService = DatabaseFactory.Generate(); } }"
  },
  "api/KaiHeiLa.Commands.ExecuteResult.html": {
    "href": "api/KaiHeiLa.Commands.ExecuteResult.html",
    "title": "Struct ExecuteResult | KaiHeiLa.Net 文档",
    "keywords": "Struct ExecuteResult Contains information of the command's overall execution result. Implements IResult Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public struct ExecuteResult : IResult Properties | Improve this Doc View Source Error Describes the error type that may have occurred during the operation. Declaration public CommandError? Error { get; } Property Value Type Description System.Nullable < CommandError > A CommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. | Improve this Doc View Source ErrorReason Describes the reason for the error. Declaration public string ErrorReason { get; } Property Value Type Description System.String A string containing the error reason. | Improve this Doc View Source Exception Gets the exception that may have occurred during the command execution. Declaration public Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source IsSuccess Indicates whether the operation was successful or not. Declaration public bool IsSuccess { get; } Property Value Type Description System.Boolean true if the result is positive; otherwise false . Methods | Improve this Doc View Source FromError(Exception) Initializes a new ExecuteResult with a specified exception, indicating an unsuccessful execution. Declaration public static ExecuteResult FromError(Exception ex) Parameters Type Name Description Exception ex The exception that caused the command execution to fail. Returns Type Description ExecuteResult A ExecuteResult that contains the exception that caused the unsuccessful execution, along with a CommandError of type Exception as well as the exception message as the reason. | Improve this Doc View Source FromError(CommandError, String) Initializes a new ExecuteResult with a specified CommandError and its reason, indicating an unsuccessful execution. Declaration public static ExecuteResult FromError(CommandError error, string reason) Parameters Type Name Description CommandError error The type of error. System.String reason The reason behind the error. Returns Type Description ExecuteResult A ExecuteResult that contains a CommandError and reason. | Improve this Doc View Source FromError(IResult) Initializes a new ExecuteResult with a specified result; this may or may not be an successful execution depending on the Error and ErrorReason specified. Declaration public static ExecuteResult FromError(IResult result) Parameters Type Name Description IResult result The result to inherit from. Returns Type Description ExecuteResult A ExecuteResult that inherits the IResult error type and reason. | Improve this Doc View Source FromSuccess() Initializes a new ExecuteResult with no error, indicating a successful execution. Declaration public static ExecuteResult FromSuccess() Returns Type Description ExecuteResult A ExecuteResult that does not contain any errors. | Improve this Doc View Source ToString() Gets a string that indicates the execution result. Declaration public override string ToString() Returns Type Description System.String Success if IsSuccess is true ; otherwise \" Error : ErrorReason \". Implements IResult"
  },
  "api/KaiHeiLa.Commands.GroupAttribute.html": {
    "href": "api/KaiHeiLa.Commands.GroupAttribute.html",
    "title": "Class GroupAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class GroupAttribute Marks the module as a command group. Inheritance System.Object GroupAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class GroupAttribute : Attribute Constructors | Improve this Doc View Source GroupAttribute() Declaration public GroupAttribute() | Improve this Doc View Source GroupAttribute(String) Initializes a new GroupAttribute with the provided prefix. Declaration public GroupAttribute(string prefix) Parameters Type Name Description System.String prefix The prefix of the module group. Properties | Improve this Doc View Source Prefix Gets the prefix set for the module. Declaration public string Prefix { get; } Property Value Type Description System.String"
  },
  "api/KaiHeiLa.Commands.html": {
    "href": "api/KaiHeiLa.Commands.html",
    "title": "Namespace KaiHeiLa.Commands | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.Commands Classes AliasAttribute Marks the aliases for a command. ChannelTypeReader<T> A TypeReader for parsing objects implementing IChannel . CommandAttribute Marks the execution information for a command. CommandContext The context of a command which may contain the client, user, guild, channel, and message. CommandException The exception that is thrown if another exception occurs during a command execution. CommandInfo Provides the information of a command. CommandService Provides a framework for building KaiHeiLa commands. CommandServiceConfig Represents a configuration class for CommandService . CommandServiceExtensions Provides extension methods for the CommandService class. DontAutoLoadAttribute Prevents the marked module from being loaded automatically. DontInjectAttribute Prevents the marked property from being injected into a module. GroupAttribute Marks the module as a command group. IEnumerableExtensions MatchResult MessageExtensions Provides extension methods for IUserMessage that relates to commands. MessageTypeReader<T> A TypeReader for parsing objects implementing IMessage . ModuleBase Provides a base class for a command module to inherit from. ModuleBase<T> Provides a base class for a command module to inherit from. ModuleInfo Provides the information of a module. NameAttribute Marks the public name of a command, module, or parameter. NamedArgumentTypeAttribute Instructs the command system to treat command parameters of this type as a collection of named arguments matching to its properties. OverrideTypeReaderAttribute Marks the to be read by the specified TypeReader . ParameterInfo Provides the information of a parameter. ParameterPreconditionAttribute Requires the parameter to pass the specified precondition before execution can begin. PreconditionAttribute Requires the module or class to pass the specified precondition before execution can begin. PreconditionGroupResult PreconditionResult Represents a result type for command preconditions. PriorityAttribute Sets priority of commands. RemainderAttribute Marks the input to not be parsed by the parser. RemarksAttribute Attaches remarks to your commands. RequireBotPermissionAttribute Requires the bot to have a specific permission in the channel a command is invoked in. RequireContextAttribute Requires the command to be invoked in a specified context (e.g. in guild, DM). RequireUserAttribute Requires the command to be invoked by the specified user. RequireUserPermissionAttribute Requires the user invoking the command to have a specified permission. RoleTypeReader<T> A TypeReader for parsing objects implementing IRole . RuntimeResult SocketCommandContext Represents a WebSocket-based context of a command. This may include the client, guild, channel, user, and message. SummaryAttribute Attaches a summary to your command. TypeReader Defines a reader class that parses user input into a specified type. UserTypeReader<T> A TypeReader for parsing objects implementing IUser . Structs CommandMatch ExecuteResult Contains information of the command's overall execution result. ParseResult Contains information for the parsing result from the command service's parser. SearchResult TypeReaderResult TypeReaderValue Interfaces ICommandContext Represents a context of a command. This may include the client, guild, channel, user, and message. IModuleBase Represents a generic module base. IResult Contains information of the result related to a command. Enums CommandError Defines the type of error a command can throw. ContextType Defines the type of command context (i.e. where the command is being executed). MultiMatchHandling Specifies the behavior when multiple matches are found during the command parsing stage. RunMode Specifies the behavior of the command execution workflow."
  },
  "api/KaiHeiLa.Commands.ICommandContext.html": {
    "href": "api/KaiHeiLa.Commands.ICommandContext.html",
    "title": "Interface ICommandContext | KaiHeiLa.Net 文档",
    "keywords": "Interface ICommandContext Represents a context of a command. This may include the client, guild, channel, user, and message. Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Core.dll Syntax public interface ICommandContext Properties | Improve this Doc View Source Channel Gets the IMessageChannel that the command is executed in. Declaration IMessageChannel Channel { get; } Property Value Type Description IMessageChannel | Improve this Doc View Source Client Gets the IKaiHeiLaClient that the command is executed with. Declaration IKaiHeiLaClient Client { get; } Property Value Type Description IKaiHeiLaClient | Improve this Doc View Source Guild Gets the IGuild that the command is executed in. Declaration IGuild Guild { get; } Property Value Type Description IGuild | Improve this Doc View Source Message Gets the IUserMessage that the command is interpreted from. Declaration IUserMessage Message { get; } Property Value Type Description IUserMessage | Improve this Doc View Source User Gets the IUser who executed the command. Declaration IUser User { get; } Property Value Type Description IUser"
  },
  "api/KaiHeiLa.Commands.IEnumerableExtensions.html": {
    "href": "api/KaiHeiLa.Commands.IEnumerableExtensions.html",
    "title": "Class IEnumerableExtensions | KaiHeiLa.Net 文档",
    "keywords": "Class IEnumerableExtensions Inheritance System.Object IEnumerableExtensions Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public static class IEnumerableExtensions : object Methods | Improve this Doc View Source Permutate<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) Declaration public static IEnumerable<TResult> Permutate<TFirst, TSecond, TResult>(this IEnumerable<TFirst> set, IEnumerable<TSecond> others, Func<TFirst, TSecond, TResult> func) Parameters Type Name Description IEnumerable <TFirst> set IEnumerable <TSecond> others Func <TFirst, TSecond, TResult> func Returns Type Description IEnumerable <TResult> Type Parameters Name Description TFirst TSecond TResult"
  },
  "api/KaiHeiLa.Commands.IModuleBase.html": {
    "href": "api/KaiHeiLa.Commands.IModuleBase.html",
    "title": "Interface IModuleBase | KaiHeiLa.Net 文档",
    "keywords": "Interface IModuleBase Represents a generic module base. Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public interface IModuleBase Methods | Improve this Doc View Source AfterExecute(CommandInfo) Executed after a command is ran in this module base. Declaration void AfterExecute(CommandInfo command) Parameters Type Name Description CommandInfo command The command that ran. | Improve this Doc View Source AfterExecuteAsync(CommandInfo) Executed asynchronously after a command is run in this module base. Declaration Task AfterExecuteAsync(CommandInfo command) Parameters Type Name Description CommandInfo command The command that's about to run. Returns Type Description Task | Improve this Doc View Source BeforeExecute(CommandInfo) Executed before a command is run in this module base. Declaration void BeforeExecute(CommandInfo command) Parameters Type Name Description CommandInfo command The command that's about to run. | Improve this Doc View Source BeforeExecuteAsync(CommandInfo) Executed asynchronously before a command is run in this module base. Declaration Task BeforeExecuteAsync(CommandInfo command) Parameters Type Name Description CommandInfo command The command thats about to run. Returns Type Description Task | Improve this Doc View Source OnModuleBuilding(CommandService, ModuleBuilder) Executed when this module is building. Declaration void OnModuleBuilding(CommandService commandService, ModuleBuilder builder) Parameters Type Name Description CommandService commandService The command service that is building this module. ModuleBuilder builder The builder constructing this module. | Improve this Doc View Source SetContext(ICommandContext) Sets the context of this module base. Declaration void SetContext(ICommandContext context) Parameters Type Name Description ICommandContext context The context to set."
  },
  "api/KaiHeiLa.Commands.IResult.html": {
    "href": "api/KaiHeiLa.Commands.IResult.html",
    "title": "Interface IResult | KaiHeiLa.Net 文档",
    "keywords": "Interface IResult Contains information of the result related to a command. Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public interface IResult Properties | Improve this Doc View Source Error Describes the error type that may have occurred during the operation. Declaration CommandError? Error { get; } Property Value Type Description System.Nullable < CommandError > A CommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. | Improve this Doc View Source ErrorReason Describes the reason for the error. Declaration string ErrorReason { get; } Property Value Type Description System.String A string containing the error reason. | Improve this Doc View Source IsSuccess Indicates whether the operation was successful or not. Declaration bool IsSuccess { get; } Property Value Type Description System.Boolean true if the result is positive; otherwise false ."
  },
  "api/KaiHeiLa.Commands.MatchResult.html": {
    "href": "api/KaiHeiLa.Commands.MatchResult.html",
    "title": "Class MatchResult | KaiHeiLa.Net 文档",
    "keywords": "Class MatchResult Inheritance System.Object MatchResult Implements IResult Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class MatchResult : object, IResult Properties | Improve this Doc View Source Error Describes the error type that may have occurred during the operation. Declaration public CommandError? Error { get; } Property Value Type Description System.Nullable < CommandError > A CommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. | Improve this Doc View Source ErrorReason Describes the reason for the error. Declaration public string ErrorReason { get; } Property Value Type Description System.String A string containing the error reason. | Improve this Doc View Source IsSuccess Indicates whether the operation was successful or not. Declaration public bool IsSuccess { get; } Property Value Type Description System.Boolean true if the result is positive; otherwise false . | Improve this Doc View Source Match Gets the command that may have matched during the command execution. Declaration public CommandMatch? Match { get; } Property Value Type Description System.Nullable < CommandMatch > | Improve this Doc View Source Pipeline Gets on which pipeline stage the command may have matched or failed. Declaration public IResult Pipeline { get; } Property Value Type Description IResult Methods | Improve this Doc View Source FromError(Exception) Declaration public static MatchResult FromError(Exception ex) Parameters Type Name Description Exception ex Returns Type Description MatchResult | Improve this Doc View Source FromError(CommandError, String) Declaration public static MatchResult FromError(CommandError error, string reason) Parameters Type Name Description CommandError error System.String reason Returns Type Description MatchResult | Improve this Doc View Source FromError(IResult) Declaration public static MatchResult FromError(IResult result) Parameters Type Name Description IResult result Returns Type Description MatchResult | Improve this Doc View Source FromError(IResult, CommandError, String) Declaration public static MatchResult FromError(IResult pipeline, CommandError error, string reason) Parameters Type Name Description IResult pipeline CommandError error System.String reason Returns Type Description MatchResult | Improve this Doc View Source FromSuccess(CommandMatch, IResult) Declaration public static MatchResult FromSuccess(CommandMatch match, IResult pipeline) Parameters Type Name Description CommandMatch match IResult pipeline Returns Type Description MatchResult | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IResult"
  },
  "api/KaiHeiLa.Commands.MessageExtensions.html": {
    "href": "api/KaiHeiLa.Commands.MessageExtensions.html",
    "title": "Class MessageExtensions | KaiHeiLa.Net 文档",
    "keywords": "Class MessageExtensions Provides extension methods for IUserMessage that relates to commands. Inheritance System.Object MessageExtensions Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public static class MessageExtensions : object Methods | Improve this Doc View Source HasCharPrefix(IUserMessage, Char, ref Int32) Gets whether the message starts with the provided character. Declaration public static bool HasCharPrefix(this IUserMessage msg, char c, ref int argPos) Parameters Type Name Description IUserMessage msg The message to check against. System.Char c The char prefix. System.Int32 argPos References where the command starts. Returns Type Description System.Boolean true if the message begins with the char c ; otherwise false . | Improve this Doc View Source HasMentionPrefix(IUserMessage, IUser, ref Int32) Gets whether the message starts with the user's mention string. Declaration public static bool HasMentionPrefix(this IUserMessage msg, IUser user, ref int argPos) Parameters Type Name Description IUserMessage msg IUser user System.Int32 argPos Returns Type Description System.Boolean | Improve this Doc View Source HasStringPrefix(IUserMessage, String, ref Int32, StringComparison) Gets whether the message starts with the provided string. Declaration public static bool HasStringPrefix(this IUserMessage msg, string str, ref int argPos, StringComparison comparisonType = null) Parameters Type Name Description IUserMessage msg System.String str System.Int32 argPos StringComparison comparisonType Returns Type Description System.Boolean"
  },
  "api/KaiHeiLa.Commands.MessageTypeReader-1.html": {
    "href": "api/KaiHeiLa.Commands.MessageTypeReader-1.html",
    "title": "Class MessageTypeReader<T> | KaiHeiLa.Net 文档",
    "keywords": "Class MessageTypeReader<T> A TypeReader for parsing objects implementing IMessage . Inheritance System.Object TypeReader MessageTypeReader<T> Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class MessageTypeReader<T> : TypeReader where T : class, IMessage Type Parameters Name Description T The type to be checked; must implement IMessage . Methods | Improve this Doc View Source ReadAsync(ICommandContext, String, IServiceProvider) Attempts to parse the input into the desired type. Declaration public override Task<TypeReaderResult> ReadAsync(ICommandContext context, string input, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. System.String input The raw input of the command. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < TypeReaderResult > A task that represents the asynchronous parsing operation. The task result contains the parsing result. Overrides TypeReader.ReadAsync(ICommandContext, String, IServiceProvider)"
  },
  "api/KaiHeiLa.Commands.ModuleBase.html": {
    "href": "api/KaiHeiLa.Commands.ModuleBase.html",
    "title": "Class ModuleBase | KaiHeiLa.Net 文档",
    "keywords": "Class ModuleBase Provides a base class for a command module to inherit from. Inheritance System.Object ModuleBase < ICommandContext > ModuleBase Implements IModuleBase Inherited Members ModuleBase<ICommandContext>.Context ModuleBase<ICommandContext>.ReplyTextAsync(String, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.ReplyImageAsync(String, String, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.ReplyImageAsync(Stream, String, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.ReplyVideoAsync(String, String, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.ReplyVideoAsync(Stream, String, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.ReplyFileAsync(String, String, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.ReplyFileAsync(Stream, String, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.ReplyKMarkdownAsync(String, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.ReplyCardsAsync(IEnumerable<ICard>, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.ReplyCardsAsync(ICard, Boolean, Boolean, RequestOptions) ModuleBase<ICommandContext>.BeforeExecuteAsync(CommandInfo) ModuleBase<ICommandContext>.BeforeExecute(CommandInfo) ModuleBase<ICommandContext>.AfterExecuteAsync(CommandInfo) ModuleBase<ICommandContext>.AfterExecute(CommandInfo) ModuleBase<ICommandContext>.OnModuleBuilding(CommandService, ModuleBuilder) ModuleBase<ICommandContext>.IModuleBase.SetContext(ICommandContext) ModuleBase<ICommandContext>.IModuleBase.BeforeExecuteAsync(CommandInfo) ModuleBase<ICommandContext>.IModuleBase.BeforeExecute(CommandInfo) ModuleBase<ICommandContext>.IModuleBase.AfterExecuteAsync(CommandInfo) ModuleBase<ICommandContext>.IModuleBase.AfterExecute(CommandInfo) ModuleBase<ICommandContext>.IModuleBase.OnModuleBuilding(CommandService, ModuleBuilder) Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public abstract class ModuleBase : ModuleBase<ICommandContext>, IModuleBase Implements IModuleBase"
  },
  "api/KaiHeiLa.Commands.ModuleBase-1.html": {
    "href": "api/KaiHeiLa.Commands.ModuleBase-1.html",
    "title": "Class ModuleBase<T> | KaiHeiLa.Net 文档",
    "keywords": "Class ModuleBase<T> Provides a base class for a command module to inherit from. Inheritance System.Object ModuleBase<T> ModuleBase Implements IModuleBase Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public abstract class ModuleBase<T> : object, IModuleBase where T : class, ICommandContext Type Parameters Name Description T A class that implements ICommandContext . Properties | Improve this Doc View Source Context The underlying context of the command. Declaration public T Context { get; } Property Value Type Description T See Also ICommandContext CommandContext Methods | Improve this Doc View Source AfterExecute(CommandInfo) The method to execute after executing the command. Declaration protected virtual void AfterExecute(CommandInfo command) Parameters Type Name Description CommandInfo command The CommandInfo of the command to be executed. | Improve this Doc View Source AfterExecuteAsync(CommandInfo) The method to execute asynchronously after executing the command. Declaration protected virtual Task AfterExecuteAsync(CommandInfo command) Parameters Type Name Description CommandInfo command The CommandInfo of the command to be executed. Returns Type Description Task | Improve this Doc View Source BeforeExecute(CommandInfo) The method to execute before executing the command. Declaration protected virtual void BeforeExecute(CommandInfo command) Parameters Type Name Description CommandInfo command The CommandInfo of the command to be executed. | Improve this Doc View Source BeforeExecuteAsync(CommandInfo) The method to execute asynchronously before executing the command. Declaration protected virtual Task BeforeExecuteAsync(CommandInfo command) Parameters Type Name Description CommandInfo command The CommandInfo of the command to be executed. Returns Type Description Task | Improve this Doc View Source OnModuleBuilding(CommandService, ModuleBuilder) The method to execute when building the module. Declaration protected virtual void OnModuleBuilding(CommandService commandService, ModuleBuilder builder) Parameters Type Name Description CommandService commandService The CommandService used to create the module. ModuleBuilder builder The builder used to build the module. | Improve this Doc View Source ReplyCardsAsync(IEnumerable<ICard>, Boolean, Boolean, RequestOptions) Sends a card message to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyCardsAsync(IEnumerable<ICard> cards, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IEnumerable < ICard > cards The cards to be sent. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyCardsAsync(ICard, Boolean, Boolean, RequestOptions) Sends a card message to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyCardsAsync(ICard card, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description ICard card The card to be sent. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyFileAsync(Stream, String, Boolean, Boolean, RequestOptions) Sends a file to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyFileAsync(Stream stream, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description Stream stream Stream of the file to be sent. System.String fileName The name of the file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyFileAsync(String, String, Boolean, Boolean, RequestOptions) Sends a file to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyFileAsync(string path, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the file. System.String fileName The name of the file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyImageAsync(Stream, String, Boolean, Boolean, RequestOptions) Sends an image to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyImageAsync(Stream stream, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description Stream stream Stream of the image file to be sent. System.String fileName The name of the image file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyImageAsync(String, String, Boolean, Boolean, RequestOptions) Sends an image to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyImageAsync(string path, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the image file. System.String fileName The name of the image file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyKMarkdownAsync(String, Boolean, Boolean, RequestOptions) Sends a KMarkdown message to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyKMarkdownAsync(string message, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description System.String message Contents of the message. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyTextAsync(String, Boolean, Boolean, RequestOptions) Sends a plain text message to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyTextAsync(string message, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description System.String message Contents of the message. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyVideoAsync(Stream, String, Boolean, Boolean, RequestOptions) Sends a video to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyVideoAsync(Stream stream, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description Stream stream Stream of the video file to be sent. System.String fileName The name of the video file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyVideoAsync(String, String, Boolean, Boolean, RequestOptions) Sends a video to the source channel. Declaration protected virtual Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyVideoAsync(string path, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the video file. System.String fileName The name of the video file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> Explicit Interface Implementations | Improve this Doc View Source IModuleBase.AfterExecute(CommandInfo) Declaration void IModuleBase.AfterExecute(CommandInfo command) Parameters Type Name Description CommandInfo command | Improve this Doc View Source IModuleBase.AfterExecuteAsync(CommandInfo) Declaration Task IModuleBase.AfterExecuteAsync(CommandInfo command) Parameters Type Name Description CommandInfo command Returns Type Description Task | Improve this Doc View Source IModuleBase.BeforeExecute(CommandInfo) Declaration void IModuleBase.BeforeExecute(CommandInfo command) Parameters Type Name Description CommandInfo command | Improve this Doc View Source IModuleBase.BeforeExecuteAsync(CommandInfo) Declaration Task IModuleBase.BeforeExecuteAsync(CommandInfo command) Parameters Type Name Description CommandInfo command Returns Type Description Task | Improve this Doc View Source IModuleBase.OnModuleBuilding(CommandService, ModuleBuilder) Declaration void IModuleBase.OnModuleBuilding(CommandService commandService, ModuleBuilder builder) Parameters Type Name Description CommandService commandService ModuleBuilder builder | Improve this Doc View Source IModuleBase.SetContext(ICommandContext) Declaration void IModuleBase.SetContext(ICommandContext context) Parameters Type Name Description ICommandContext context Implements IModuleBase"
  },
  "api/KaiHeiLa.Commands.ModuleInfo.html": {
    "href": "api/KaiHeiLa.Commands.ModuleInfo.html",
    "title": "Class ModuleInfo | KaiHeiLa.Net 文档",
    "keywords": "Class ModuleInfo Provides the information of a module. Inheritance System.Object ModuleInfo Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class ModuleInfo : object Properties | Improve this Doc View Source Aliases Gets a read-only list of aliases associated with this module. Declaration public IReadOnlyList<string> Aliases { get; } Property Value Type Description IReadOnlyList < System.String > | Improve this Doc View Source Attributes Gets a read-only list of attributes that apply to this module. Declaration public IReadOnlyList<Attribute> Attributes { get; } Property Value Type Description IReadOnlyList < Attribute > | Improve this Doc View Source Commands Gets a read-only list of commands associated with this module. Declaration public IReadOnlyList<CommandInfo> Commands { get; } Property Value Type Description IReadOnlyList < CommandInfo > | Improve this Doc View Source Group Gets the group name (main prefix) of this module. Declaration public string Group { get; } Property Value Type Description System.String | Improve this Doc View Source IsSubmodule Gets a value that indicates whether this module is a submodule or not. Declaration public bool IsSubmodule { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the name of this module. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Parent Gets the parent module of this submodule if applicable. Declaration public ModuleInfo Parent { get; } Property Value Type Description ModuleInfo | Improve this Doc View Source Preconditions Gets a read-only list of preconditions that apply to this module. Declaration public IReadOnlyList<PreconditionAttribute> Preconditions { get; } Property Value Type Description IReadOnlyList < PreconditionAttribute > | Improve this Doc View Source Remarks Gets the remarks of this module. Declaration public string Remarks { get; } Property Value Type Description System.String | Improve this Doc View Source Service Gets the command service associated with this module. Declaration public CommandService Service { get; } Property Value Type Description CommandService | Improve this Doc View Source Submodules Gets a read-only list of submodules associated with this module. Declaration public IReadOnlyList<ModuleInfo> Submodules { get; } Property Value Type Description IReadOnlyList < ModuleInfo > | Improve this Doc View Source Summary Gets the summary of this module. Declaration public string Summary { get; } Property Value Type Description System.String Extension Methods CommandServiceExtensions.GetExecutableCommandsAsync(ModuleInfo, ICommandContext, IServiceProvider)"
  },
  "api/KaiHeiLa.Commands.MultiMatchHandling.html": {
    "href": "api/KaiHeiLa.Commands.MultiMatchHandling.html",
    "title": "Enum MultiMatchHandling | KaiHeiLa.Net 文档",
    "keywords": "Enum MultiMatchHandling Specifies the behavior when multiple matches are found during the command parsing stage. Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public enum MultiMatchHandling : int Fields Name Description Best Indicates that when multiple results are found, the best result should be chosen. Exception Indicates that when multiple results are found, an exception should be thrown."
  },
  "api/KaiHeiLa.Commands.NameAttribute.html": {
    "href": "api/KaiHeiLa.Commands.NameAttribute.html",
    "title": "Class NameAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class NameAttribute Marks the public name of a command, module, or parameter. Inheritance System.Object NameAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class NameAttribute : Attribute Constructors | Improve this Doc View Source NameAttribute(String) Marks the public name of a command, module, or parameter with the provided name. Declaration public NameAttribute(string text) Parameters Type Name Description System.String text The public name of the object. Properties | Improve this Doc View Source Text Gets the name of the command. Declaration public string Text { get; } Property Value Type Description System.String"
  },
  "api/KaiHeiLa.Commands.NamedArgumentTypeAttribute.html": {
    "href": "api/KaiHeiLa.Commands.NamedArgumentTypeAttribute.html",
    "title": "Class NamedArgumentTypeAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class NamedArgumentTypeAttribute Instructs the command system to treat command parameters of this type as a collection of named arguments matching to its properties. Inheritance System.Object NamedArgumentTypeAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public sealed class NamedArgumentTypeAttribute : Attribute"
  },
  "api/KaiHeiLa.Commands.OverrideTypeReaderAttribute.html": {
    "href": "api/KaiHeiLa.Commands.OverrideTypeReaderAttribute.html",
    "title": "Class OverrideTypeReaderAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class OverrideTypeReaderAttribute Marks the to be read by the specified TypeReader . Inheritance System.Object OverrideTypeReaderAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public sealed class OverrideTypeReaderAttribute : Attribute Remarks This attribute will override the TypeReader to be used when parsing for the desired type in the command. This is useful when one wishes to use a particular TypeReader without affecting other commands that are using the same target type. warning If the given type reader does not inherit from TypeReader , an will be thrown. Examples In this example, the will be read by a custom TypeReader , FriendlyTimeSpanTypeReader , instead of the KaiHeiLa.Commands.TimeSpanTypeReader shipped by KaiHeiLa.Net. [Command(\"time\")] public Task GetTimeAsync([OverrideTypeReader(typeof(FriendlyTimeSpanTypeReader))]TimeSpan time) => ReplyAsync(time); Constructors | Improve this Doc View Source OverrideTypeReaderAttribute(Type) Declaration public OverrideTypeReaderAttribute(Type overridenTypeReader) Parameters Type Name Description Type overridenTypeReader The TypeReader to be used with the parameter. Properties | Improve this Doc View Source TypeReader Gets the specified TypeReader of the parameter. Declaration public Type TypeReader { get; } Property Value Type Description Type"
  },
  "api/KaiHeiLa.Commands.ParameterInfo.html": {
    "href": "api/KaiHeiLa.Commands.ParameterInfo.html",
    "title": "Class ParameterInfo | KaiHeiLa.Net 文档",
    "keywords": "Class ParameterInfo Provides the information of a parameter. Inheritance System.Object ParameterInfo Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class ParameterInfo : object Properties | Improve this Doc View Source Attributes Gets a read-only list of attributes that apply to this parameter. Declaration public IReadOnlyList<Attribute> Attributes { get; } Property Value Type Description IReadOnlyList < Attribute > | Improve this Doc View Source Command Gets the command that associates with this parameter. Declaration public CommandInfo Command { get; } Property Value Type Description CommandInfo | Improve this Doc View Source DefaultValue Gets the default value for this optional parameter if applicable. Declaration public object DefaultValue { get; } Property Value Type Description System.Object | Improve this Doc View Source IsMultiple Declaration public bool IsMultiple { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOptional Gets a value that indicates whether this parameter is optional or not. Declaration public bool IsOptional { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRemainder Gets a value that indicates whether this parameter is a remainder parameter or not. Declaration public bool IsRemainder { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the name of this parameter. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Preconditions Gets a read-only list of precondition that apply to this parameter. Declaration public IReadOnlyList<ParameterPreconditionAttribute> Preconditions { get; } Property Value Type Description IReadOnlyList < ParameterPreconditionAttribute > | Improve this Doc View Source Summary Gets the summary of this parameter. Declaration public string Summary { get; } Property Value Type Description System.String | Improve this Doc View Source Type Gets the type of the parameter. Declaration public Type Type { get; } Property Value Type Description Type Methods | Improve this Doc View Source CheckPreconditionsAsync(ICommandContext, Object, IServiceProvider) Declaration public Task<PreconditionResult> CheckPreconditionsAsync(ICommandContext context, object arg, IServiceProvider services = null) Parameters Type Name Description ICommandContext context System.Object arg IServiceProvider services Returns Type Description Task < PreconditionResult > | Improve this Doc View Source ParseAsync(ICommandContext, String, IServiceProvider) Declaration public Task<TypeReaderResult> ParseAsync(ICommandContext context, string input, IServiceProvider services = null) Parameters Type Name Description ICommandContext context System.String input IServiceProvider services Returns Type Description Task < TypeReaderResult > | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/KaiHeiLa.Commands.ParameterPreconditionAttribute.html": {
    "href": "api/KaiHeiLa.Commands.ParameterPreconditionAttribute.html",
    "title": "Class ParameterPreconditionAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class ParameterPreconditionAttribute Requires the parameter to pass the specified precondition before execution can begin. Inheritance System.Object ParameterPreconditionAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public abstract class ParameterPreconditionAttribute : Attribute Methods | Improve this Doc View Source CheckPermissionsAsync(ICommandContext, ParameterInfo, Object, IServiceProvider) Checks whether the condition is met before execution of the command. Declaration public abstract Task<PreconditionResult> CheckPermissionsAsync(ICommandContext context, ParameterInfo parameter, object value, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. ParameterInfo parameter The parameter of the command being checked against. System.Object value The raw value of the parameter. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < PreconditionResult > See Also PreconditionAttribute"
  },
  "api/KaiHeiLa.Commands.ParseResult.html": {
    "href": "api/KaiHeiLa.Commands.ParseResult.html",
    "title": "Struct ParseResult | KaiHeiLa.Net 文档",
    "keywords": "Struct ParseResult Contains information for the parsing result from the command service's parser. Implements IResult Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public struct ParseResult : IResult Properties | Improve this Doc View Source ArgValues Declaration public IReadOnlyList<TypeReaderResult> ArgValues { get; } Property Value Type Description IReadOnlyList < TypeReaderResult > | Improve this Doc View Source Error Describes the error type that may have occurred during the operation. Declaration public CommandError? Error { get; } Property Value Type Description System.Nullable < CommandError > A CommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. | Improve this Doc View Source ErrorParameter Provides information about the parameter that caused the parsing error. Declaration public ParameterInfo ErrorParameter { get; } Property Value Type Description ParameterInfo A ParameterInfo indicating the parameter info of the error that may have occurred during parsing; null if the parsing was successful or the parsing error is not specific to a single parameter. | Improve this Doc View Source ErrorReason Describes the reason for the error. Declaration public string ErrorReason { get; } Property Value Type Description System.String A string containing the error reason. | Improve this Doc View Source IsSuccess Indicates whether the operation was successful or not. Declaration public bool IsSuccess { get; } Property Value Type Description System.Boolean true if the result is positive; otherwise false . | Improve this Doc View Source ParamValues Declaration public IReadOnlyList<TypeReaderResult> ParamValues { get; } Property Value Type Description IReadOnlyList < TypeReaderResult > Methods | Improve this Doc View Source FromError(Exception) Declaration public static ParseResult FromError(Exception ex) Parameters Type Name Description Exception ex Returns Type Description ParseResult | Improve this Doc View Source FromError(CommandError, String) Declaration public static ParseResult FromError(CommandError error, string reason) Parameters Type Name Description CommandError error System.String reason Returns Type Description ParseResult | Improve this Doc View Source FromError(CommandError, String, ParameterInfo) Declaration public static ParseResult FromError(CommandError error, string reason, ParameterInfo parameterInfo) Parameters Type Name Description CommandError error System.String reason ParameterInfo parameterInfo Returns Type Description ParseResult | Improve this Doc View Source FromError(IResult) Declaration public static ParseResult FromError(IResult result) Parameters Type Name Description IResult result Returns Type Description ParseResult | Improve this Doc View Source FromError(IResult, ParameterInfo) Declaration public static ParseResult FromError(IResult result, ParameterInfo parameterInfo) Parameters Type Name Description IResult result ParameterInfo parameterInfo Returns Type Description ParseResult | Improve this Doc View Source FromSuccess(IReadOnlyList<TypeReaderResult>, IReadOnlyList<TypeReaderResult>) Declaration public static ParseResult FromSuccess(IReadOnlyList<TypeReaderResult> argValues, IReadOnlyList<TypeReaderResult> paramValues) Parameters Type Name Description IReadOnlyList < TypeReaderResult > argValues IReadOnlyList < TypeReaderResult > paramValues Returns Type Description ParseResult | Improve this Doc View Source FromSuccess(IReadOnlyList<TypeReaderValue>, IReadOnlyList<TypeReaderValue>) Declaration public static ParseResult FromSuccess(IReadOnlyList<TypeReaderValue> argValues, IReadOnlyList<TypeReaderValue> paramValues) Parameters Type Name Description IReadOnlyList < TypeReaderValue > argValues IReadOnlyList < TypeReaderValue > paramValues Returns Type Description ParseResult | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IResult"
  },
  "api/KaiHeiLa.Commands.PreconditionAttribute.html": {
    "href": "api/KaiHeiLa.Commands.PreconditionAttribute.html",
    "title": "Class PreconditionAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class PreconditionAttribute Requires the module or class to pass the specified precondition before execution can begin. Inheritance System.Object PreconditionAttribute RequireBotPermissionAttribute RequireContextAttribute RequireUserAttribute RequireUserPermissionAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public abstract class PreconditionAttribute : Attribute Properties | Improve this Doc View Source ErrorMessage When overridden in a derived class, uses the supplied string as the error message if the precondition doesn't pass. Setting this for a class that doesn't override this property is a no-op. Declaration public virtual string ErrorMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source Group Specifies a group that this precondition belongs to. Declaration public string Group { get; set; } Property Value Type Description System.String Remarks Preconditions of the same group require only one of the preconditions to pass in order to be successful (A || B). Specifying Group = null or not at all will require all preconditions to pass, just like normal (A && B). Methods | Improve this Doc View Source CheckPermissionsAsync(ICommandContext, CommandInfo, IServiceProvider) Checks if the command has the sufficient permission to be executed. Declaration public abstract Task<PreconditionResult> CheckPermissionsAsync(ICommandContext context, CommandInfo command, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. CommandInfo command The command being executed. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < PreconditionResult > See Also ParameterPreconditionAttribute"
  },
  "api/KaiHeiLa.Commands.PreconditionGroupResult.html": {
    "href": "api/KaiHeiLa.Commands.PreconditionGroupResult.html",
    "title": "Class PreconditionGroupResult | KaiHeiLa.Net 文档",
    "keywords": "Class PreconditionGroupResult Inheritance System.Object PreconditionResult PreconditionGroupResult Implements IResult Inherited Members PreconditionResult.Error PreconditionResult.ErrorReason PreconditionResult.IsSuccess PreconditionResult.FromError(String) Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class PreconditionGroupResult : PreconditionResult, IResult Constructors | Improve this Doc View Source PreconditionGroupResult(Nullable<CommandError>, String, ICollection<PreconditionResult>) Declaration protected PreconditionGroupResult(CommandError? error, string errorReason, ICollection<PreconditionResult> preconditions) Parameters Type Name Description System.Nullable < CommandError > error System.String errorReason ICollection < PreconditionResult > preconditions Properties | Improve this Doc View Source PreconditionResults Declaration public IReadOnlyCollection<PreconditionResult> PreconditionResults { get; } Property Value Type Description IReadOnlyCollection < PreconditionResult > Methods | Improve this Doc View Source FromError(Exception) Declaration public static PreconditionGroupResult FromError(Exception ex) Parameters Type Name Description Exception ex Returns Type Description PreconditionGroupResult | Improve this Doc View Source FromError(IResult) Declaration public static PreconditionGroupResult FromError(IResult result) Parameters Type Name Description IResult result Returns Type Description PreconditionGroupResult | Improve this Doc View Source FromError(String, ICollection<PreconditionResult>) Declaration public static PreconditionGroupResult FromError(string reason, ICollection<PreconditionResult> preconditions) Parameters Type Name Description System.String reason ICollection < PreconditionResult > preconditions Returns Type Description PreconditionGroupResult | Improve this Doc View Source FromSuccess() Declaration public static PreconditionGroupResult FromSuccess() Returns Type Description PreconditionGroupResult | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides PreconditionResult.ToString() Implements IResult"
  },
  "api/KaiHeiLa.Commands.PreconditionResult.html": {
    "href": "api/KaiHeiLa.Commands.PreconditionResult.html",
    "title": "Class PreconditionResult | KaiHeiLa.Net 文档",
    "keywords": "Class PreconditionResult Represents a result type for command preconditions. Inheritance System.Object PreconditionResult PreconditionGroupResult Implements IResult Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class PreconditionResult : object, IResult Constructors | Improve this Doc View Source PreconditionResult(Nullable<CommandError>, String) Initializes a new PreconditionResult class with the command error type and reason. Declaration protected PreconditionResult(CommandError? error, string errorReason) Parameters Type Name Description System.Nullable < CommandError > error The type of failure. System.String errorReason The reason of failure. Properties | Improve this Doc View Source Error Describes the error type that may have occurred during the operation. Declaration public CommandError? Error { get; } Property Value Type Description System.Nullable < CommandError > A CommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. | Improve this Doc View Source ErrorReason Describes the reason for the error. Declaration public string ErrorReason { get; } Property Value Type Description System.String A string containing the error reason. | Improve this Doc View Source IsSuccess Indicates whether the operation was successful or not. Declaration public bool IsSuccess { get; } Property Value Type Description System.Boolean true if the result is positive; otherwise false . Methods | Improve this Doc View Source FromError(Exception) Declaration public static PreconditionResult FromError(Exception ex) Parameters Type Name Description Exception ex Returns Type Description PreconditionResult | Improve this Doc View Source FromError(IResult) Returns a PreconditionResult with the specified result type. Declaration public static PreconditionResult FromError(IResult result) Parameters Type Name Description IResult result The result of failure. Returns Type Description PreconditionResult | Improve this Doc View Source FromError(String) Returns a PreconditionResult with UnmetPrecondition and the specified reason. Declaration public static PreconditionResult FromError(string reason) Parameters Type Name Description System.String reason The reason of failure. Returns Type Description PreconditionResult | Improve this Doc View Source FromSuccess() Returns a PreconditionResult with no errors. Declaration public static PreconditionResult FromSuccess() Returns Type Description PreconditionResult | Improve this Doc View Source ToString() Returns a string indicating whether the PreconditionResult is successful. Declaration public override string ToString() Returns Type Description System.String Implements IResult"
  },
  "api/KaiHeiLa.Commands.PriorityAttribute.html": {
    "href": "api/KaiHeiLa.Commands.PriorityAttribute.html",
    "title": "Class PriorityAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class PriorityAttribute Sets priority of commands. Inheritance System.Object PriorityAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class PriorityAttribute : Attribute Constructors | Improve this Doc View Source PriorityAttribute(Int32) Initializes a new PriorityAttribute attribute with the given priority. Declaration public PriorityAttribute(int priority) Parameters Type Name Description System.Int32 priority Properties | Improve this Doc View Source Priority Gets the priority which has been set for the command. Declaration public int Priority { get; } Property Value Type Description System.Int32"
  },
  "api/KaiHeiLa.Commands.RemainderAttribute.html": {
    "href": "api/KaiHeiLa.Commands.RemainderAttribute.html",
    "title": "Class RemainderAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class RemainderAttribute Marks the input to not be parsed by the parser. Inheritance System.Object RemainderAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class RemainderAttribute : Attribute"
  },
  "api/KaiHeiLa.Commands.RemarksAttribute.html": {
    "href": "api/KaiHeiLa.Commands.RemarksAttribute.html",
    "title": "Class RemarksAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class RemarksAttribute Attaches remarks to your commands. Inheritance System.Object RemarksAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class RemarksAttribute : Attribute Constructors | Improve this Doc View Source RemarksAttribute(String) Declaration public RemarksAttribute(string text) Parameters Type Name Description System.String text Properties | Improve this Doc View Source Text Declaration public string Text { get; } Property Value Type Description System.String"
  },
  "api/KaiHeiLa.Commands.RequireBotPermissionAttribute.html": {
    "href": "api/KaiHeiLa.Commands.RequireBotPermissionAttribute.html",
    "title": "Class RequireBotPermissionAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class RequireBotPermissionAttribute Requires the bot to have a specific permission in the channel a command is invoked in. Inheritance System.Object PreconditionAttribute RequireBotPermissionAttribute Inherited Members PreconditionAttribute.Group Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class RequireBotPermissionAttribute : PreconditionAttribute Constructors | Improve this Doc View Source RequireBotPermissionAttribute(ChannelPermission) Requires that the bot account to have a specific ChannelPermission . Declaration public RequireBotPermissionAttribute(ChannelPermission permission) Parameters Type Name Description ChannelPermission permission The ChannelPermission that the bot must have. Multiple permissions can be specified by ORing the permissions together. | Improve this Doc View Source RequireBotPermissionAttribute(GuildPermission) Requires the bot account to have a specific GuildPermission . Declaration public RequireBotPermissionAttribute(GuildPermission permission) Parameters Type Name Description GuildPermission permission The GuildPermission that the bot must have. Multiple permissions can be specified by ORing the permissions together. Remarks This precondition will always fail if the command is being invoked in a IPrivateChannel . Properties | Improve this Doc View Source ChannelPermission Gets the specified ChannelPermission of the precondition. Declaration public ChannelPermission? ChannelPermission { get; } Property Value Type Description System.Nullable < ChannelPermission > | Improve this Doc View Source ErrorMessage When overridden in a derived class, uses the supplied string as the error message if the precondition doesn't pass. Setting this for a class that doesn't override this property is a no-op. Declaration public override string ErrorMessage { get; set; } Property Value Type Description System.String Overrides PreconditionAttribute.ErrorMessage | Improve this Doc View Source GuildPermission Gets the specified GuildPermission of the precondition. Declaration public GuildPermission? GuildPermission { get; } Property Value Type Description System.Nullable < GuildPermission > | Improve this Doc View Source NotAGuildErrorMessage Gets or sets the error message if the precondition fails due to being run outside of a Guild channel. Declaration public string NotAGuildErrorMessage { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source CheckPermissionsAsync(ICommandContext, CommandInfo, IServiceProvider) Checks if the command has the sufficient permission to be executed. Declaration public override Task<PreconditionResult> CheckPermissionsAsync(ICommandContext context, CommandInfo command, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. CommandInfo command The command being executed. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < PreconditionResult > Overrides PreconditionAttribute.CheckPermissionsAsync(ICommandContext, CommandInfo, IServiceProvider)"
  },
  "api/KaiHeiLa.Commands.RequireContextAttribute.html": {
    "href": "api/KaiHeiLa.Commands.RequireContextAttribute.html",
    "title": "Class RequireContextAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class RequireContextAttribute Requires the command to be invoked in a specified context (e.g. in guild, DM). Inheritance System.Object PreconditionAttribute RequireContextAttribute Inherited Members PreconditionAttribute.Group Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class RequireContextAttribute : PreconditionAttribute Constructors | Improve this Doc View Source RequireContextAttribute(ContextType) Requires the command to be invoked in the specified context. Declaration public RequireContextAttribute(ContextType contexts) Parameters Type Name Description ContextType contexts The type of context the command can be invoked in. Multiple contexts can be specified by ORing the contexts together. Examples [Command(\"secret\")] [RequireContext(ContextType.DM | ContextType.Group)] public Task PrivateOnlyAsync() { return ReplyAsync(\"shh, this command is a secret\"); } Properties | Improve this Doc View Source Contexts Gets the context required to execute the command. Declaration public ContextType Contexts { get; } Property Value Type Description ContextType | Improve this Doc View Source ErrorMessage When overridden in a derived class, uses the supplied string as the error message if the precondition doesn't pass. Setting this for a class that doesn't override this property is a no-op. Declaration public override string ErrorMessage { get; set; } Property Value Type Description System.String Overrides PreconditionAttribute.ErrorMessage Methods | Improve this Doc View Source CheckPermissionsAsync(ICommandContext, CommandInfo, IServiceProvider) Checks if the command has the sufficient permission to be executed. Declaration public override Task<PreconditionResult> CheckPermissionsAsync(ICommandContext context, CommandInfo command, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. CommandInfo command The command being executed. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < PreconditionResult > Overrides PreconditionAttribute.CheckPermissionsAsync(ICommandContext, CommandInfo, IServiceProvider)"
  },
  "api/KaiHeiLa.Commands.RequireUserAttribute.html": {
    "href": "api/KaiHeiLa.Commands.RequireUserAttribute.html",
    "title": "Class RequireUserAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class RequireUserAttribute Requires the command to be invoked by the specified user. Inheritance System.Object PreconditionAttribute RequireUserAttribute Inherited Members PreconditionAttribute.Group Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class RequireUserAttribute : PreconditionAttribute Remarks This precondition will restrict the access of the command or module to a specified user. If the precondition fails to be met, an erroneous PreconditionResult will be returned with the message \"Command can only be run by the specified user.\" For example, you can pass the owner of this bot application to restrict the command to the bot owner to be able to use it. Examples The following example restricts the command to a set of sensitive commands that only the specified user should be able to access. [RequireUser(2810246202)] [Group(\"admin\")] public class AdminModule : ModuleBase { [Command(\"exit\")] public async Task ExitAsync() { Environment.Exit(0); } } Constructors | Improve this Doc View Source RequireUserAttribute(IUser) Declaration public RequireUserAttribute(IUser user) Parameters Type Name Description IUser user | Improve this Doc View Source RequireUserAttribute(UInt64) Declaration public RequireUserAttribute(ulong userId) Parameters Type Name Description System.UInt64 userId Properties | Improve this Doc View Source ErrorMessage When overridden in a derived class, uses the supplied string as the error message if the precondition doesn't pass. Setting this for a class that doesn't override this property is a no-op. Declaration public override string ErrorMessage { get; set; } Property Value Type Description System.String Overrides PreconditionAttribute.ErrorMessage Methods | Improve this Doc View Source CheckPermissionsAsync(ICommandContext, CommandInfo, IServiceProvider) Checks if the command has the sufficient permission to be executed. Declaration public override Task<PreconditionResult> CheckPermissionsAsync(ICommandContext context, CommandInfo command, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. CommandInfo command The command being executed. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < PreconditionResult > Overrides PreconditionAttribute.CheckPermissionsAsync(ICommandContext, CommandInfo, IServiceProvider)"
  },
  "api/KaiHeiLa.Commands.RequireUserPermissionAttribute.html": {
    "href": "api/KaiHeiLa.Commands.RequireUserPermissionAttribute.html",
    "title": "Class RequireUserPermissionAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class RequireUserPermissionAttribute Requires the user invoking the command to have a specified permission. Inheritance System.Object PreconditionAttribute RequireUserPermissionAttribute Inherited Members PreconditionAttribute.Group Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class RequireUserPermissionAttribute : PreconditionAttribute Constructors | Improve this Doc View Source RequireUserPermissionAttribute(ChannelPermission) Requires that the user invoking the command to have a specific ChannelPermission . Declaration public RequireUserPermissionAttribute(ChannelPermission permission) Parameters Type Name Description ChannelPermission permission The ChannelPermission that the user must have. Multiple permissions can be specified by ORing the permissions together. | Improve this Doc View Source RequireUserPermissionAttribute(GuildPermission) Requires that the user invoking the command to have a specific GuildPermission . Declaration public RequireUserPermissionAttribute(GuildPermission permission) Parameters Type Name Description GuildPermission permission The GuildPermission that the user must have. Multiple permissions can be specified by ORing the permissions together. Remarks This precondition will always fail if the command is being invoked in a IPrivateChannel . Properties | Improve this Doc View Source ChannelPermission Gets the specified ChannelPermission of the precondition. Declaration public ChannelPermission? ChannelPermission { get; } Property Value Type Description System.Nullable < ChannelPermission > | Improve this Doc View Source ErrorMessage When overridden in a derived class, uses the supplied string as the error message if the precondition doesn't pass. Setting this for a class that doesn't override this property is a no-op. Declaration public override string ErrorMessage { get; set; } Property Value Type Description System.String Overrides PreconditionAttribute.ErrorMessage | Improve this Doc View Source GuildPermission Gets the specified GuildPermission of the precondition. Declaration public GuildPermission? GuildPermission { get; } Property Value Type Description System.Nullable < GuildPermission > | Improve this Doc View Source NotAGuildErrorMessage Gets or sets the error message if the precondition fails due to being run outside of a Guild channel. Declaration public string NotAGuildErrorMessage { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source CheckPermissionsAsync(ICommandContext, CommandInfo, IServiceProvider) Checks if the command has the sufficient permission to be executed. Declaration public override Task<PreconditionResult> CheckPermissionsAsync(ICommandContext context, CommandInfo command, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. CommandInfo command The command being executed. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < PreconditionResult > Overrides PreconditionAttribute.CheckPermissionsAsync(ICommandContext, CommandInfo, IServiceProvider)"
  },
  "api/KaiHeiLa.Commands.RoleTypeReader-1.html": {
    "href": "api/KaiHeiLa.Commands.RoleTypeReader-1.html",
    "title": "Class RoleTypeReader<T> | KaiHeiLa.Net 文档",
    "keywords": "Class RoleTypeReader<T> A TypeReader for parsing objects implementing IRole . Inheritance System.Object TypeReader RoleTypeReader<T> Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class RoleTypeReader<T> : TypeReader where T : class, IRole Type Parameters Name Description T The type to be checked; must implement IRole . Methods | Improve this Doc View Source ReadAsync(ICommandContext, String, IServiceProvider) Attempts to parse the input into the desired type. Declaration public override Task<TypeReaderResult> ReadAsync(ICommandContext context, string input, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. System.String input The raw input of the command. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < TypeReaderResult > A task that represents the asynchronous parsing operation. The task result contains the parsing result. Overrides TypeReader.ReadAsync(ICommandContext, String, IServiceProvider)"
  },
  "api/KaiHeiLa.Commands.RunMode.html": {
    "href": "api/KaiHeiLa.Commands.RunMode.html",
    "title": "Enum RunMode | KaiHeiLa.Net 文档",
    "keywords": "Enum RunMode Specifies the behavior of the command execution workflow. Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public enum RunMode : int Fields Name Description Async Executes the command on a different thread from the gateway one. Default The default behavior set in CommandServiceConfig . Sync Executes the command on the same thread as gateway one. See Also CommandServiceConfig CommandAttribute"
  },
  "api/KaiHeiLa.Commands.RuntimeResult.html": {
    "href": "api/KaiHeiLa.Commands.RuntimeResult.html",
    "title": "Class RuntimeResult | KaiHeiLa.Net 文档",
    "keywords": "Class RuntimeResult Inheritance System.Object RuntimeResult Implements IResult Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public abstract class RuntimeResult : object, IResult Constructors | Improve this Doc View Source RuntimeResult(Nullable<CommandError>, String) Initializes a new RuntimeResult class with the type of error and reason. Declaration protected RuntimeResult(CommandError? error, string reason) Parameters Type Name Description System.Nullable < CommandError > error The type of failure, or null if none. System.String reason The reason of failure. Properties | Improve this Doc View Source Error Describes the error type that may have occurred during the operation. Declaration public CommandError? Error { get; } Property Value Type Description System.Nullable < CommandError > A CommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. | Improve this Doc View Source IsSuccess Indicates whether the operation was successful or not. Declaration public bool IsSuccess { get; } Property Value Type Description System.Boolean true if the result is positive; otherwise false . | Improve this Doc View Source Reason Describes the execution reason or result. Declaration public string Reason { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Explicit Interface Implementations | Improve this Doc View Source IResult.ErrorReason Describes the reason for the error. Declaration string IResult.ErrorReason { get; } Returns Type Description System.String A string containing the error reason. Implements IResult"
  },
  "api/KaiHeiLa.Commands.SearchResult.html": {
    "href": "api/KaiHeiLa.Commands.SearchResult.html",
    "title": "Struct SearchResult | KaiHeiLa.Net 文档",
    "keywords": "Struct SearchResult Implements IResult Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public struct SearchResult : IResult Properties | Improve this Doc View Source Commands Declaration public IReadOnlyList<CommandMatch> Commands { get; } Property Value Type Description IReadOnlyList < CommandMatch > | Improve this Doc View Source Error Describes the error type that may have occurred during the operation. Declaration public CommandError? Error { get; } Property Value Type Description System.Nullable < CommandError > A CommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. | Improve this Doc View Source ErrorReason Describes the reason for the error. Declaration public string ErrorReason { get; } Property Value Type Description System.String A string containing the error reason. | Improve this Doc View Source IsSuccess Indicates whether the operation was successful or not. Declaration public bool IsSuccess { get; } Property Value Type Description System.Boolean true if the result is positive; otherwise false . | Improve this Doc View Source Text Declaration public string Text { get; } Property Value Type Description System.String Methods | Improve this Doc View Source FromError(Exception) Declaration public static SearchResult FromError(Exception ex) Parameters Type Name Description Exception ex Returns Type Description SearchResult | Improve this Doc View Source FromError(CommandError, String) Declaration public static SearchResult FromError(CommandError error, string reason) Parameters Type Name Description CommandError error System.String reason Returns Type Description SearchResult | Improve this Doc View Source FromError(IResult) Declaration public static SearchResult FromError(IResult result) Parameters Type Name Description IResult result Returns Type Description SearchResult | Improve this Doc View Source FromSuccess(String, IReadOnlyList<CommandMatch>) Declaration public static SearchResult FromSuccess(string text, IReadOnlyList<CommandMatch> commands) Parameters Type Name Description System.String text IReadOnlyList < CommandMatch > commands Returns Type Description SearchResult | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IResult"
  },
  "api/KaiHeiLa.Commands.SocketCommandContext.html": {
    "href": "api/KaiHeiLa.Commands.SocketCommandContext.html",
    "title": "Class SocketCommandContext | KaiHeiLa.Net 文档",
    "keywords": "Class SocketCommandContext Represents a WebSocket-based context of a command. This may include the client, guild, channel, user, and message. Inheritance System.Object SocketCommandContext Implements ICommandContext Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketCommandContext : object, ICommandContext Constructors | Improve this Doc View Source SocketCommandContext(KaiHeiLaSocketClient, SocketUserMessage) Initializes a new SocketCommandContext class with the provided client and message. Declaration public SocketCommandContext(KaiHeiLaSocketClient client, SocketUserMessage msg) Parameters Type Name Description KaiHeiLaSocketClient client The underlying client. SocketUserMessage msg The underlying message. Properties | Improve this Doc View Source Channel Gets the ISocketMessageChannel that the command is executed in. Declaration public ISocketMessageChannel Channel { get; } Property Value Type Description ISocketMessageChannel | Improve this Doc View Source Client Gets the KaiHeiLaSocketClient that the command is executed with. Declaration public KaiHeiLaSocketClient Client { get; } Property Value Type Description KaiHeiLaSocketClient | Improve this Doc View Source Guild Gets the SocketGuild that the command is executed in. Declaration public SocketGuild Guild { get; } Property Value Type Description SocketGuild | Improve this Doc View Source IsPrivate Indicates whether the channel that the command is executed in is a private channel. Declaration public bool IsPrivate { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Message Gets the SocketUserMessage that the command is interpreted from. Declaration public SocketUserMessage Message { get; } Property Value Type Description SocketUserMessage | Improve this Doc View Source User Gets the SocketUser who executed the command. Declaration public SocketUser User { get; } Property Value Type Description SocketUser Explicit Interface Implementations | Improve this Doc View Source ICommandContext.Channel Gets the IMessageChannel that the command is executed in. Declaration IMessageChannel ICommandContext.Channel { get; } Returns Type Description IMessageChannel | Improve this Doc View Source ICommandContext.Client Gets the IKaiHeiLaClient that the command is executed with. Declaration IKaiHeiLaClient ICommandContext.Client { get; } Returns Type Description IKaiHeiLaClient | Improve this Doc View Source ICommandContext.Guild Gets the IGuild that the command is executed in. Declaration IGuild ICommandContext.Guild { get; } Returns Type Description IGuild | Improve this Doc View Source ICommandContext.Message Gets the IUserMessage that the command is interpreted from. Declaration IUserMessage ICommandContext.Message { get; } Returns Type Description IUserMessage | Improve this Doc View Source ICommandContext.User Gets the IUser who executed the command. Declaration IUser ICommandContext.User { get; } Returns Type Description IUser Implements ICommandContext"
  },
  "api/KaiHeiLa.Commands.SummaryAttribute.html": {
    "href": "api/KaiHeiLa.Commands.SummaryAttribute.html",
    "title": "Class SummaryAttribute | KaiHeiLa.Net 文档",
    "keywords": "Class SummaryAttribute Attaches a summary to your command. Inheritance System.Object SummaryAttribute Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class SummaryAttribute : Attribute Constructors | Improve this Doc View Source SummaryAttribute(String) Declaration public SummaryAttribute(string text) Parameters Type Name Description System.String text Properties | Improve this Doc View Source Text Declaration public string Text { get; } Property Value Type Description System.String"
  },
  "api/KaiHeiLa.Commands.TypeReader.html": {
    "href": "api/KaiHeiLa.Commands.TypeReader.html",
    "title": "Class TypeReader | KaiHeiLa.Net 文档",
    "keywords": "Class TypeReader Defines a reader class that parses user input into a specified type. Inheritance System.Object TypeReader ChannelTypeReader<T> MessageTypeReader<T> RoleTypeReader<T> UserTypeReader<T> Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public abstract class TypeReader : object Methods | Improve this Doc View Source ReadAsync(ICommandContext, String, IServiceProvider) Attempts to parse the input into the desired type. Declaration public abstract Task<TypeReaderResult> ReadAsync(ICommandContext context, string input, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. System.String input The raw input of the command. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < TypeReaderResult > A task that represents the asynchronous parsing operation. The task result contains the parsing result."
  },
  "api/KaiHeiLa.Commands.TypeReaderResult.html": {
    "href": "api/KaiHeiLa.Commands.TypeReaderResult.html",
    "title": "Struct TypeReaderResult | KaiHeiLa.Net 文档",
    "keywords": "Struct TypeReaderResult Implements IResult Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public struct TypeReaderResult : IResult Properties | Improve this Doc View Source BestMatch Declaration public object BestMatch { get; } Property Value Type Description System.Object | Improve this Doc View Source Error Describes the error type that may have occurred during the operation. Declaration public CommandError? Error { get; } Property Value Type Description System.Nullable < CommandError > A CommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. | Improve this Doc View Source ErrorReason Describes the reason for the error. Declaration public string ErrorReason { get; } Property Value Type Description System.String A string containing the error reason. | Improve this Doc View Source IsSuccess Indicates whether the operation was successful or not. Declaration public bool IsSuccess { get; } Property Value Type Description System.Boolean true if the result is positive; otherwise false . | Improve this Doc View Source Values Declaration public IReadOnlyCollection<TypeReaderValue> Values { get; } Property Value Type Description IReadOnlyCollection < TypeReaderValue > Methods | Improve this Doc View Source FromError(Exception) Declaration public static TypeReaderResult FromError(Exception ex) Parameters Type Name Description Exception ex Returns Type Description TypeReaderResult | Improve this Doc View Source FromError(CommandError, String) Declaration public static TypeReaderResult FromError(CommandError error, string reason) Parameters Type Name Description CommandError error System.String reason Returns Type Description TypeReaderResult | Improve this Doc View Source FromError(IResult) Declaration public static TypeReaderResult FromError(IResult result) Parameters Type Name Description IResult result Returns Type Description TypeReaderResult | Improve this Doc View Source FromSuccess(IReadOnlyCollection<TypeReaderValue>) Declaration public static TypeReaderResult FromSuccess(IReadOnlyCollection<TypeReaderValue> values) Parameters Type Name Description IReadOnlyCollection < TypeReaderValue > values Returns Type Description TypeReaderResult | Improve this Doc View Source FromSuccess(TypeReaderValue) Declaration public static TypeReaderResult FromSuccess(TypeReaderValue value) Parameters Type Name Description TypeReaderValue value Returns Type Description TypeReaderResult | Improve this Doc View Source FromSuccess(Object) Declaration public static TypeReaderResult FromSuccess(object value) Parameters Type Name Description System.Object value Returns Type Description TypeReaderResult | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IResult"
  },
  "api/KaiHeiLa.Commands.TypeReaderValue.html": {
    "href": "api/KaiHeiLa.Commands.TypeReaderValue.html",
    "title": "Struct TypeReaderValue | KaiHeiLa.Net 文档",
    "keywords": "Struct TypeReaderValue Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public struct TypeReaderValue Constructors | Improve this Doc View Source TypeReaderValue(Object, Single) Declaration public TypeReaderValue(object value, float score) Parameters Type Name Description System.Object value System.Single score Properties | Improve this Doc View Source Score Declaration public float Score { get; } Property Value Type Description System.Single | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description System.Object Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/KaiHeiLa.Commands.UserTypeReader-1.html": {
    "href": "api/KaiHeiLa.Commands.UserTypeReader-1.html",
    "title": "Class UserTypeReader<T> | KaiHeiLa.Net 文档",
    "keywords": "Class UserTypeReader<T> A TypeReader for parsing objects implementing IUser . Inheritance System.Object TypeReader UserTypeReader<T> Namespace : KaiHeiLa.Commands Assembly : KaiHeiLa.Net.Commands.dll Syntax public class UserTypeReader<T> : TypeReader where T : class, IUser Type Parameters Name Description T The type to be checked; must implement IUser . Methods | Improve this Doc View Source ReadAsync(ICommandContext, String, IServiceProvider) Attempts to parse the input into the desired type. Declaration public override Task<TypeReaderResult> ReadAsync(ICommandContext context, string input, IServiceProvider services) Parameters Type Name Description ICommandContext context The context of the command. System.String input The raw input of the command. IServiceProvider services The service collection used for dependency injection. Returns Type Description Task < TypeReaderResult > A task that represents the asynchronous parsing operation. The task result contains the parsing result. Overrides TypeReader.ReadAsync(ICommandContext, String, IServiceProvider)"
  },
  "api/KaiHeiLa.ConnectionState.html": {
    "href": "api/KaiHeiLa.ConnectionState.html",
    "title": "Enum ConnectionState | KaiHeiLa.Net 文档",
    "keywords": "Enum ConnectionState Specifies the connection state of a client. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ConnectionState : byte Fields Name Description Connected The client has established a connection to KaiHeiLa. Connecting The client is connecting to KaiHeiLa. Disconnected The client has disconnected from KaiHeiLa. Disconnecting The client is disconnecting from KaiHeiLa."
  },
  "api/KaiHeiLa.ContainerModule.html": {
    "href": "api/KaiHeiLa.ContainerModule.html",
    "title": "Class ContainerModule | KaiHeiLa.Net 文档",
    "keywords": "Class ContainerModule Represents a container module that can be used in an ICard . Inheritance System.Object ContainerModule Implements IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ContainerModule : object, IModule Properties | Improve this Doc View Source Elements Gets the elements in this container module. Declaration public ImmutableArray<ImageElement> Elements { get; } Property Value Type Description ImmutableArray < ImageElement > An representing the elements in this container module. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IModule"
  },
  "api/KaiHeiLa.ContainerModuleBuilder.html": {
    "href": "api/KaiHeiLa.ContainerModuleBuilder.html",
    "title": "Class ContainerModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class ContainerModuleBuilder Represents a container module builder for creating a ContainerModule . Inheritance System.Object ContainerModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ContainerModuleBuilder : object, IModuleBuilder Constructors | Improve this Doc View Source ContainerModuleBuilder() Initializes a new instance of the ContainerModuleBuilder class. Declaration public ContainerModuleBuilder() Fields | Improve this Doc View Source MaxElementCount Returns the maximum number of elements allowed by KaiHeiLa. Declaration public const int MaxElementCount = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source Elements Gets or sets the image elements in the container module. Declaration public List<ImageElementBuilder> Elements { get; set; } Property Value Type Description List < ImageElementBuilder > A containing the image elements in this image container module. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source AddElement(Action<ImageElementBuilder>) Adds an image element to the container module. Declaration public ContainerModuleBuilder AddElement(Action<ImageElementBuilder> action) Parameters Type Name Description Action < ImageElementBuilder > action The action to add an image element to the container module. Returns Type Description ContainerModuleBuilder The current builder. | Improve this Doc View Source AddElement(ImageElementBuilder) Adds an image element to the container module. Declaration public ContainerModuleBuilder AddElement(ImageElementBuilder field) Parameters Type Name Description ImageElementBuilder field The image element to add. Returns Type Description ContainerModuleBuilder The current builder. | Improve this Doc View Source Build() Builds this builder into a ContainerModule . Declaration public ContainerModule Build() Returns Type Description ContainerModule A ContainerModule representing the built container module object. Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.ContextModule.html": {
    "href": "api/KaiHeiLa.ContextModule.html",
    "title": "Class ContextModule | KaiHeiLa.Net 文档",
    "keywords": "Class ContextModule Represents a context module that can be used in an ICard . Inheritance System.Object ContextModule Implements IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ContextModule : object, IModule Properties | Improve this Doc View Source Elements Gets the elements in this context module. Declaration public ImmutableArray<IElement> Elements { get; } Property Value Type Description ImmutableArray < IElement > An representing the elements in this context module. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IModule"
  },
  "api/KaiHeiLa.ContextModuleBuilder.html": {
    "href": "api/KaiHeiLa.ContextModuleBuilder.html",
    "title": "Class ContextModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class ContextModuleBuilder Represents a context module builder for creating a ContextModule . Inheritance System.Object ContextModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ContextModuleBuilder : object, IModuleBuilder Constructors | Improve this Doc View Source ContextModuleBuilder() Initializes a new instance of the ContextModuleBuilder class. Declaration public ContextModuleBuilder() Fields | Improve this Doc View Source MaxElementCount Returns the maximum number of elements allowed by KaiHeiLa. Declaration public const int MaxElementCount = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source Elements Gets or sets the elements of the context module. Declaration public List<IElementBuilder> Elements { get; set; } Property Value Type Description List < IElementBuilder > | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source AddElement(ImageElementBuilder) Adds an image element to the context module. Declaration public ContextModuleBuilder AddElement(ImageElementBuilder field) Parameters Type Name Description ImageElementBuilder field The image element to add. Returns Type Description ContextModuleBuilder The current builder. | Improve this Doc View Source AddElement(KMarkdownElementBuilder) Adds a KMarkdown element to the context module. Declaration public ContextModuleBuilder AddElement(KMarkdownElementBuilder field) Parameters Type Name Description KMarkdownElementBuilder field The KMarkdown element to add. Returns Type Description ContextModuleBuilder The current builder. | Improve this Doc View Source AddElement(PlainTextElementBuilder) Adds a PlainText element to the context module. Declaration public ContextModuleBuilder AddElement(PlainTextElementBuilder field) Parameters Type Name Description PlainTextElementBuilder field The PlainText element to add. Returns Type Description ContextModuleBuilder The current builder. | Improve this Doc View Source AddElement<T>(Action<T>) Adds an element to the context module. Declaration public ContextModuleBuilder AddElement<T>(Action<T> action = null) where T : IElementBuilder, new() Parameters Type Name Description Action <T> action The action to add an element to the context module. Returns Type Description ContextModuleBuilder The current builder. Type Parameters Name Description T | Improve this Doc View Source Build() Builds this builder into a ContextModule . Declaration public ContextModule Build() Returns Type Description ContextModule A ContextModule representing the built context module object. Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.CountdownMode.html": {
    "href": "api/KaiHeiLa.CountdownMode.html",
    "title": "Enum CountdownMode | KaiHeiLa.Net 文档",
    "keywords": "Enum CountdownMode Specifies the display mode for the countdown timer. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum CountdownMode : int Fields Name Description Day The timer will display the time in days, hours, minutes and seconds. Hour The timer will display the time in hours, minutes and seconds. Second The timer will display the time in seconds."
  },
  "api/KaiHeiLa.CountdownModule.html": {
    "href": "api/KaiHeiLa.CountdownModule.html",
    "title": "Class CountdownModule | KaiHeiLa.Net 文档",
    "keywords": "Class CountdownModule Represents a countdown module that can be used in an ICard . Inheritance System.Object CountdownModule Implements IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class CountdownModule : object, IModule Properties | Improve this Doc View Source EndTime Gets the end time of the countdown. Declaration public DateTimeOffset EndTime { get; } Property Value Type Description DateTimeOffset The end time of the countdown. | Improve this Doc View Source Mode Gets the mode of the countdown. Declaration public CountdownMode Mode { get; } Property Value Type Description CountdownMode A CountdownMode value that represents the mode of the countdown. | Improve this Doc View Source StartTime Gets the start time of the countdown. Declaration public DateTimeOffset? StartTime { get; } Property Value Type Description System.Nullable < DateTimeOffset > The start time of the countdown. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IModule"
  },
  "api/KaiHeiLa.CountdownModuleBuilder.html": {
    "href": "api/KaiHeiLa.CountdownModuleBuilder.html",
    "title": "Class CountdownModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class CountdownModuleBuilder Represents a countdown module builder for creating a CountdownModule . Inheritance System.Object CountdownModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class CountdownModuleBuilder : object, IModuleBuilder Properties | Improve this Doc View Source EndTime Gets or sets the ending time of the countdown. Declaration public DateTimeOffset EndTime { get; set; } Property Value Type Description DateTimeOffset The time at which the countdown ends. | Improve this Doc View Source Mode Gets or sets how the countdown should be displayed. Declaration public CountdownMode Mode { get; set; } Property Value Type Description CountdownMode A CountdownMode representing how the countdown should be displayed. | Improve this Doc View Source StartTime Gets or sets the beginning time of the countdown. Declaration public DateTimeOffset? StartTime { get; set; } Property Value Type Description System.Nullable < DateTimeOffset > The time at which the countdown begins. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source Build() Builds this builder into a CountdownModule . Declaration public CountdownModule Build() Returns Type Description CountdownModule A CountdownModule representing the built countdown module object. | Improve this Doc View Source WithEndTime(DateTimeOffset) Sets the beginning time of the countdown. Declaration public CountdownModuleBuilder WithEndTime(DateTimeOffset endTime) Parameters Type Name Description DateTimeOffset endTime The time at which the countdown ends. Returns Type Description CountdownModuleBuilder The current builder. | Improve this Doc View Source WithMode(CountdownMode) Sets how the countdown should be displayed. Declaration public CountdownModuleBuilder WithMode(CountdownMode mode) Parameters Type Name Description CountdownMode mode A CountdownMode representing how the countdown should be displayed. Returns Type Description CountdownModuleBuilder The current builder. | Improve this Doc View Source WithStartTime(DateTimeOffset) Sets the beginning time of the countdown. Declaration public CountdownModuleBuilder WithStartTime(DateTimeOffset startTime) Parameters Type Name Description DateTimeOffset startTime The time at which the countdown begins. Returns Type Description CountdownModuleBuilder The current builder. Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.CreateCategoryChannelProperties.html": {
    "href": "api/KaiHeiLa.CreateCategoryChannelProperties.html",
    "title": "Class CreateCategoryChannelProperties | KaiHeiLa.Net 文档",
    "keywords": "Class CreateCategoryChannelProperties Provides properties that are used to create an ICategoryChannel with the specified properties. Inheritance System.Object CreateGuildChannelProperties CreateCategoryChannelProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class CreateCategoryChannelProperties : CreateGuildChannelProperties"
  },
  "api/KaiHeiLa.CreateGuildChannelProperties.html": {
    "href": "api/KaiHeiLa.CreateGuildChannelProperties.html",
    "title": "Class CreateGuildChannelProperties | KaiHeiLa.Net 文档",
    "keywords": "Class CreateGuildChannelProperties Properties that are used to create an IGuildChannel with the specified properties. Inheritance System.Object CreateGuildChannelProperties CreateCategoryChannelProperties CreateTextChannelProperties CreateVoiceChannelProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class CreateGuildChannelProperties : object"
  },
  "api/KaiHeiLa.CreateTextChannelProperties.html": {
    "href": "api/KaiHeiLa.CreateTextChannelProperties.html",
    "title": "Class CreateTextChannelProperties | KaiHeiLa.Net 文档",
    "keywords": "Class CreateTextChannelProperties Provides properties that are used to create an ITextChannel with the specified properties. Inheritance System.Object CreateGuildChannelProperties CreateTextChannelProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class CreateTextChannelProperties : CreateGuildChannelProperties Properties | Improve this Doc View Source CategoryId Gets or sets the category ID for this channel. Declaration public ulong? CategoryId { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Remarks Setting this value to a category's identifier will set this channel's parent to the specified channel; setting this value to null will leave this channel alone from any parents. | Improve this Doc View Source Topic Gets or sets the topic of the channel. Declaration public Optional<string> Topic { get; set; } Property Value Type Description Optional < System.String > Remarks Setting this value to any string other than null or will set the channel topic or description to the desired value."
  },
  "api/KaiHeiLa.CreateVoiceChannelProperties.html": {
    "href": "api/KaiHeiLa.CreateVoiceChannelProperties.html",
    "title": "Class CreateVoiceChannelProperties | KaiHeiLa.Net 文档",
    "keywords": "Class CreateVoiceChannelProperties Provides properties that are used to create an IVoiceChannel with the specified properties. Inheritance System.Object CreateGuildChannelProperties CreateVoiceChannelProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class CreateVoiceChannelProperties : CreateGuildChannelProperties Properties | Improve this Doc View Source CategoryId Gets or sets the category ID for this channel. Declaration public ulong? CategoryId { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Remarks Setting this value to a category's identifier will set this channel's parent to the specified channel; setting this value to null will leave this channel alone from any parents. | Improve this Doc View Source UserLimit Gets or sets the maximum number of users that can be present in a channel, or null if none. Declaration public int? UserLimit { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source VoiceQuality Gets or sets the voice quality that the clients in this voice channel are requested to use. Declaration public VoiceQuality? VoiceQuality { get; set; } Property Value Type Description System.Nullable < VoiceQuality >"
  },
  "api/KaiHeiLa.Direction.html": {
    "href": "api/KaiHeiLa.Direction.html",
    "title": "Enum Direction | KaiHeiLa.Net 文档",
    "keywords": "Enum Direction Specifies the direction of where message(s) should be retrieved from. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum Direction : int Remarks This enum is used to specify the direction for retrieving messages. important At the time of writing, Around is not yet implemented into GetMessagesAsync(Int32, CacheMode, RequestOptions) . Attempting to use the method with Around will throw a . Fields Name Description After The message(s) should be retrieved after a message. Around The message(s) should be retrieved around a message. Before The message(s) should be retrieved before a message. Unspecified"
  },
  "api/KaiHeiLa.DividerModule.html": {
    "href": "api/KaiHeiLa.DividerModule.html",
    "title": "Class DividerModule | KaiHeiLa.Net 文档",
    "keywords": "Class DividerModule A divider module that can be used in an ICard . Inheritance System.Object DividerModule Implements IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class DividerModule : object, IModule Properties | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IModule"
  },
  "api/KaiHeiLa.DividerModuleBuilder.html": {
    "href": "api/KaiHeiLa.DividerModuleBuilder.html",
    "title": "Class DividerModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class DividerModuleBuilder Represents a divider module builder for creating a DividerModule . Inheritance System.Object DividerModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class DividerModuleBuilder : object, IModuleBuilder Properties | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source Build() Builds this builder into a DividerModule . Declaration public DividerModule Build() Returns Type Description DividerModule A DividerModule representing the built divider module object. Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.ElementType.html": {
    "href": "api/KaiHeiLa.ElementType.html",
    "title": "Enum ElementType | KaiHeiLa.Net 文档",
    "keywords": "Enum ElementType Specifies the type of an IElement . Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ElementType : int Fields Name Description Button The element is a button element. Image The element is an image element. KMarkdown The element is a KMarkdown element. Paragraph The element is a paragraph struct. PlainText The element is a plain text element."
  },
  "api/KaiHeiLa.EmbedType.html": {
    "href": "api/KaiHeiLa.EmbedType.html",
    "title": "Enum EmbedType | KaiHeiLa.Net 文档",
    "keywords": "Enum EmbedType Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum EmbedType : int Fields Name Description BilibiliVideo Image Link NotImplemented"
  },
  "api/KaiHeiLa.Emoji.html": {
    "href": "api/KaiHeiLa.Emoji.html",
    "title": "Class Emoji | KaiHeiLa.Net 文档",
    "keywords": "Class Emoji A Unicode emoji. Inheritance System.Object Emoji Implements IEmote IEntity < System.String > Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class Emoji : object, IEmote, IEntity<string> Constructors | Improve this Doc View Source Emoji(String) Initializes a new Emoji class with the provided Unicode. Declaration public Emoji(string unicode) Parameters Type Name Description System.String unicode The pure UTF-8 encoding of an emoji. Properties | Improve this Doc View Source Id Gets the unique identifier for this object. Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source Name Gets the display name or Unicode representation of this emote. Declaration public string Name { get; } Property Value Type Description System.String A string representing the display name or the Unicode representation (e.g. 🤔 ) of this emote. Methods | Improve this Doc View Source Equals(Object) Determines whether the specified emoji is equal to the current one. Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other The object to compare with the current object. Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source Parse(String) Parse an Emoji from its raw format. Declaration public static Emoji Parse(string emojiStr) Parameters Type Name Description System.String emojiStr The raw encoding of an emoji. For example: ❤️ or ❤ Returns Type Description Emoji | Improve this Doc View Source ToString() Gets the Unicode representation of this emoji. Declaration public override string ToString() Returns Type Description System.String A string that resolves to Name . | Improve this Doc View Source TryParse(String, out Emoji) Tries to parse an Emoji from its raw format. Declaration public static bool TryParse(string text, out Emoji result) Parameters Type Name Description System.String text The raw encoding of an emoji. For example: :heart: or ❤ Emoji result An emoji. Returns Type Description System.Boolean Operators | Improve this Doc View Source Implicit(String to Emoji) Declaration public static implicit operator Emoji(string s) Parameters Type Name Description System.String s Returns Type Description Emoji Implements IEmote IEntity<TId>"
  },
  "api/KaiHeiLa.EmojiType.html": {
    "href": "api/KaiHeiLa.EmojiType.html",
    "title": "Enum EmojiType | KaiHeiLa.Net 文档",
    "keywords": "Enum EmojiType Specifies the type of an emoji. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum EmojiType : int Fields Name Description Animated The emoji is animated. Static The emoji is static."
  },
  "api/KaiHeiLa.Emote.html": {
    "href": "api/KaiHeiLa.Emote.html",
    "title": "Class Emote | KaiHeiLa.Net 文档",
    "keywords": "Class Emote Inheritance System.Object Emote GuildEmote Implements IEmote IEntity < System.String > Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class Emote : object, IEmote, IEntity<string> Properties | Improve this Doc View Source Animated Declaration public bool? Animated { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source Parse(String, TagMode) Parses an Emote from its raw format. Declaration public static Emote Parse(string text, TagMode tagMode) Parameters Type Name Description System.String text The raw encoding of an emote; for example, [:djbigfan:1990044438283387/hvBcVC4nHX03k03k] when tagMode is TagMode.PlainText , or (emj)djbigfan(emj)[1990044438283387/hvBcVC4nHX03k03k] when tagMode is TagMode.KMarkdown . TagMode tagMode Returns Type Description Emote An emote. | Improve this Doc View Source ToString() Returns the raw representation of the emote. Declaration public override string ToString() Returns Type Description System.String A string representing the raw presentation of the emote (e.g. [:thonkang:282745590985523200] ). | Improve this Doc View Source TryParse(String, out Emote, TagMode) Tries to parse an Emote from its raw format. Declaration public static bool TryParse(string text, out Emote result, TagMode tagMode) Parameters Type Name Description System.String text The raw encoding of an emote; for example, [:djbigfan:1990044438283387/hvBcVC4nHX03k03k] when tagMode is TagMode.PlainText , or (emj)djbigfan(emj)[1990044438283387/hvBcVC4nHX03k03k] when tagMode is TagMode.KMarkdown . Emote result An emote. TagMode tagMode Returns Type Description System.Boolean Implements IEmote IEntity<TId>"
  },
  "api/KaiHeiLa.FileModule.html": {
    "href": "api/KaiHeiLa.FileModule.html",
    "title": "Class FileModule | KaiHeiLa.Net 文档",
    "keywords": "Class FileModule A file module that can be used in an ICard . Inheritance System.Object FileModule Implements IMediaModule IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class FileModule : object, IMediaModule, IModule Properties | Improve this Doc View Source Source Gets the source of the media associated with this module. Declaration public string Source { get; } Property Value Type Description System.String A langword_csharp_string representing the source of the audio associated with this module. | Improve this Doc View Source Title Gets the title of the media associated with this module. Declaration public string Title { get; } Property Value Type Description System.String A langword_csharp_string representing the title of the media associated with this module. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IMediaModule IModule"
  },
  "api/KaiHeiLa.FileModuleBuilder.html": {
    "href": "api/KaiHeiLa.FileModuleBuilder.html",
    "title": "Class FileModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class FileModuleBuilder Represents a file module builder for creating a FileModule . Inheritance System.Object FileModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class FileModuleBuilder : object, IModuleBuilder Properties | Improve this Doc View Source Source Gets or sets the source URL of the file. Declaration public string Source { get; set; } Property Value Type Description System.String The source URL of the file. | Improve this Doc View Source Title Gets or sets the title of the file. Declaration public string Title { get; set; } Property Value Type Description System.String The title of the file. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source Build() Builds this builder into a FileModule . Declaration public FileModule Build() Returns Type Description FileModule A FileModule representing the built file module object. | Improve this Doc View Source WithSource(String) Sets the source URL of the file. Declaration public FileModuleBuilder WithSource(string source) Parameters Type Name Description System.String source The source URL of the file to be set. Returns Type Description FileModuleBuilder The current builder. | Improve this Doc View Source WithTitle(String) Sets the title of the file. Declaration public FileModuleBuilder WithTitle(string title) Parameters Type Name Description System.String title The title of the file to be set. Returns Type Description FileModuleBuilder The current builder. Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.Format.html": {
    "href": "api/KaiHeiLa.Format.html",
    "title": "Class Format | KaiHeiLa.Net 文档",
    "keywords": "Class Format A helper class for formatting characters. Inheritance System.Object Format Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public static class Format : object Methods | Improve this Doc View Source BlockQuote(String) Formats a string as a block quote. Declaration public static string BlockQuote(string text) Parameters Type Name Description System.String text The text to format. Returns Type Description System.String Gets the formatted block quote text. | Improve this Doc View Source Bold(String) Returns a markdown-formatted string with bold formatting. Declaration public static string Bold(string text) Parameters Type Name Description System.String text Returns Type Description System.String | Improve this Doc View Source Code(String, String) Returns a markdown-formatted string with code block formatting. Declaration public static string Code(string text, string language = null) Parameters Type Name Description System.String text System.String language Returns Type Description System.String | Improve this Doc View Source Italics(String) Returns a markdown-formatted string with italics formatting. Declaration public static string Italics(string text) Parameters Type Name Description System.String text Returns Type Description System.String | Improve this Doc View Source Quote(String) Formats a string as a quote. Declaration public static string Quote(string text) Parameters Type Name Description System.String text The text to format. Returns Type Description System.String Gets the formatted quote text. | Improve this Doc View Source Sanitize(String) Sanitizes the string, safely escaping any Markdown sequences. Declaration public static string Sanitize(string text) Parameters Type Name Description System.String text Returns Type Description System.String | Improve this Doc View Source Spoiler(String) Returns a string with spoiler formatting. Declaration public static string Spoiler(string text) Parameters Type Name Description System.String text Returns Type Description System.String | Improve this Doc View Source Strikethrough(String) Returns a markdown-formatted string with strike-through formatting. Declaration public static string Strikethrough(string text) Parameters Type Name Description System.String text Returns Type Description System.String | Improve this Doc View Source StripMarkDown(String) Remove KaiHeiLa supported markdown from text. Declaration public static string StripMarkDown(string text) Parameters Type Name Description System.String text The to remove markdown from. Returns Type Description System.String Gets the unformatted text. | Improve this Doc View Source Underline(String) Returns a markdown-formatted string with underline formatting. Declaration public static string Underline(string text) Parameters Type Name Description System.String text Returns Type Description System.String | Improve this Doc View Source Url(String, String) Returns a markdown-formatted URL. Declaration public static string Url(string text, string url) Parameters Type Name Description System.String text System.String url Returns Type Description System.String | Improve this Doc View Source UsernameAndIdentifyNumber(IUser) Formats a user's username + identify number while maintaining bidirectional unicode Declaration public static string UsernameAndIdentifyNumber(IUser user) Parameters Type Name Description IUser user The user whose username and identify number to format Returns Type Description System.String The username + identify number"
  },
  "api/KaiHeiLa.GameProperties.html": {
    "href": "api/KaiHeiLa.GameProperties.html",
    "title": "Class GameProperties | KaiHeiLa.Net 文档",
    "keywords": "Class GameProperties Properties that are used to modify an IGame with the specified changes. Inheritance System.Object GameProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class GameProperties : object Properties | Improve this Doc View Source IconUrl Gets or sets the icon URL of the game. Declaration public string IconUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Gets or sets the name of the game. Declaration public string Name { get; set; } Property Value Type Description System.String See Also ModifyAsync(Action<GameProperties>, RequestOptions)"
  },
  "api/KaiHeiLa.GameType.html": {
    "href": "api/KaiHeiLa.GameType.html",
    "title": "Enum GameType | KaiHeiLa.Net 文档",
    "keywords": "Enum GameType Specifies the type of games. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum GameType : int Fields Name Description Game Specifies that the game is just a game. Process Specifies that the game is a process. VirtualUploader Specifies that the game is a virtual uploader."
  },
  "api/KaiHeiLa.GuildEmote.html": {
    "href": "api/KaiHeiLa.GuildEmote.html",
    "title": "Class GuildEmote | KaiHeiLa.Net 文档",
    "keywords": "Class GuildEmote An image-based emote that is attached to a guild. Inheritance System.Object Emote GuildEmote Implements IEmote IEntity < System.String > Inherited Members Emote.Id Emote.Name Emote.Animated Emote.Equals(Object) Emote.GetHashCode() Emote.Parse(String, TagMode) Emote.TryParse(String, Emote, TagMode) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class GuildEmote : Emote, IEmote, IEntity<string> Properties | Improve this Doc View Source Creator Gets the user who created this emote. Declaration public IUser Creator { get; } Property Value Type Description IUser An IUser representing the user who created this emote. | Improve this Doc View Source GuildId The ID of the guild this emote is attached to. Declaration public ulong GuildId { get; } Property Value Type Description System.UInt64 A ulong that identifies the guild this emote is attached to. Methods | Improve this Doc View Source ToString() Gets the raw representation of the emote. Declaration public override string ToString() Returns Type Description System.String A string representing the raw presentation of the emote. Overrides Emote.ToString() Implements IEmote IEntity<TId>"
  },
  "api/KaiHeiLa.GuildPermission.html": {
    "href": "api/KaiHeiLa.GuildPermission.html",
    "title": "Enum GuildPermission | KaiHeiLa.Net 文档",
    "keywords": "Enum GuildPermission Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum GuildPermission : uint Fields Name Description AddReactions Allows for the addition of reactions to messages. Administrator Allows all permissions and bypasses channel permission overwrites. AttachFiles Allows for uploading images and files. BanMembers Allows banning members. ChangeNickname Allows for modification of own nickname. Connect Allows for joining of a voice channel. CreateInvites Allows creation of invites. DeafenMembers Allows for deafening of members in a voice channel. FollowReactions Allows for following of added reactions to messages. KickMembers Allows kicking members. ManageChannels Allows management and editing of channels. ManageEmojis Allows management and editing of emojis and stickers. ManageGuild Allows management and editing of guild. ManageInvites Allows for management of invites. ManageMessages Allows for deletion of other users messages. ManageNicknames Allows for modification of other users nicknames. ManageRoles Allows management and editing of roles. ManageVoice Allows for disconnection of members, and moving of members between voice channels. MentionEveryone Allows for using the everyone mention tag to notify all users in a channel, and the online mention tag to notify all online users in a channel. MuteMembers Allows for muting members in a voice channel. OnlyPushToTalk Limits the user to speaking in a voice channel only when pressing the speaking key. PassiveConnect Limits the user to connecting to a voice channel only when the user is invited or moved by others. PlaySoundtrack Allows for playing soundtracks in a voice channel. SendMessages Allows for sending messages in a channel Speak Allows for speaking in a voice channel. UseVoiceActivity Allows for speaking in voice a channel without having to press the speaking key. ViewAuditLog Allows for viewing of audit logs. ViewChannel Allows guild members to view a channel, which includes reading messages in text channels."
  },
  "api/KaiHeiLa.GuildPermissions.html": {
    "href": "api/KaiHeiLa.GuildPermissions.html",
    "title": "Class GuildPermissions | KaiHeiLa.Net 文档",
    "keywords": "Class GuildPermissions Inheritance System.Object GuildPermissions Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class GuildPermissions : object Constructors | Improve this Doc View Source GuildPermissions(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean) Creates a new GuildPermissions structure with the provided permissions. Declaration public GuildPermissions(bool administrator = false, bool manageGuild = false, bool viewAuditLog = false, bool createInvites = false, bool manageInvites = false, bool manageChannels = false, bool kickMembers = false, bool banMembers = false, bool manageEmojis = false, bool changeNickname = false, bool manageRoles = false, bool viewChannel = false, bool sendMessages = false, bool manageMessages = false, bool attachFiles = false, bool connect = false, bool manageVoice = false, bool mentionEveryone = false, bool addReactions = false, bool followReactions = false, bool passiveConnect = false, bool onlyPushToTalk = false, bool useVoiceActivity = false, bool speak = false, bool deafenMembers = false, bool muteMembers = false, bool manageNicknames = false, bool playSoundtrack = false) Parameters Type Name Description System.Boolean administrator System.Boolean manageGuild System.Boolean viewAuditLog System.Boolean createInvites System.Boolean manageInvites System.Boolean manageChannels System.Boolean kickMembers System.Boolean banMembers System.Boolean manageEmojis System.Boolean changeNickname System.Boolean manageRoles System.Boolean viewChannel System.Boolean sendMessages System.Boolean manageMessages System.Boolean attachFiles System.Boolean connect System.Boolean manageVoice System.Boolean mentionEveryone System.Boolean addReactions System.Boolean followReactions System.Boolean passiveConnect System.Boolean onlyPushToTalk System.Boolean useVoiceActivity System.Boolean speak System.Boolean deafenMembers System.Boolean muteMembers System.Boolean manageNicknames System.Boolean playSoundtrack | Improve this Doc View Source GuildPermissions(String) Creates a new GuildPermissions with the provided packed value after converting to ulong. Declaration public GuildPermissions(string rawValue) Parameters Type Name Description System.String rawValue | Improve this Doc View Source GuildPermissions(UInt64) Creates a new GuildPermissions with the provided packed value. Declaration public GuildPermissions(ulong rawValue) Parameters Type Name Description System.UInt64 rawValue Fields | Improve this Doc View Source All Gets a GuildPermissions that grants all guild permissions. Declaration public static readonly GuildPermissions All Field Value Type Description GuildPermissions | Improve this Doc View Source None Gets a blank GuildPermissions that grants no permissions. Declaration public static readonly GuildPermissions None Field Value Type Description GuildPermissions Properties | Improve this Doc View Source AddReactions If true , a user may add reactions. Declaration public bool AddReactions { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Administrator If true , a user is granted all permissions, and cannot have them revoked via channel permissions. Declaration public bool Administrator { get; } Property Value Type Description System.Boolean | Improve this Doc View Source AttachFiles If true , a user may send files. Declaration public bool AttachFiles { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BanMembers If true , a user may ban users from the guild. Declaration public bool BanMembers { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ChangeNickname If true , a user may change their own nickname. Declaration public bool ChangeNickname { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Connect If true , a user may connect to a voice channel. Declaration public bool Connect { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CreateInvites If true , a user may create invites. Declaration public bool CreateInvites { get; } Property Value Type Description System.Boolean | Improve this Doc View Source DeafenMembers If true , a user may deafen users. Declaration public bool DeafenMembers { get; } Property Value Type Description System.Boolean | Improve this Doc View Source FollowReactions If true , a user may follow added reactions. Declaration public bool FollowReactions { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KickMembers If true , a user may kick users from the guild. Declaration public bool KickMembers { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageChannels If true , a user may create, delete and modify channels. Declaration public bool ManageChannels { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageEmojis If true , a user may edit the emojis for this guild. Declaration public bool ManageEmojis { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageGuild If true , a user may adjust guild properties. Declaration public bool ManageGuild { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageInvites If true , a user may view and revoke invites. Declaration public bool ManageInvites { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageMessages If true , a user may delete messages. Declaration public bool ManageMessages { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageNicknames If true , a user may change the nickname of other users. Declaration public bool ManageNicknames { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageRoles If true , a user may adjust roles. Declaration public bool ManageRoles { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ManageVoice If true , a user may kick other users from voice channels, and move other users between voice channels. Declaration public bool ManageVoice { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MentionEveryone If true , a user may mention all users. Declaration public bool MentionEveryone { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MuteMembers If true , a user may mute users. Declaration public bool MuteMembers { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OnlyPushToTalk If true , a user may speak only via push-to-talk. Declaration public bool OnlyPushToTalk { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PassiveConnect If true , a user may connect to a voice channel only when the user is invited or moved by other users. Declaration public bool PassiveConnect { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PlaySoundtrack If true , a user may play soundtracks in a voice channel. Declaration public bool PlaySoundtrack { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RawValue Gets a packed value representing all the permissions in this GuildPermissions . Declaration public ulong RawValue { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source SendMessages If true , a user may send messages. Declaration public bool SendMessages { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Speak If true , a user may speak in a voice channel. Declaration public bool Speak { get; } Property Value Type Description System.Boolean | Improve this Doc View Source UseVoiceActivity If true , a user may use voice activation. Declaration public bool UseVoiceActivity { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ViewAuditLog If true , a user may view the audit log. Declaration public bool ViewAuditLog { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ViewChannel If true , a user may view channels. Declaration public bool ViewChannel { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Has(GuildPermission) Returns a value that indicates if a specific GuildPermission is enabled in these permissions. Declaration public bool Has(GuildPermission permission) Parameters Type Name Description GuildPermission permission The permission value to check for. Returns Type Description System.Boolean true if the permission is enabled, false otherwise. | Improve this Doc View Source Modify(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>) Creates a new GuildPermissions from this one, changing the provided non-null permissions. Declaration public GuildPermissions Modify(bool? administrator = null, bool? manageGuild = null, bool? viewAuditLog = null, bool? createInvites = null, bool? manageInvites = null, bool? manageChannels = null, bool? kickMembers = null, bool? banMembers = null, bool? manageEmojis = null, bool? changeNickname = null, bool? manageRoles = null, bool? viewChannel = null, bool? sendMessages = null, bool? manageMessages = null, bool? attachFiles = null, bool? connect = null, bool? manageVoice = null, bool? mentionEveryone = null, bool? addReactions = null, bool? followReactions = null, bool? passiveConnect = null, bool? onlyPushToTalk = null, bool? useVoiceActivity = null, bool? speak = null, bool? deafenMembers = null, bool? muteMembers = null, bool? manageNicknames = null, bool? playSoundtrack = null) Parameters Type Name Description System.Nullable < System.Boolean > administrator System.Nullable < System.Boolean > manageGuild System.Nullable < System.Boolean > viewAuditLog System.Nullable < System.Boolean > createInvites System.Nullable < System.Boolean > manageInvites System.Nullable < System.Boolean > manageChannels System.Nullable < System.Boolean > kickMembers System.Nullable < System.Boolean > banMembers System.Nullable < System.Boolean > manageEmojis System.Nullable < System.Boolean > changeNickname System.Nullable < System.Boolean > manageRoles System.Nullable < System.Boolean > viewChannel System.Nullable < System.Boolean > sendMessages System.Nullable < System.Boolean > manageMessages System.Nullable < System.Boolean > attachFiles System.Nullable < System.Boolean > connect System.Nullable < System.Boolean > manageVoice System.Nullable < System.Boolean > mentionEveryone System.Nullable < System.Boolean > addReactions System.Nullable < System.Boolean > followReactions System.Nullable < System.Boolean > passiveConnect System.Nullable < System.Boolean > onlyPushToTalk System.Nullable < System.Boolean > useVoiceActivity System.Nullable < System.Boolean > speak System.Nullable < System.Boolean > deafenMembers System.Nullable < System.Boolean > muteMembers System.Nullable < System.Boolean > manageNicknames System.Nullable < System.Boolean > playSoundtrack Returns Type Description GuildPermissions | Improve this Doc View Source ToList() Returns a containing all of the GuildPermission flags that are enabled. Declaration public List<GuildPermission> ToList() Returns Type Description List < GuildPermission > A containing GuildPermission flags. Empty if none are enabled. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/KaiHeiLa.HeaderModule.html": {
    "href": "api/KaiHeiLa.HeaderModule.html",
    "title": "Class HeaderModule | KaiHeiLa.Net 文档",
    "keywords": "Class HeaderModule Represents a header module in an ICard . Inheritance System.Object HeaderModule Implements IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class HeaderModule : object, IModule Properties | Improve this Doc View Source Text Gets the text element of the header. Declaration public PlainTextElement Text { get; } Property Value Type Description PlainTextElement A PlainTextElement representing the text of the header. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IModule"
  },
  "api/KaiHeiLa.HeaderModuleBuilder.html": {
    "href": "api/KaiHeiLa.HeaderModuleBuilder.html",
    "title": "Class HeaderModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class HeaderModuleBuilder Represents a header module builder for creating a HeaderModule . Inheritance System.Object HeaderModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class HeaderModuleBuilder : object, IModuleBuilder Fields | Improve this Doc View Source MaxTitleContentLength Gets the maximum content length for header allowed by KaiHeiLa. Declaration public const int MaxTitleContentLength = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source Text Gets or sets the text of the header. Declaration public PlainTextElementBuilder Text { get; set; } Property Value Type Description PlainTextElementBuilder A PlainTextElementBuilder representing the text of the header. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source Build() Builds this builder into a HeaderModule . Declaration public HeaderModule Build() Returns Type Description HeaderModule A HeaderModule representing the built header module object. | Improve this Doc View Source WithText(Action<PlainTextElementBuilder>) Sets the text of the header. Declaration public HeaderModuleBuilder WithText(Action<PlainTextElementBuilder> action) Parameters Type Name Description Action < PlainTextElementBuilder > action The action to set the text of the header. Returns Type Description HeaderModuleBuilder The current builder. | Improve this Doc View Source WithText(PlainTextElementBuilder) Sets the text of the header. Declaration public HeaderModuleBuilder WithText(PlainTextElementBuilder text) Parameters Type Name Description PlainTextElementBuilder text The text to be set for the header. Returns Type Description HeaderModuleBuilder The current builder. Operators | Improve this Doc View Source Implicit(String to HeaderModuleBuilder) Initialized a new instance of the HeaderModuleBuilder class with the specified text . Declaration public static implicit operator HeaderModuleBuilder(string text) Parameters Type Name Description System.String text The text to be set for the header. Returns Type Description HeaderModuleBuilder An HeaderModuleBuilder object that is initialized with the specified text . Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.html": {
    "href": "api/KaiHeiLa.html",
    "title": "Namespace KaiHeiLa | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa Classes ActionGroupModule Represents an action group module that can be used in an ICard . ActionGroupModuleBuilder Represents a action group module builder for creating an ActionGroupModule . AsyncEnumerableExtensions An extension class for squashing . Attachment Represents a message attachment found in a IUserMessage . AudioModule Represents an audio module that can be used in an ICard . AudioModuleBuilder Represents a audio module builder for creating an AudioModule . BilibiliVideoEmbed ButtonElement A button element that can be used in an IModule . ButtonElementBuilder An element builder to build a ButtonElement . Card Represents a card object seen in an IUserMessage . CardBuilder Represents a builder class for creating a Card . ChannelExtensions ContainerModule Represents a container module that can be used in an ICard . ContainerModuleBuilder Represents a container module builder for creating a ContainerModule . ContextModule Represents a context module that can be used in an ICard . ContextModuleBuilder Represents a context module builder for creating a ContextModule . CountdownModule Represents a countdown module that can be used in an ICard . CountdownModuleBuilder Represents a countdown module builder for creating a CountdownModule . CreateCategoryChannelProperties Provides properties that are used to create an ICategoryChannel with the specified properties. CreateGuildChannelProperties Properties that are used to create an IGuildChannel with the specified properties. CreateTextChannelProperties Provides properties that are used to create an ITextChannel with the specified properties. CreateVoiceChannelProperties Provides properties that are used to create an IVoiceChannel with the specified properties. DividerModule A divider module that can be used in an ICard . DividerModuleBuilder Represents a divider module builder for creating a DividerModule . Emoji A Unicode emoji. Emote FileModule A file module that can be used in an ICard . FileModuleBuilder Represents a file module builder for creating a FileModule . Format A helper class for formatting characters. GameProperties Properties that are used to modify an IGame with the specified changes. GuildEmote An image-based emote that is attached to a guild. GuildPermissions HeaderModule Represents a header module in an ICard . HeaderModuleBuilder Represents a header module builder for creating a HeaderModule . ImageElement An image element that can be used in an IModule . ImageElementBuilder An element builder to build an ImageElement . ImageEmbed Represents an image embed. ImageGroupModule Represents an image group module that can be used in an ICard . ImageGroupModuleBuilder Representing an image group module builder for create an ImageGroupModule . IntimacyImage Represents a single image of an intimacy. IntimacyProperties Properties that are used to modify an IIntimacy with the specified changes. InviteModule 邀请模块 InviteModuleBuilder Represents a invite module builder for creating an InviteModule . KaiHeiLaConfig Defines various behaviors of KaiHeiLa.Net. KMarkdownElement A KMarkdown element that can be used in an IModule . KMarkdownElementBuilder An element builder to build a KMarkdownElement . LinkEmbed Represents a link embed. MentionUtils Provides a series of helper methods for parsing mentions. MessageExtensions Provides extension methods for IMessage . MessageProperties Properties that are used to modify an IUserMessage with the specified changes. ModifyGuildChannelProperties Properties that are used to modify an IGuildChannel with the specified properties. ModifyTextChannelProperties Provides properties that are used to modify an ITextChannel with the specified properties. ModifyVoiceChannelProperties Provides properties that are used to modify an IVoiceChannel with the specified properties. Music NotImplementedEmbed Represents a unimplemented embed. Optional ParagraphStruct A paragraph struct that can be used in modules. ParagraphStructBuilder An element builder to build a ParagraphStruct . PlainTextElement A plain text element that can be used in an IModule . PlainTextElementBuilder An element builder to build a PlainTextElement . Preconditions Quote Represents a generic message quote. RequestOptions Represents options that should be used when sending a request. RolePermissionOverwrite Represent a permission object for a role. RoleProperties Properties that are used to modify an IRole with the specified changes. SearchGuildMemberProperties Properties that are used to search for a IGuildUser in a IGuild . SectionModule Represents a section module in card. SectionModuleBuilder Represents a section module builder for creating a SectionModule . Tag<T> Represents a tag found in IMessage . TokenUtils Provides a series of helper methods for handling KaiHeiLa login tokens. UserExtensions An extension class for various Discord user objects. UserPermissionOverwrite Represent a permission object for a user. UserTag Representing a tag an IUser can have. VideoModule Represents a video module in an ICard . VideoModuleBuilder Represents a video module builder for creating a VideoModule . Structs Cacheable<TEntity, TId> Represents a cached entity. Cacheable<TCachedEntity, TDownloadableEntity, TRelationship, TId> ChannelPermissions Color Represents a color used in KaiHeiLa. Image An image that will be uploaded to KaiHeiLa. KaiHeiLaError Represents an error with a property. KaiHeiLaJsonError Represents a generic parsed json error received from KaiHeiLa after performing a rest request. LogMessage Provides a message object used for logging purposes. Optional<T> OverwritePermissions Represents a container for a series of overwrite permissions. ReactionMetadata A metadata containing reaction information. Interfaces IActivity A user's activity status. IAttachment Represents a message attachment found in a IUserMessage . IAudioChannel Represents a generic audio channel. IBan Represents a generic ban object. ICard Represents a generic card. ICardBuilder Represents a generic card builder for creating a ICard . ICategoryChannel Represents a generic category channel. IChannel Represents a generic channel. IDeletable Determines whether the object is deletable or not. IDMChannel Represents a generic direct-message channel. IElement A generic element used in modules. IElementBuilder A generic builder for creating an IElement . IEmbed Represents a generic embed. IEmote Represents a general container for any type of emote in a message. IEntity<TId> IGame Represents a generic game object. IGuild Represents a generic guild/server. IGuildChannel Represents a generic guild channel. IGuildUser Represents a generic guild user. IIntimacy Represents a generic intimacy. IInvite Represents a generic invite. IKaiHeiLaClient Represents a generic KaiHeiLa client. IMediaModule A generic media module that can be used in an ICard . IMentionable Determines whether the object is mentionable or not. IMessage Represents a message object. IMessageChannel IModule IModuleBuilder A generic module builder for creating an IModule . INestedChannel Represents a type of guild channel that can be nested within a category. IPermissionOverwrite<TTarget> Represents a generic permission overwrite. IPresence Represents the user's presence status. This may include their online status and their activity. IPrivateChannel Represents a generic channel that is private to selected recipients. IQuote Represents a generic message quote. IRateLimitInfo Represents a generic ratelimit info. IReaction Represents a generic reaction object. IRecommendInfo Represents a generic recommendation information. IRole Represents a generic role object to be given to a guild user. ISelfUser Represents the logged-in KaiHeiLa user. ISystemMessage Represents a generic message sent by the system. ITag Gets a generic tag found in messages. ITextChannel Represents a generic channel in a guild that can send and receive messages. IUpdateable Defines whether the object is updateable or not. IUser IUserMessage Represents a generic message sent by a user. IVoiceChannel Represents a generic voice channel in a guild. Enums ActivityType Specifies the type of activities. AttachmentType Specifies the type of the attachment. BadgeStyle Specifies the style of badges. BoostLevel Specifies the boost level of a guild. ButtonClickEventType Specifies the event type fired when a ButtonElement is clicked. ButtonTheme Specifies the theme of a ButtonElement . CacheMode Specifies the cache mode that should be used. CardSize Specifies the size of a card. CardTheme Specifies the theme of the card. CardType Specifies the type of the card. ChannelPermission ChannelType Specifies the type of a guild channel. ClientType Defines the types of clients a user can be active on. ConnectionState Specifies the connection state of a client. CountdownMode Specifies the display mode for the countdown timer. Direction Specifies the direction of where message(s) should be retrieved from. ElementType Specifies the type of an IElement . EmbedType EmojiType Specifies the type of an emoji. GameType Specifies the type of games. GuildPermission ImageSize Specifies the size of the image in ImageElement . InviteMaxAge Specifies the time in second after which an IInvite will be expired. InviteMaxUses Specifies the number of uses after which an IInvite will be expired. KaiHeiLaErrorCode Represents a set of json error codes received by KaiHeiLa. LoginState Specifies the state of the client's login status. LogSeverity Specifies the severity of the log message. MessageSource Specifies the source of the KaiHeiLa message. MessageType ModuleType Specifies the type of an IModule . MusicProvider Specifies the provider of music. NotifyType Specifies that how the guild should notify the user. PermValue Specifies the permission value. RetryMode Specifies how a request should act in the case of an error. RoleType Represents the type of a role. SectionAccessoryMode Specifies the accessory position relative to the text element. SortMode Specifies the sorting mode. SystemMessageType Gets the type of a ISystemMessage TagHandling Specifies the handling type the tag should use. TagMode Represents the mode to parse tags. TagType Specifies the type of KaiHeiLa tag. TokenType Specifies the type of token to use with the client. VoiceQuality Specifies the voice quality of an IVoiceChannel ."
  },
  "api/KaiHeiLa.IActivity.html": {
    "href": "api/KaiHeiLa.IActivity.html",
    "title": "Interface IActivity | KaiHeiLa.Net 文档",
    "keywords": "Interface IActivity A user's activity status. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IActivity"
  },
  "api/KaiHeiLa.IAttachment.html": {
    "href": "api/KaiHeiLa.IAttachment.html",
    "title": "Interface IAttachment | KaiHeiLa.Net 文档",
    "keywords": "Interface IAttachment Represents a message attachment found in a IUserMessage . Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IAttachment Properties | Improve this Doc View Source Duration Gets the duration of the attachment. Declaration TimeSpan? Duration { get; } Property Value Type Description System.Nullable < TimeSpan > Remarks A timespan representing the duration of the attachment; null if the duration is unknown or not applicable. | Improve this Doc View Source Filename Gets the filename of this attachment. Declaration string Filename { get; } Property Value Type Description System.String A langword_csharp_string containing the full filename of this attachment. | Improve this Doc View Source FileType Gets the file type of the attachment. Declaration string FileType { get; } Property Value Type Description System.String A langword_csharp_string representing the file type of the attachment; null if the file type is unknown or not applicable. | Improve this Doc View Source Height Gets the height of the attachment. Declaration int? Height { get; } Property Value Type Description System.Nullable < System.Int32 > An langword_csharp_int representing the height of the attachment; null if the height is unknown or not applicable. | Improve this Doc View Source Size Gets the file size of the attachment. Declaration int? Size { get; } Property Value Type Description System.Nullable < System.Int32 > An langword_csharp_int representing the file size of the attachment; null if the file size is unknown or not applicable. | Improve this Doc View Source Type Gets the type of the attachment. Declaration AttachmentType Type { get; } Property Value Type Description AttachmentType An AttachmentType representing the type of the attachment. | Improve this Doc View Source Url Gets the URL of the attachment. Declaration string Url { get; } Property Value Type Description System.String A langword_csharp_string representing the URL of the attachment. | Improve this Doc View Source Width Gets the width of the attachment. Declaration int? Width { get; } Property Value Type Description System.Nullable < System.Int32 > An langword_csharp_int representing the width of the attachment; null if the width is unknown or not applicable."
  },
  "api/KaiHeiLa.IAudioChannel.html": {
    "href": "api/KaiHeiLa.IAudioChannel.html",
    "title": "Interface IAudioChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IAudioChannel Represents a generic audio channel. Inherited Members IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IEntity<UInt64>.Id Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IAudioChannel : IChannel, IEntity<ulong> Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.IBan.html": {
    "href": "api/KaiHeiLa.IBan.html",
    "title": "Interface IBan | KaiHeiLa.Net 文档",
    "keywords": "Interface IBan Represents a generic ban object. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IBan Properties | Improve this Doc View Source CreatedAt Gets the time when the ban was issued. Declaration DateTimeOffset CreatedAt { get; } Property Value Type Description DateTimeOffset A DateTime object that represents the time when the ban was issued. | Improve this Doc View Source Reason Gets the reason why the user is banned if specified. Declaration string Reason { get; } Property Value Type Description System.String A string containing the reason behind the ban; null if none is specified. | Improve this Doc View Source User Gets the banned user. Declaration IUser User { get; } Property Value Type Description IUser A user that was banned."
  },
  "api/KaiHeiLa.ICard.html": {
    "href": "api/KaiHeiLa.ICard.html",
    "title": "Interface ICard | KaiHeiLa.Net 文档",
    "keywords": "Interface ICard Represents a generic card. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface ICard Properties | Improve this Doc View Source ModuleCount Gets the number of the modules in this card. Declaration int ModuleCount { get; } Property Value Type Description System.Int32 An langword_csharp_int value that represents how many modules are in this card. | Improve this Doc View Source Type Gets the type of the card. Declaration CardType Type { get; } Property Value Type Description CardType A CardType value that represents the type of the card."
  },
  "api/KaiHeiLa.ICardBuilder.html": {
    "href": "api/KaiHeiLa.ICardBuilder.html",
    "title": "Interface ICardBuilder | KaiHeiLa.Net 文档",
    "keywords": "Interface ICardBuilder Represents a generic card builder for creating a ICard . Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface ICardBuilder Properties | Improve this Doc View Source Type Gets the type of the ICard this builder creates. Declaration CardType Type { get; } Property Value Type Description CardType Methods | Improve this Doc View Source Build() Builds the ICardBuilder into an ICard . Declaration ICard Build() Returns Type Description ICard An ICard represents the built card object."
  },
  "api/KaiHeiLa.ICategoryChannel.html": {
    "href": "api/KaiHeiLa.ICategoryChannel.html",
    "title": "Interface ICategoryChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface ICategoryChannel Represents a generic category channel. Inherited Members IGuildChannel.Guild IGuildChannel.GuildId IGuildChannel.Position IGuildChannel.Type IGuildChannel.RolePermissionOverwrites IGuildChannel.UserPermissionOverwrites IGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) IGuildChannel.GetPermissionOverwrite(IRole) IGuildChannel.GetPermissionOverwrite(IUser) IGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) IGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) IGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) IGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) IGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) IGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) IGuildChannel.GetUsersAsync(CacheMode, RequestOptions) IGuildChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IChannel.Name IEntity<UInt64>.Id IDeletable.DeleteAsync(RequestOptions) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface ICategoryChannel : IGuildChannel, IChannel, IEntity<ulong>, IDeletable Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.IChannel.html": {
    "href": "api/KaiHeiLa.IChannel.html",
    "title": "Interface IChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IChannel Represents a generic channel. Inherited Members IEntity<UInt64>.Id Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IChannel : IEntity<ulong> Properties | Improve this Doc View Source Name Gets the name of this channel. Declaration string Name { get; } Property Value Type Description System.String A string containing the name of this channel. Methods | Improve this Doc View Source GetUserAsync(UInt64, CacheMode, RequestOptions) Gets a user in this channel. Declaration Task<IUser> GetUserAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier of the user (e.g. 168693960628371456 ). CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IUser > A task that represents the asynchronous get operation. The task result contains a user object that represents the found user; null if none is found. | Improve this Doc View Source GetUsersAsync(CacheMode, RequestOptions) Gets a collection of users that are able to view the channel or are currently in this channel. Declaration IAsyncEnumerable<IReadOnlyCollection<IUser>> GetUsersAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IUser >> Paged collection of users. Remarks important The returned collection is an asynchronous enumerable object; one must call FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>) to access the individual messages as a collection. This method will attempt to fetch all users that is able to view this channel or is currently in this channel. The library will attempt to split up the requests according to and MaxUsersPerBatch . In other words, if there are 3000 users, and the MaxUsersPerBatch constant is 1000 , the request will be split into 3 individual requests; thus returning 53individual asynchronous responses, hence the need of flattening. Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.IDeletable.html": {
    "href": "api/KaiHeiLa.IDeletable.html",
    "title": "Interface IDeletable | KaiHeiLa.Net 文档",
    "keywords": "Interface IDeletable Determines whether the object is deletable or not. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IDeletable Methods | Improve this Doc View Source DeleteAsync(RequestOptions) Deletes this object and all its children. Declaration Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task"
  },
  "api/KaiHeiLa.IDMChannel.html": {
    "href": "api/KaiHeiLa.IDMChannel.html",
    "title": "Interface IDMChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IDMChannel Represents a generic direct-message channel. Inherited Members IMessageChannel.SendTextMessageAsync(String, IQuote, IUser, RequestOptions) IMessageChannel.SendImageMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendImageMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendVideoMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendVideoMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendFileMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendFileMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendKMarkdownMessageAsync(String, IQuote, IUser, RequestOptions) IMessageChannel.SendCardMessageAsync(IEnumerable<ICard>, IQuote, IUser, RequestOptions) IMessageChannel.GetMessageAsync(Guid, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(Int32, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(Guid, Direction, Int32, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(IMessage, Direction, Int32, CacheMode, RequestOptions) IMessageChannel.DeleteMessageAsync(Guid, RequestOptions) IMessageChannel.DeleteMessageAsync(IMessage, RequestOptions) IMessageChannel.ModifyMessageAsync(Guid, Action<MessageProperties>, RequestOptions) IPrivateChannel.Recipients IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IDMChannel : IMessageChannel, IPrivateChannel, IChannel, IEntity<ulong>, IEntity<Guid> Properties | Improve this Doc View Source ChatCode Gets the chat code of the direct-message channel. Declaration Guid ChatCode { get; } Property Value Type Description Guid A that represents the chat code of the direct-message channel. | Improve this Doc View Source Id Gets the unique identifier of this direct-message channel. Declaration Guid Id { get; } Property Value Type Description Guid A that represents this direct-message channel's unique identifier. | Improve this Doc View Source Recipient Gets the recipient of all messages in this channel. Declaration IUser Recipient { get; } Property Value Type Description IUser A user object that represents the other user in this channel. Methods | Improve this Doc View Source CloseAsync(RequestOptions) Closes this private channel, removing it from your channel list. Declaration Task CloseAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous close operation. | Improve this Doc View Source SendCardMessageAsync(IEnumerable<ICard>, IQuote, RequestOptions) Sends a card message to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(IEnumerable<ICard> cards, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IEnumerable < ICard > cards IQuote quote RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendFileMessageAsync(Stream, String, IQuote, RequestOptions) Sends a file to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(Stream stream, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName IQuote quote RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendFileMessageAsync(String, String, IQuote, RequestOptions) Sends a file to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(string path, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName IQuote quote RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendImageMessageAsync(Stream, String, IQuote, RequestOptions) Sends an image to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(Stream stream, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName IQuote quote RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendImageMessageAsync(String, String, IQuote, RequestOptions) Sends an image to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(string path, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName IQuote quote RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendKMarkdownMessageAsync(String, IQuote, RequestOptions) Sends a KMarkdown message to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendKMarkdownMessageAsync(string text, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String text IQuote quote RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendTextMessageAsync(String, IQuote, RequestOptions) Sends a plain text to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendTextMessageAsync(string text, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String text IQuote quote RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendVideoMessageAsync(Stream, String, IQuote, RequestOptions) Sends a video to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(Stream stream, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName IQuote quote RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendVideoMessageAsync(String, String, IQuote, RequestOptions) Sends a video to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(string path, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName IQuote quote RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Explicit Interface Implementations | Improve this Doc View Source IMessageChannel.SendCardMessageAsync(IEnumerable<ICard>, IQuote, IUser, RequestOptions) Sends a card message to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> IMessageChannel.SendCardMessageAsync(IEnumerable<ICard> cards, IQuote quote, IUser ephemeralUser, RequestOptions options) Parameters Type Name Description IEnumerable < ICard > cards The cards to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source IMessageChannel.SendFileMessageAsync(Stream, String, IQuote, IUser, RequestOptions) Sends a file to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> IMessageChannel.SendFileMessageAsync(Stream stream, string fileName, IQuote quote, IUser ephemeralUser, RequestOptions options) Parameters Type Name Description Stream stream The stream of the file. System.String fileName The name of the file. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends a file as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source IMessageChannel.SendFileMessageAsync(String, String, IQuote, IUser, RequestOptions) Sends a file to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> IMessageChannel.SendFileMessageAsync(string path, string fileName, IQuote quote, IUser ephemeralUser, RequestOptions options) Parameters Type Name Description System.String path The file path of the file. System.String fileName The name of the file. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends a file as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source IMessageChannel.SendImageMessageAsync(Stream, String, IQuote, IUser, RequestOptions) Sends an image to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> IMessageChannel.SendImageMessageAsync(Stream stream, string fileName, IQuote quote, IUser ephemeralUser, RequestOptions options) Parameters Type Name Description Stream stream The stream of the image. System.String fileName The name of the image. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an image as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source IMessageChannel.SendImageMessageAsync(String, String, IQuote, IUser, RequestOptions) Sends an image to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> IMessageChannel.SendImageMessageAsync(string path, string fileName, IQuote quote, IUser ephemeralUser, RequestOptions options) Parameters Type Name Description System.String path The file path of the image. System.String fileName The name of the image. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an image as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source IMessageChannel.SendKMarkdownMessageAsync(String, IQuote, IUser, RequestOptions) Sends a KMarkdown message to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> IMessageChannel.SendKMarkdownMessageAsync(string text, IQuote quote, IUser ephemeralUser, RequestOptions options) Parameters Type Name Description System.String text The message to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source IMessageChannel.SendTextMessageAsync(String, IQuote, IUser, RequestOptions) Sends a plain text to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> IMessageChannel.SendTextMessageAsync(string text, IQuote quote, IUser ephemeralUser, RequestOptions options) Parameters Type Name Description System.String text The message to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source IMessageChannel.SendVideoMessageAsync(Stream, String, IQuote, IUser, RequestOptions) Sends a video to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> IMessageChannel.SendVideoMessageAsync(Stream stream, string fileName, IQuote quote, IUser ephemeralUser, RequestOptions options) Parameters Type Name Description Stream stream The stream of the video. System.String fileName The name of the video. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an video as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source IMessageChannel.SendVideoMessageAsync(String, String, IQuote, IUser, RequestOptions) Sends a video to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> IMessageChannel.SendVideoMessageAsync(string path, string fileName, IQuote quote, IUser ephemeralUser, RequestOptions options) Parameters Type Name Description System.String path The file path of the video. System.String fileName The name of the video. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an video as if you are uploading an image directly from your KaiHeiLa client. Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.IElement.html": {
    "href": "api/KaiHeiLa.IElement.html",
    "title": "Interface IElement | KaiHeiLa.Net 文档",
    "keywords": "Interface IElement A generic element used in modules. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IElement Properties | Improve this Doc View Source Type Gets the type of this element. Declaration ElementType Type { get; } Property Value Type Description ElementType"
  },
  "api/KaiHeiLa.IElementBuilder.html": {
    "href": "api/KaiHeiLa.IElementBuilder.html",
    "title": "Interface IElementBuilder | KaiHeiLa.Net 文档",
    "keywords": "Interface IElementBuilder A generic builder for creating an IElement . Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IElementBuilder Properties | Improve this Doc View Source Type Specifies the type of the element to be created. Declaration ElementType Type { get; } Property Value Type Description ElementType An ElementType that specifies the type of the element to be created. Methods | Improve this Doc View Source Build() Builds the IElementBuilder into an IElement . Declaration IElement Build() Returns Type Description IElement An IElement represents the built element object."
  },
  "api/KaiHeiLa.IEmbed.html": {
    "href": "api/KaiHeiLa.IEmbed.html",
    "title": "Interface IEmbed | KaiHeiLa.Net 文档",
    "keywords": "Interface IEmbed Represents a generic embed. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IEmbed Properties | Improve this Doc View Source Type Gets the type of this embed. Declaration EmbedType Type { get; } Property Value Type Description EmbedType A EmbedType that represents the type of this embed. | Improve this Doc View Source Url Gets the URL of this embed. Declaration string Url { get; } Property Value Type Description System.String A langword_csharp_string that represents the URL of this embed. See Also Embeds"
  },
  "api/KaiHeiLa.IEmote.html": {
    "href": "api/KaiHeiLa.IEmote.html",
    "title": "Interface IEmote | KaiHeiLa.Net 文档",
    "keywords": "Interface IEmote Represents a general container for any type of emote in a message. Inherited Members IEntity<String>.Id Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IEmote : IEntity<string> Properties | Improve this Doc View Source Name Gets the display name or Unicode representation of this emote. Declaration string Name { get; } Property Value Type Description System.String A string representing the display name or the Unicode representation (e.g. 🤔 ) of this emote."
  },
  "api/KaiHeiLa.IEntity-1.html": {
    "href": "api/KaiHeiLa.IEntity-1.html",
    "title": "Interface IEntity<TId> | KaiHeiLa.Net 文档",
    "keywords": "Interface IEntity<TId> Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IEntity<TId> where TId : IEquatable<TId> Type Parameters Name Description TId Properties | Improve this Doc View Source Id Gets the unique identifier for this object. Declaration TId Id { get; } Property Value Type Description TId"
  },
  "api/KaiHeiLa.IGame.html": {
    "href": "api/KaiHeiLa.IGame.html",
    "title": "Interface IGame | KaiHeiLa.Net 文档",
    "keywords": "Interface IGame Represents a generic game object. Inherited Members IEntity<Int32>.Id IDeletable.DeleteAsync(RequestOptions) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IGame : IActivity, IEntity<int>, IDeletable Properties | Improve this Doc View Source GameType Gets the type of the game. Declaration GameType GameType { get; } Property Value Type Description GameType The type of the game. | Improve this Doc View Source Icon Gets the URL of the game's icon. Declaration string Icon { get; } Property Value Type Description System.String A string representing the URL of the game's icon. | Improve this Doc View Source Name Gets the name of the game. Declaration string Name { get; } Property Value Type Description System.String A string containing the name of the game. | Improve this Doc View Source Options Gets the additional information about the game. Declaration string Options { get; } Property Value Type Description System.String A string containing the additional information about the game. | Improve this Doc View Source ProcessNames Gets the process names of the game. Declaration IReadOnlyCollection<string> ProcessNames { get; } Property Value Type Description IReadOnlyCollection < System.String > An containing the process names of the game. | Improve this Doc View Source ProductNames Gets the product names of the game. Declaration IReadOnlyCollection<string> ProductNames { get; } Property Value Type Description IReadOnlyCollection < System.String > An containing the product names of the game. | Improve this Doc View Source RequireAdminPrivilege Gets whether the KaiHeiLa client needs administrator privileges to detect the game. Declaration bool RequireAdminPrivilege { get; } Property Value Type Description System.Boolean true if the KaiHeiLa client needs administrator privileges to detect the game; otherwise, false . Methods | Improve this Doc View Source ModifyAsync(Action<GameProperties>, RequestOptions) Modifies this game. Declaration Task<IGame> ModifyAsync(Action<GameProperties> func, RequestOptions options = null) Parameters Type Name Description Action < GameProperties > func A delegate containing the properties to modify the game with. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IGame > A task that represents the asynchronous modification operation. Remarks This method modifies this game with the specified properties. To see an example of this method and what properties are available, please refer to GameProperties ."
  },
  "api/KaiHeiLa.IGuild.html": {
    "href": "api/KaiHeiLa.IGuild.html",
    "title": "Interface IGuild | KaiHeiLa.Net 文档",
    "keywords": "Interface IGuild Represents a generic guild/server. Inherited Members IEntity<UInt64>.Id Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IGuild : IEntity<ulong> Properties | Improve this Doc View Source Available Determines if this guild is currently connected and ready to be used. Declaration bool Available { get; } Property Value Type Description System.Boolean true if this guild is currently connected and ready to be used; otherwise false . Remarks note This property only applies to a WebSocket-based client. This boolean is used to determine if the guild is currently connected to the WebSocket and is ready to be used/accessed. | Improve this Doc View Source BoostLevel Gets the level of guild boosting in this guild. Declaration BoostLevel BoostLevel { get; } Property Value Type Description BoostLevel The level of guild boosting in this guild. | Improve this Doc View Source BoostNumber Gets the number of boost subscribers of this guild. Declaration int BoostNumber { get; } Property Value Type Description System.Int32 The number of boost subscribers of this guild. | Improve this Doc View Source BufferBoostNumber Gets the number of boost subscribers who activates buffer of this guild. Declaration int BufferBoostNumber { get; } Property Value Type Description System.Int32 The number of boost subscribers who activates buffer of this guild. | Improve this Doc View Source DefaultChannelId Gets the default channel ID for this guild. Declaration ulong DefaultChannelId { get; } Property Value Type Description System.UInt64 A langword_csharp_ulong representing the default channel ID for this guild. | Improve this Doc View Source Emotes Gets a collection of all custom emotes for this guild. Declaration IReadOnlyCollection<GuildEmote> Emotes { get; } Property Value Type Description IReadOnlyCollection < GuildEmote > A read-only collection of all custom emotes for this guild. | Improve this Doc View Source EveryoneRole Gets the built-in role containing all users in this guild. Declaration IRole EveryoneRole { get; } Property Value Type Description IRole A role object that represents an @everyone role in this guild. | Improve this Doc View Source Icon Gets the URL of this guild's icon. Declaration string Icon { get; } Property Value Type Description System.String A URL pointing to the guild's icon; null if none is set. | Improve this Doc View Source IsOpenEnabled Gets whether this guild is public. Declaration bool IsOpenEnabled { get; } Property Value Type Description System.Boolean true if this guild is public; false otherwise. | Improve this Doc View Source MaxBitrate Gets the max bitrate for voice channels in this guild. Declaration int MaxBitrate { get; } Property Value Type Description System.Int32 A representing the maximum bitrate value allowed by Discord in this guild. | Improve this Doc View Source MaxUploadLimit Gets the upload limit in bytes for this guild. This number is dependent on the guild's boost status. Declaration ulong MaxUploadLimit { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source Name Gets the name of this guild. Declaration string Name { get; } Property Value Type Description System.String A string containing the name of this guild. | Improve this Doc View Source NotifyType Gets the default notification type for this guild. Declaration NotifyType NotifyType { get; } Property Value Type Description NotifyType A NotifyType representing the default notification type for this guild. | Improve this Doc View Source OpenId Gets the open ID for this guild. Declaration uint OpenId { get; } Property Value Type Description System.UInt32 A langword_csharp_uint representing the open ID for this guild. | Improve this Doc View Source OwnerId Gets the ID of the user that owns this guild. Declaration ulong OwnerId { get; } Property Value Type Description System.UInt64 A langword_csharp_ulong representing the identifier of the user that owns this guild. | Improve this Doc View Source RecommendInfo Gets the recommendation information for this guild. Declaration IRecommendInfo RecommendInfo { get; } Property Value Type Description IRecommendInfo A recommendation object that represents the recommendation information for this guild; null if the guild does not have a recommendation. | Improve this Doc View Source Region Gets the default voice region for this guild. Declaration string Region { get; } Property Value Type Description System.String A string representing the default voice region for this guild. | Improve this Doc View Source Roles Gets a collection of all roles in this guild. Declaration IReadOnlyCollection<IRole> Roles { get; } Property Value Type Description IReadOnlyCollection < IRole > A read-only collection of roles found within this guild. | Improve this Doc View Source Topic Gets the topic for the guild. Declaration string Topic { get; } Property Value Type Description System.String The description for the guild; null if none is set. | Improve this Doc View Source WelcomeChannelId Gets the welcome channel ID for this guild. Declaration ulong WelcomeChannelId { get; } Property Value Type Description System.UInt64 A langword_csharp_ulong representing the welcome channel ID for this guild. Methods | Improve this Doc View Source AddBanAsync(IUser, Int32, String, RequestOptions) Bans the user from this guild and optionally prunes their recent messages. Declaration Task AddBanAsync(IUser user, int pruneDays = 0, string reason = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to ban. System.Int32 pruneDays The number of days to remove messages from this user for, and this number must be between [0, 7]. System.String reason The reason of the ban to be written in the audit log. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous add operation for the ban. | Improve this Doc View Source AddBanAsync(UInt64, Int32, String, RequestOptions) Bans the user from this guild and optionally prunes their recent messages. Declaration Task AddBanAsync(ulong userId, int pruneDays = 0, string reason = null, RequestOptions options = null) Parameters Type Name Description System.UInt64 userId The snowflake ID of the user to ban. System.Int32 pruneDays The number of days to remove messages from this user for, and this number must be between [0, 7]. System.String reason The reason of the ban to be written in the audit log. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous add operation for the ban. | Improve this Doc View Source CreateCategoryChannelAsync(String, Action<CreateCategoryChannelProperties>, RequestOptions) Creates a new channel category in this guild. Declaration Task<ICategoryChannel> CreateCategoryChannelAsync(string name, Action<CreateCategoryChannelProperties> func = null, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the category. Action < CreateCategoryChannelProperties > func The delegate containing the properties to be applied to the channel upon its creation. RequestOptions options The options to be used when sending the request. Returns Type Description Task < ICategoryChannel > A task that represents the asynchronous creation operation. The task result contains the newly created category channel. | Improve this Doc View Source CreateEmoteAsync(String, Image, RequestOptions) Creates a new GuildEmote in this guild. Declaration Task<GuildEmote> CreateEmoteAsync(string name, Image image, RequestOptions options = null) Parameters Type Name Description System.String name The name of the guild emote. Image image The image of the new emote. RequestOptions options The options to be used when sending the request. Returns Type Description Task < GuildEmote > A task that represents the asynchronous creation operation. The task result contains the created emote. | Improve this Doc View Source CreateInviteAsync(InviteMaxAge, InviteMaxUses, RequestOptions) Creates a new invite to this channel. Declaration Task<IInvite> CreateInviteAsync(InviteMaxAge maxAge = default(InviteMaxAge), InviteMaxUses maxUses = default(InviteMaxUses), RequestOptions options = null) Parameters Type Name Description InviteMaxAge maxAge The time until the invite expires. Set to InviteMaxAge.NeverExpires to never expire. InviteMaxUses maxUses The max amount of times this invite may be used. Set to InviteMaxUses.Unlimited to have unlimited uses. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IInvite > A task that represents the asynchronous invite creation operation. The task result contains an invite metadata object containing information for the created invite. | Improve this Doc View Source CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, RequestOptions) Creates a new invite to this channel. Declaration Task<IInvite> CreateInviteAsync(int? maxAge, int? maxUses = null, RequestOptions options = null) Parameters Type Name Description System.Nullable < System.Int32 > maxAge The time (in seconds) until the invite expires. Set to null to never expire. System.Nullable < System.Int32 > maxUses The max amount of times this invite may be used. Set to null to have unlimited uses. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IInvite > A task that represents the asynchronous invite creation operation. The task result contains an invite metadata object containing information for the created invite. | Improve this Doc View Source CreateRoleAsync(String, RequestOptions) Creates a new role with the provided name. Declaration Task<IRole> CreateRoleAsync(string name, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the role. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IRole > A task that represents the asynchronous creation operation. The task result contains the newly created role. | Improve this Doc View Source CreateTextChannelAsync(String, Action<CreateTextChannelProperties>, RequestOptions) Creates a new text channel in this guild. Declaration Task<ITextChannel> CreateTextChannelAsync(string name, Action<CreateTextChannelProperties> func = null, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the text channel. Action < CreateTextChannelProperties > func The delegate containing the properties to be applied to the channel upon its creation. RequestOptions options The options to be used when sending the request. Returns Type Description Task < ITextChannel > A task that represents the asynchronous creation operation. The task result contains the newly created text channel. | Improve this Doc View Source CreateVoiceChannelAsync(String, Action<CreateVoiceChannelProperties>, RequestOptions) Creates a new voice channel in this guild. Declaration Task<IVoiceChannel> CreateVoiceChannelAsync(string name, Action<CreateVoiceChannelProperties> func = null, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the voice channel. Action < CreateVoiceChannelProperties > func The delegate containing the properties to be applied to the channel upon its creation. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IVoiceChannel > A task that represents the asynchronous creation operation. The task result contains the newly created voice channel. | Improve this Doc View Source DeleteEmoteAsync(GuildEmote, RequestOptions) Deletes an existing GuildEmote from this guild. Declaration Task DeleteEmoteAsync(GuildEmote emote, RequestOptions options = null) Parameters Type Name Description GuildEmote emote The emote to delete. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous removal operation. | Improve this Doc View Source DownloadUsersAsync() Downloads all users for this guild if the current list is incomplete. Declaration Task DownloadUsersAsync() Returns Type Description Task A task that represents the asynchronous download operation. Remarks This method downloads all users found within this guild through the Gateway and caches them. | Improve this Doc View Source GetBadgeAsync(BadgeStyle, RequestOptions) Gets a badge which is associated with this guild. Declaration Task<Stream> GetBadgeAsync(BadgeStyle style = default(BadgeStyle), RequestOptions options = null) Parameters Type Name Description BadgeStyle style The BadgeStyle that specifies the style of the badge. RequestOptions options The options to be used when sending the request. Returns Type Description Task < Stream > A task that represents the asynchronous get operation. The task result contains the stream of the badge associated with this guild. | Improve this Doc View Source GetBanAsync(IUser, RequestOptions) Gets a ban object for a banned user. Declaration Task<IBan> GetBanAsync(IUser user, RequestOptions options = null) Parameters Type Name Description IUser user The banned user. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IBan > A task that represents the asynchronous get operation. The task result contains a ban object, which contains the user information and the reason for the ban; null if the ban entry cannot be found. | Improve this Doc View Source GetBanAsync(UInt64, RequestOptions) Gets a ban object for a banned user. Declaration Task<IBan> GetBanAsync(ulong userId, RequestOptions options = null) Parameters Type Name Description System.UInt64 userId The identifier for the banned user. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IBan > A task that represents the asynchronous get operation. The task result contains a ban object, which contains the user information and the reason for the ban; null if the ban entry cannot be found. | Improve this Doc View Source GetBansAsync(RequestOptions) Gets a collection of all users banned in this guild. Declaration Task<IReadOnlyCollection<IBan>> GetBansAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IBan >> A task that represents the asynchronous get operation. The task result contains a read-only collection of ban objects that this guild currently possesses, with each object containing the user banned and reason behind the ban. | Improve this Doc View Source GetCategoryChannelsAsync(CacheMode, RequestOptions) Gets a collection of all category channels in this guild. Declaration Task<IReadOnlyCollection<ICategoryChannel>> GetCategoryChannelsAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < ICategoryChannel >> A task that represents the asynchronous get operation. The task result contains a read-only collection of category channels found within this guild. | Improve this Doc View Source GetChannelAsync(UInt64, CacheMode, RequestOptions) Gets a channel in this guild. Declaration Task<IGuildChannel> GetChannelAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier for the channel. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IGuildChannel > A task that represents the asynchronous get operation. The task result contains the generic channel associated with the specified id ; null if none is found. | Improve this Doc View Source GetChannelsAsync(CacheMode, RequestOptions) Gets a collection of all channels in this guild. Declaration Task<IReadOnlyCollection<IGuildChannel>> GetChannelsAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IGuildChannel >> A task that represents the asynchronous get operation. The task result contains a read-only collection of generic channels found within this guild. | Improve this Doc View Source GetCurrentUserAsync(CacheMode, RequestOptions) Gets the current user for this guild. Declaration Task<IGuildUser> GetCurrentUserAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IGuildUser > A task that represents the asynchronous get operation. The task result contains the currently logged-in user within this guild. | Improve this Doc View Source GetDefaultChannelAsync(CacheMode, RequestOptions) Gets the default text channel for this guild. Declaration Task<ITextChannel> GetDefaultChannelAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < ITextChannel > A task that represents the asynchronous get operation. The task result contains the default text channel for this guild; null if none is found. | Improve this Doc View Source GetEmoteAsync(String, RequestOptions) Gets a specific emote from this guild. Declaration Task<GuildEmote> GetEmoteAsync(string id, RequestOptions options = null) Parameters Type Name Description System.String id The identifier for the guild emote. RequestOptions options The options to be used when sending the request. Returns Type Description Task < GuildEmote > A task that represents the asynchronous get operation. The task result contains the emote found with the specified id ; null if none is found. | Improve this Doc View Source GetEmotesAsync(RequestOptions) Gets a collection of emotes from this guild. Declaration Task<IReadOnlyCollection<GuildEmote>> GetEmotesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < GuildEmote >> A task that represents the asynchronous get operation. The task result contains a read-only collection of emotes found within the guild. | Improve this Doc View Source GetInvitesAsync(RequestOptions) Gets a collection of all invites in this guild. Declaration Task<IReadOnlyCollection<IInvite>> GetInvitesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IInvite >> A task that represents the asynchronous get operation. The task result contains a read-only collection of invite, each representing information for an invite found within this guild. | Improve this Doc View Source GetMutedDeafenedUsersAsync(RequestOptions) Gets the users who are muted or deafened in this guild. Declaration Task<(IReadOnlyCollection<Cacheable<IUser, ulong>> Muted, IReadOnlyCollection<Cacheable<IUser, ulong>> Deafened)> GetMutedDeafenedUsersAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < IReadOnlyCollection < Cacheable < IUser , System.UInt64 >>, IReadOnlyCollection < Cacheable < IUser , System.UInt64 >>>> A task that represents the asynchronous get operation. The task result contains the collection of muted or deafened users in this guild. | Improve this Doc View Source GetOwnerAsync(CacheMode, RequestOptions) Gets the owner of this guild. Declaration Task<IGuildUser> GetOwnerAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IGuildUser > A task that represents the asynchronous get operation. The task result contains the owner of this guild. | Improve this Doc View Source GetRole(UInt32) Gets a role in this guild. Declaration IRole GetRole(uint id) Parameters Type Name Description System.UInt32 id The identifier for the role. Returns Type Description IRole A role that is associated with the specified id ; null if none is found. | Improve this Doc View Source GetTextChannelAsync(UInt64, CacheMode, RequestOptions) Gets a text channel in this guild. Declaration Task<ITextChannel> GetTextChannelAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier for the text channel. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < ITextChannel > A task that represents the asynchronous get operation. The task result contains the text channel associated with the specified id ; null if none is found. | Improve this Doc View Source GetTextChannelsAsync(CacheMode, RequestOptions) Gets a collection of all text channels in this guild. Declaration Task<IReadOnlyCollection<ITextChannel>> GetTextChannelsAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < ITextChannel >> A task that represents the asynchronous get operation. The task result contains a read-only collection of message channels found within this guild. | Improve this Doc View Source GetUserAsync(UInt64, CacheMode, RequestOptions) Gets a user from this guild. Declaration Task<IGuildUser> GetUserAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier of the user. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IGuildUser > A task that represents the asynchronous get operation. The task result contains the guild user associated with the specified id ; null if none is found. Remarks This method retrieves a user found within this guild. note This may return null in the WebSocket implementation due to incomplete user collection in large guilds. | Improve this Doc View Source GetUsersAsync(CacheMode, RequestOptions) Gets a collection of all users in this guild. Declaration Task<IReadOnlyCollection<IGuildUser>> GetUsersAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IGuildUser >> A task that represents the asynchronous get operation. The task result contains a collection of guild users found within this guild. Remarks This method retrieves all users found within this guild. | Improve this Doc View Source GetVoiceChannelAsync(UInt64, CacheMode, RequestOptions) Gets a voice channel in this guild. Declaration Task<IVoiceChannel> GetVoiceChannelAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier for the voice channel. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IVoiceChannel > A task that represents the asynchronous get operation. The task result contains the voice channel associated with the specified id ; null if none is found. | Improve this Doc View Source GetVoiceChannelsAsync(CacheMode, RequestOptions) Gets a collection of all voice channels in this guild. Declaration Task<IReadOnlyCollection<IVoiceChannel>> GetVoiceChannelsAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IVoiceChannel >> A task that represents the asynchronous get operation. The task result contains a read-only collection of voice channels found within this guild. | Improve this Doc View Source LeaveAsync(RequestOptions) Leaves this guild. Declaration Task LeaveAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous leave operation. Remarks This method will make the currently logged-in user leave the guild. note If the user is the owner of this guild, use DeleteAsync(RequestOptions) instead. | Improve this Doc View Source ModifyEmoteNameAsync(GuildEmote, Action<String>, RequestOptions) Modifies an existing GuildEmote in this guild. Declaration Task ModifyEmoteNameAsync(GuildEmote emote, Action<string> func, RequestOptions options = null) Parameters Type Name Description GuildEmote emote The emote to be modified. Action < System.String > func The delegate containing the properties to modify the emote with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous modification operation. The task result contains the modified emote. | Improve this Doc View Source MoveUsersAsync(IEnumerable<IGuildUser>, IVoiceChannel, RequestOptions) Moves the user to the voice channel. Declaration Task MoveUsersAsync(IEnumerable<IGuildUser> users, IVoiceChannel targetChannel, RequestOptions options = null) Parameters Type Name Description IEnumerable < IGuildUser > users The users to move. IVoiceChannel targetChannel the channel where the user gets moved to. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for moving a user. | Improve this Doc View Source RemoveBanAsync(IUser, RequestOptions) Unbans the user if they are currently banned. Declaration Task RemoveBanAsync(IUser user, RequestOptions options = null) Parameters Type Name Description IUser user The user to be unbanned. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous removal operation for the ban. | Improve this Doc View Source RemoveBanAsync(UInt64, RequestOptions) Unbans the user if they are currently banned. Declaration Task RemoveBanAsync(ulong userId, RequestOptions options = null) Parameters Type Name Description System.UInt64 userId The identifier of the user to be unbanned. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous removal operation for the ban. | Improve this Doc View Source SearchUsersAsync(Action<SearchGuildMemberProperties>, Int32, CacheMode, RequestOptions) Gets a collection of users in this guild that the name or nickname contains the provided string at func . Declaration IAsyncEnumerable<IReadOnlyCollection<IGuildUser>> SearchUsersAsync(Action<SearchGuildMemberProperties> func, int limit = null, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description Action < SearchGuildMemberProperties > func A delegate containing the properties to search users with. System.Int32 limit The maximum number of users to be gotten. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IGuildUser >> A task that represents the asynchronous get operation. The task result contains a collection of guild users that matches the properties with the provided at func . Remarks The limit can not be higher than MaxUsersPerBatch ."
  },
  "api/KaiHeiLa.IGuildChannel.html": {
    "href": "api/KaiHeiLa.IGuildChannel.html",
    "title": "Interface IGuildChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IGuildChannel Represents a generic guild channel. Inherited Members IChannel.Name IEntity<UInt64>.Id IDeletable.DeleteAsync(RequestOptions) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IGuildChannel : IChannel, IEntity<ulong>, IDeletable Properties | Improve this Doc View Source Guild Gets the guild associated with this channel. Declaration IGuild Guild { get; } Property Value Type Description IGuild A guild object that this channel belongs to. | Improve this Doc View Source GuildId Gets the guild ID associated with this channel. Declaration ulong GuildId { get; } Property Value Type Description System.UInt64 An langword_csharp_ulong representing the guild identifier for the guild that this channel belongs to. | Improve this Doc View Source Position Gets the position of this channel. Declaration int? Position { get; } Property Value Type Description System.Nullable < System.Int32 > An langword_csharp_int representing the position of this channel in the guild's channel list relative to others of the same type. | Improve this Doc View Source RolePermissionOverwrites Gets a collection of permission overwrites for roles for this channel. Declaration IReadOnlyCollection<RolePermissionOverwrite> RolePermissionOverwrites { get; } Property Value Type Description IReadOnlyCollection < RolePermissionOverwrite > A collection of overwrites for roles associated with this channel. | Improve this Doc View Source Type Gets the type of this channel. Declaration ChannelType Type { get; } Property Value Type Description ChannelType A ChannelType representing the type of this channel. | Improve this Doc View Source UserPermissionOverwrites Gets a collection of permission overwrites for users for this channel. Declaration IReadOnlyCollection<UserPermissionOverwrite> UserPermissionOverwrites { get; } Property Value Type Description IReadOnlyCollection < UserPermissionOverwrite > A collection of overwrites for users associated with this channel. Methods | Improve this Doc View Source AddPermissionOverwriteAsync(IGuildUser, RequestOptions) Adds the permission overwrite for the given user. Declaration Task AddPermissionOverwriteAsync(IGuildUser user, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to add the overwrite to. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous permission operation for adding the specified permissions to the channel. | Improve this Doc View Source AddPermissionOverwriteAsync(IRole, RequestOptions) Adds the permission overwrite for the given role. Declaration Task AddPermissionOverwriteAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role The role to add the overwrite to. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous permission operation for adding the specified permissions to the channel. | Improve this Doc View Source GetPermissionOverwrite(IRole) Gets the permission overwrite for a specific role. Declaration OverwritePermissions? GetPermissionOverwrite(IRole role) Parameters Type Name Description IRole role The role to get the overwrite from. Returns Type Description System.Nullable < OverwritePermissions > An overwrite object for the targeted role; null if none is set. | Improve this Doc View Source GetPermissionOverwrite(IUser) Gets the permission overwrite for a specific user. Declaration OverwritePermissions? GetPermissionOverwrite(IUser user) Parameters Type Name Description IUser user The user to get the overwrite from. Returns Type Description System.Nullable < OverwritePermissions > An overwrite object for the targeted user; null if none is set. | Improve this Doc View Source GetUserAsync(UInt64, CacheMode, RequestOptions) Gets a user in this channel. Declaration Task<IGuildUser> GetUserAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier of the user. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IGuildUser > A task representing the asynchronous get operation. The task result contains a guild user object that represents the user; null if none is found. | Improve this Doc View Source GetUsersAsync(CacheMode, RequestOptions) Gets a collection of users that are able to view the channel or are currently in this channel. Declaration IAsyncEnumerable<IReadOnlyCollection<IGuildUser>> GetUsersAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IGuildUser >> Paged collection of users. Remarks This method follows the same behavior as described in GetUsersAsync(CacheMode, RequestOptions) . Please visit its documentation for more details on this method. | Improve this Doc View Source ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) Modifies this guild channel. Declaration Task ModifyAsync(Action<ModifyGuildChannelProperties> func, RequestOptions options = null) Parameters Type Name Description Action < ModifyGuildChannelProperties > func The delegate containing the properties to modify the channel with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous modification operation. Remarks This method modifies the current guild channel with the specified properties. To see an example of this method and what properties are available, please refer to ModifyGuildChannelProperties . | Improve this Doc View Source ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) Updates the permission overwrite for the given user. Declaration Task ModifyPermissionOverwriteAsync(IGuildUser user, Func<OverwritePermissions, OverwritePermissions> func, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to add the overwrite to. Func < OverwritePermissions , OverwritePermissions > func A delegate containing the values to modify the permission overwrite with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous permission operation for adding the specified permissions to the channel. | Improve this Doc View Source ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) Updates the permission overwrite for the given role. Declaration Task ModifyPermissionOverwriteAsync(IRole role, Func<OverwritePermissions, OverwritePermissions> func, RequestOptions options = null) Parameters Type Name Description IRole role The role to add the overwrite to. Func < OverwritePermissions , OverwritePermissions > func A delegate containing the values to modify the permission overwrite with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous permission operation for adding the specified permissions to the channel. | Improve this Doc View Source RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) Removes the permission overwrite for the given user, if one exists. Declaration Task RemovePermissionOverwriteAsync(IGuildUser user, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to remove the overwrite from. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. | Improve this Doc View Source RemovePermissionOverwriteAsync(IRole, RequestOptions) Removes the permission overwrite for the given role, if one exists. Declaration Task RemovePermissionOverwriteAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role The role to remove the overwrite from. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.IGuildUser.html": {
    "href": "api/KaiHeiLa.IGuildUser.html",
    "title": "Interface IGuildUser | KaiHeiLa.Net 文档",
    "keywords": "Interface IGuildUser Represents a generic guild user. Inherited Members IUser.Username IUser.IdentifyNumber IUser.IdentifyNumberValue IUser.IsBot IUser.IsBanned IUser.IsVIP IUser.Avatar IUser.VIPAvatar IUser.IsDenoiseEnabled IUser.UserTag IUser.CreateDMChannelAsync(RequestOptions) IUser.GetIntimacyAsync(RequestOptions) IUser.UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) IEntity<UInt64>.Id IMentionable.PlainTextMention IMentionable.KMarkdownMention IPresence.IsOnline IPresence.ActiveClient Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IGuildUser : IUser, IEntity<ulong>, IMentionable, IPresence Properties | Improve this Doc View Source ActiveAt Gets when this user was activated. Declaration DateTimeOffset ActiveAt { get; } Property Value Type Description DateTimeOffset The time of which the user was activated. | Improve this Doc View Source Color Gets the color the user's displayed name is being displayed in. Declaration Color Color { get; } Property Value Type Description Color A Color struct representing the color the user's display name is being displayed in. | Improve this Doc View Source DisplayName Gets the displayed name for this user. Declaration string DisplayName { get; } Property Value Type Description System.String A string representing the display name of the user; If the nickname is null, this will be the username. | Improve this Doc View Source Guild Gets the guild for this user. Declaration IGuild Guild { get; } Property Value Type Description IGuild A guild object that this user belongs to. | Improve this Doc View Source GuildId Gets the ID of the guild for this user. Declaration ulong GuildId { get; } Property Value Type Description System.UInt64 An langword_csharp_ulong representing the identifier of the guild that this user belongs to. | Improve this Doc View Source GuildPermissions Gets the guild-level permissions for this user. Declaration GuildPermissions GuildPermissions { get; } Property Value Type Description GuildPermissions A GuildPermissions structure for this user, representing what permissions this user has in the guild. | Improve this Doc View Source IsMobileVerified Gets whether the mobile number has been verified for this user. Declaration bool IsMobileVerified { get; } Property Value Type Description System.Boolean true if the mobile number has been verified; false otherwise. | Improve this Doc View Source IsOwner Gets whether this user owns the current guild. Declaration bool? IsOwner { get; } Property Value Type Description System.Nullable < System.Boolean > true if this user owns the current guild; false otherwise. | Improve this Doc View Source JoinedAt Gets when this user joined the guild. Declaration DateTimeOffset JoinedAt { get; } Property Value Type Description DateTimeOffset The time of which the user has joined the guild. | Improve this Doc View Source Nickname Gets the nickname for this user. Declaration string Nickname { get; } Property Value Type Description System.String A string representing the nickname of the user; null if none is set. | Improve this Doc View Source RoleIds Gets a collection of IDs for the roles that this user currently possesses in the guild. Declaration IReadOnlyCollection<uint> RoleIds { get; } Property Value Type Description IReadOnlyCollection < System.UInt32 > A read-only collection of langword_csharp_uint , each representing an identifier for a role that this user possesses. Remarks This property returns a read-only collection of the identifiers of the roles that this user possesses. For WebSocket users, a Roles property can be found in place of this property. Due to the REST implementation, only a collection of identifiers can be retrieved instead of the full role objects. Methods | Improve this Doc View Source AddRoleAsync(IRole, RequestOptions) Adds the specified role to this user in the guild. Declaration Task AddRoleAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role The role to be added to the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous role addition operation. | Improve this Doc View Source AddRoleAsync(UInt32, RequestOptions) Adds the specified role to this user in the guild. Declaration Task AddRoleAsync(uint roleId, RequestOptions options = null) Parameters Type Name Description System.UInt32 roleId The role to be added to the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous role addition operation. | Improve this Doc View Source AddRolesAsync(IEnumerable<IRole>, RequestOptions) Adds the specified roles to this user in the guild. Declaration Task AddRolesAsync(IEnumerable<IRole> roles, RequestOptions options = null) Parameters Type Name Description IEnumerable < IRole > roles The roles to be added to the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous role addition operation. | Improve this Doc View Source AddRolesAsync(IEnumerable<UInt32>, RequestOptions) Adds the specified roleIds to this user in the guild. Declaration Task AddRolesAsync(IEnumerable<uint> roleIds, RequestOptions options = null) Parameters Type Name Description IEnumerable < System.UInt32 > roleIds The roles to be added to the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous role addition operation. | Improve this Doc View Source DeafenAsync(RequestOptions) Deafen this user in this guild. Declaration Task DeafenAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous deafening operation. | Improve this Doc View Source GetConnectedVoiceChannelsAsync(RequestOptions) Gets a collection of voice channels a user Declaration Task<IReadOnlyCollection<IVoiceChannel>> GetConnectedVoiceChannelsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < IVoiceChannel >> | Improve this Doc View Source GetPermissions(IGuildChannel) Gets the level permissions granted to this user to a given channel. Declaration ChannelPermissions GetPermissions(IGuildChannel channel) Parameters Type Name Description IGuildChannel channel The channel to get the permission from. Returns Type Description ChannelPermissions A ChannelPermissions structure representing the permissions that a user has in the specified channel. | Improve this Doc View Source KickAsync(RequestOptions) Kicks this user from this guild. Declaration Task KickAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous kick operation. | Improve this Doc View Source ModifyNicknameAsync(Action<String>, RequestOptions) Modifies this user's nickname in this guild. Declaration Task ModifyNicknameAsync(Action<string> func, RequestOptions options = null) Parameters Type Name Description Action < System.String > func The delegate containing the nickname to modify the user with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous modification operation. Remarks This method modifies the nickname of current guild user. | Improve this Doc View Source MuteAsync(RequestOptions) Mute this user in this guild. Declaration Task MuteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous muting operation. | Improve this Doc View Source RemoveRoleAsync(IRole, RequestOptions) Removes the specified role from this user in the guild. Declaration Task RemoveRoleAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role The role to be removed from the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous role removal operation. | Improve this Doc View Source RemoveRoleAsync(UInt32, RequestOptions) Removes the specified roleId from this user in the guild. Declaration Task RemoveRoleAsync(uint roleId, RequestOptions options = null) Parameters Type Name Description System.UInt32 roleId The role to be removed from the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous role removal operation. | Improve this Doc View Source RemoveRolesAsync(IEnumerable<IRole>, RequestOptions) Removes the specified roles from this user in the guild. Declaration Task RemoveRolesAsync(IEnumerable<IRole> roles, RequestOptions options = null) Parameters Type Name Description IEnumerable < IRole > roles The roles to be removed from the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous role removal operation. | Improve this Doc View Source RemoveRolesAsync(IEnumerable<UInt32>, RequestOptions) Removes the specified roleIds from this user in the guild. Declaration Task RemoveRolesAsync(IEnumerable<uint> roleIds, RequestOptions options = null) Parameters Type Name Description IEnumerable < System.UInt32 > roleIds The roles to be removed from the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous role removal operation. | Improve this Doc View Source UndeafenAsync(RequestOptions) Undeafen this user in this guild. Declaration Task UndeafenAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous undeafening operation. | Improve this Doc View Source UnmuteAsync(RequestOptions) Unmute this user in this guild. Declaration Task UnmuteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous unmuting operation. Extension Methods UserExtensions.SendTextMessageAsync(IUser, String, IQuote, RequestOptions) UserExtensions.SendImageMessageAsync(IUser, String, String, IQuote, RequestOptions) UserExtensions.SendImageMessageAsync(IUser, Stream, String, IQuote, RequestOptions) UserExtensions.SendVideoMessageAsync(IUser, String, String, IQuote, RequestOptions) UserExtensions.SendVideoMessageAsync(IUser, Stream, String, IQuote, RequestOptions) UserExtensions.SendFileMessageAsync(IUser, String, String, IQuote, RequestOptions) UserExtensions.SendFileMessageAsync(IUser, Stream, String, IQuote, RequestOptions) UserExtensions.SendKMarkdownMessageAsync(IUser, String, IQuote, RequestOptions) UserExtensions.ReplyCardsAsync(IUser, IEnumerable<ICard>, IQuote, RequestOptions) UserExtensions.ReplyCardsAsync(IUser, ICard, IQuote, RequestOptions) UserExtensions.BanAsync(IGuildUser, Int32, String, RequestOptions)"
  },
  "api/KaiHeiLa.IIntimacy.html": {
    "href": "api/KaiHeiLa.IIntimacy.html",
    "title": "Interface IIntimacy | KaiHeiLa.Net 文档",
    "keywords": "Interface IIntimacy Represents a generic intimacy. Inherited Members IEntity<UInt64>.Id Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IIntimacy : IEntity<ulong> Properties | Improve this Doc View Source Images Gets the images associated with this intimacy. Declaration IReadOnlyCollection<IntimacyImage> Images { get; } Property Value Type Description IReadOnlyCollection < IntimacyImage > An containing the images associated with this intimacy. | Improve this Doc View Source LastModifyAt Gets the time at which this intimacy was modified last time. Declaration DateTimeOffset LastModifyAt { get; } Property Value Type Description DateTimeOffset A time at which this intimacy was modified last time. | Improve this Doc View Source LastReadAt Gets the time at which the user read the message. Declaration DateTimeOffset LastReadAt { get; } Property Value Type Description DateTimeOffset A time at which the user read the message. | Improve this Doc View Source Score Gets the score associated with this intimacy. Declaration int Score { get; } Property Value Type Description System.Int32 A langword_csharp_int representing the score associated with this intimacy. | Improve this Doc View Source SocialInfo Gets the social information associated with this intimacy. Declaration string SocialInfo { get; } Property Value Type Description System.String A langword_csharp_string representing the social information associated with this intimacy. | Improve this Doc View Source User Gets the user associated with this intimacy. Declaration IUser User { get; } Property Value Type Description IUser An IUser representing the user associated with this intimacy. Methods | Improve this Doc View Source UpdateAsync(Action<IntimacyProperties>, RequestOptions) Updates the intimacy information with this user. Declaration Task UpdateAsync(Action<IntimacyProperties> func, RequestOptions options) Parameters Type Name Description Action < IntimacyProperties > func A delegate containing the properties to modify the IIntimacy with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for updating the intimacy information."
  },
  "api/KaiHeiLa.IInvite.html": {
    "href": "api/KaiHeiLa.IInvite.html",
    "title": "Interface IInvite | KaiHeiLa.Net 文档",
    "keywords": "Interface IInvite Represents a generic invite. Inherited Members IEntity<UInt32>.Id IDeletable.DeleteAsync(RequestOptions) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IInvite : IEntity<uint>, IDeletable Properties | Improve this Doc View Source Channel Gets the channel this invite is linked to. Declaration IChannel Channel { get; } Property Value Type Description IChannel A generic channel that the invite points to. | Improve this Doc View Source ChannelId Gets the ID of the channel this invite is linked to. Declaration ulong? ChannelId { get; } Property Value Type Description System.Nullable < System.UInt64 > A ulong representing the channel identifier that the invite points to. | Improve this Doc View Source ChannelName Gets the name of the channel this invite is linked to. Declaration string ChannelName { get; } Property Value Type Description System.String A string containing the name of the channel that the invite points to. | Improve this Doc View Source ChannelType Gets the type of the channel this invite is linked to. Declaration ChannelType ChannelType { get; } Property Value Type Description ChannelType | Improve this Doc View Source Code Gets the unique identifier for this invite. Declaration string Code { get; } Property Value Type Description System.String A string containing the invite code (e.g. wEAF5t ). | Improve this Doc View Source ExpiresAt Gets the time at which this invite will expire. Declaration DateTimeOffset? ExpiresAt { get; } Property Value Type Description System.Nullable < DateTimeOffset > A representing the time until this invite expires; null if this invite never expires. | Improve this Doc View Source Guild Gets the guild this invite is linked to. Declaration IGuild Guild { get; } Property Value Type Description IGuild A guild object representing the guild that the invite points to. | Improve this Doc View Source GuildId Gets the ID of the guild this invite is linked to. Declaration ulong? GuildId { get; } Property Value Type Description System.Nullable < System.UInt64 > A ulong representing the guild identifier that the invite points to. | Improve this Doc View Source GuildName Gets the name of the guild this invite is linked to. Declaration string GuildName { get; } Property Value Type Description System.String A string containing the name of the guild that the invite points to. | Improve this Doc View Source Inviter Gets the user that created this invite. Declaration IUser Inviter { get; } Property Value Type Description IUser A user that created this invite. | Improve this Doc View Source MaxAge Gets the time span until the invite expires. Declaration TimeSpan? MaxAge { get; } Property Value Type Description System.Nullable < TimeSpan > A representing the time span until this invite expires; null if this invite never expires. | Improve this Doc View Source MaxUses Gets the max number of uses this invite may have. Declaration int? MaxUses { get; } Property Value Type Description System.Nullable < System.Int32 > An int representing the number of uses this invite may be accepted until it is removed from the guild; null if none is set. | Improve this Doc View Source RemainingUses Gets the number of times this invite still remains. Declaration int? RemainingUses { get; } Property Value Type Description System.Nullable < System.Int32 > An int representing the number of times this invite still remains; null if none is set. | Improve this Doc View Source Url Gets the URL used to accept this invite using Code . Declaration string Url { get; } Property Value Type Description System.String A string containing the full invite URL (e.g. https://kaihei.co/wEAF5t ). | Improve this Doc View Source Uses Gets the number of times this invite has been used. Declaration int? Uses { get; } Property Value Type Description System.Nullable < System.Int32 > An int representing the number of times this invite has been used; null if none is set."
  },
  "api/KaiHeiLa.IKaiHeiLaClient.html": {
    "href": "api/KaiHeiLa.IKaiHeiLaClient.html",
    "title": "Interface IKaiHeiLaClient | KaiHeiLa.Net 文档",
    "keywords": "Interface IKaiHeiLaClient Represents a generic KaiHeiLa client. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IKaiHeiLaClient : IDisposable Properties | Improve this Doc View Source ConnectionState Gets the current state of connection. Declaration ConnectionState ConnectionState { get; } Property Value Type Description ConnectionState | Improve this Doc View Source CurrentUser Gets the currently logged-in user. Declaration ISelfUser CurrentUser { get; } Property Value Type Description ISelfUser | Improve this Doc View Source TokenType Gets the token type of the logged-in user. Declaration TokenType TokenType { get; } Property Value Type Description TokenType Methods | Improve this Doc View Source GetChannelAsync(UInt64, CacheMode, RequestOptions) Gets a generic channel. Declaration Task<IChannel> GetChannelAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier of the channel (e.g. 381889909113225237 ). CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IChannel > A task that represents the asynchronous get operation. The task result contains the channel associated with the identifier; null when the channel cannot be found. | Improve this Doc View Source GetDMChannelAsync(Guid, CacheMode, RequestOptions) Gets a direct message channel. Declaration Task<IDMChannel> GetDMChannelAsync(Guid chatCode, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description Guid chatCode The identifier of the channel. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IDMChannel > A task that represents the asynchronous get operation. The task result contains a read-only collection of direct-message channels that the user currently partakes in. | Improve this Doc View Source GetDMChannelsAsync(CacheMode, RequestOptions) Gets a collection of direct message channels opened in this session. Declaration Task<IReadOnlyCollection<IDMChannel>> GetDMChannelsAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IDMChannel >> A task that represents the asynchronous get operation. The task result contains a read-only collection of direct-message channels that the user currently partakes in. Remarks This method returns a collection of currently opened direct message channels. warning This method will not return previously opened DM channels outside of the current session! If you have just started the client, this may return an empty collection. | Improve this Doc View Source GetGuildAsync(UInt64, CacheMode, RequestOptions) Gets a guild. Declaration Task<IGuild> GetGuildAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The guild identifier. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IGuild > A task that represents the asynchronous get operation. The task result contains the guild associated with the identifier; null when the guild cannot be found. | Improve this Doc View Source GetGuildsAsync(CacheMode, RequestOptions) Gets a collection of guilds that the user is currently in. Declaration Task<IReadOnlyCollection<IGuild>> GetGuildsAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IGuild >> A task that represents the asynchronous get operation. The task result contains a read-only collection of guilds that the current user is in. | Improve this Doc View Source GetUserAsync(UInt64, CacheMode, RequestOptions) Gets a user. Declaration Task<IUser> GetUserAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier of the user (e.g. 168693960628371456 ). CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IUser > A task that represents the asynchronous get operation. The task result contains the user associated with the identifier; null if the user is not found. | Improve this Doc View Source StartAsync() Starts the connection between KaiHeiLa and the client.. Declaration Task StartAsync() Returns Type Description Task A task that represents the asynchronous start operation. Remarks This method will initialize the connection between the client and KaiHeiLa. important This method will immediately return after it is called, as it will initialize the connection on another thread. | Improve this Doc View Source StopAsync() Stops the connection between KaiHeiLa and the client. Declaration Task StopAsync() Returns Type Description Task A task that represents the asynchronous stop operation."
  },
  "api/KaiHeiLa.Image.html": {
    "href": "api/KaiHeiLa.Image.html",
    "title": "Struct Image | KaiHeiLa.Net 文档",
    "keywords": "Struct Image An image that will be uploaded to KaiHeiLa. Implements IDisposable Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct Image : IDisposable Constructors | Improve this Doc View Source Image(Stream) Create the image with a . Declaration public Image(Stream stream) Parameters Type Name Description Stream stream The to create the image with. Note that this must be some type of stream with the contents of a file in it. | Improve this Doc View Source Image(String) Create the image from a file path. Declaration public Image(string path) Parameters Type Name Description System.String path The path to the file. Remarks This file path is NOT validated and is passed directly into a . Properties | Improve this Doc View Source Stream Gets the stream to be uploaded to KaiHeiLa. Declaration public Stream Stream { get; } Property Value Type Description Stream Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable"
  },
  "api/KaiHeiLa.ImageElement.html": {
    "href": "api/KaiHeiLa.ImageElement.html",
    "title": "Class ImageElement | KaiHeiLa.Net 文档",
    "keywords": "Class ImageElement An image element that can be used in an IModule . Inheritance System.Object ImageElement Implements IElement Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ImageElement : object, IElement Properties | Improve this Doc View Source Alternative Gets the alternative text of the image. Declaration public string Alternative { get; } Property Value Type Description System.String A string that represents the alternative text of the image. | Improve this Doc View Source Circle Gets a value indicating whether the image should be rendered as a circle. Declaration public bool? Circle { get; } Property Value Type Description System.Nullable < System.Boolean > true if the image should be rendered as a circle; otherwise, false ; or null if whether the image should be rendered as a circle is not specified. | Improve this Doc View Source Size Gets the size of the image. Declaration public ImageSize? Size { get; } Property Value Type Description System.Nullable < ImageSize > An ImageSize that represents the size of the image; or null if the size is not specified. | Improve this Doc View Source Source Gets the source of the image. Declaration public string Source { get; } Property Value Type Description System.String A string that represents the source of the image. | Improve this Doc View Source Type Gets the type of the element. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType value that represents the theme of the button. Implements IElement"
  },
  "api/KaiHeiLa.ImageElementBuilder.html": {
    "href": "api/KaiHeiLa.ImageElementBuilder.html",
    "title": "Class ImageElementBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class ImageElementBuilder An element builder to build an ImageElement . Inheritance System.Object ImageElementBuilder Implements IElementBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ImageElementBuilder : object, IElementBuilder Fields | Improve this Doc View Source MaxAlternativeLength Gets the maximum image alternative text length allowed by KaiHeiLa. Declaration public const int MaxAlternativeLength = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source Alternative Gets or sets the alternative text of an ImageElementBuilder . Declaration public string Alternative { get; set; } Property Value Type Description System.String A string that represents the alternative text of the ImageElementBuilder . | Improve this Doc View Source Circle Gets or sets whether the image should be rendered as a circle. Declaration public bool? Circle { get; set; } Property Value Type Description System.Nullable < System.Boolean > true if the image should be rendered as a circle; otherwise, false ; or null if whether the image should be rendered as a circle is not specified. | Improve this Doc View Source Size Gets or sets the size of the image of an ImageElementBuilder . Declaration public ImageSize? Size { get; set; } Property Value Type Description System.Nullable < ImageSize > An ImageSize that represents the size of the image of the ImageElementBuilder ; null if the size is not specified. | Improve this Doc View Source Source Gets or sets the source of an ImageElementBuilder . Declaration public string Source { get; set; } Property Value Type Description System.String A string that represents the source of the ImageElementBuilder . | Improve this Doc View Source Type Gets the type of the element that this builder builds. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType that represents the type of element that this builder builds. Methods | Improve this Doc View Source Build() Builds the ImageElementBuilder into an ImageElement . Declaration public ImageElement Build() Returns Type Description ImageElement An ImageElement represents the built element object. | Improve this Doc View Source WithAlternative(String) Sets the alternative text of an ImageElementBuilder . Declaration public ImageElementBuilder WithAlternative(string alternative) Parameters Type Name Description System.String alternative The alternative text to be set. Returns Type Description ImageElementBuilder The current builder. | Improve this Doc View Source WithCircle(Boolean) Sets whether the image should be rendered as a circle. Declaration public ImageElementBuilder WithCircle(bool circle) Parameters Type Name Description System.Boolean circle true if the image should be rendered as a circle; otherwise, false . Returns Type Description ImageElementBuilder The current builder. | Improve this Doc View Source WithSize(ImageSize) Sets the size of the image of an ImageElementBuilder . Declaration public ImageElementBuilder WithSize(ImageSize size) Parameters Type Name Description ImageSize size The size to be set. Returns Type Description ImageElementBuilder The current builder. | Improve this Doc View Source WithSource(String) Sets the source of an ImageElementBuilder . Declaration public ImageElementBuilder WithSource(string source) Parameters Type Name Description System.String source The source to be set. Returns Type Description ImageElementBuilder The current builder. Operators | Improve this Doc View Source Implicit(String to ImageElementBuilder) Initialized a new instance of the ImageElementBuilder class with the specified content. Declaration public static implicit operator ImageElementBuilder(string source) Parameters Type Name Description System.String source The content of the ImageElement . Returns Type Description ImageElementBuilder An ImageElementBuilder object that is initialized with the specified image source. Explicit Interface Implementations | Improve this Doc View Source IElementBuilder.Build() Builds the IElementBuilder into an IElement . Declaration IElement IElementBuilder.Build() Returns Type Description IElement An IElement represents the built element object. Implements IElementBuilder"
  },
  "api/KaiHeiLa.ImageEmbed.html": {
    "href": "api/KaiHeiLa.ImageEmbed.html",
    "title": "Class ImageEmbed | KaiHeiLa.Net 文档",
    "keywords": "Class ImageEmbed Represents an image embed. Inheritance System.Object ImageEmbed Implements IEmbed Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ImageEmbed : object, IEmbed Properties | Improve this Doc View Source OriginUrl Gets the original URL of the image. Declaration public string OriginUrl { get; } Property Value Type Description System.String A langword_csharp_string representing the original URL of the image. | Improve this Doc View Source Type Gets the type of this embed. Declaration public EmbedType Type { get; } Property Value Type Description EmbedType A EmbedType that represents the type of this embed. | Improve this Doc View Source Url Gets the URL of this embed. Declaration public string Url { get; } Property Value Type Description System.String A langword_csharp_string that represents the URL of this embed. Implements IEmbed"
  },
  "api/KaiHeiLa.ImageGroupModule.html": {
    "href": "api/KaiHeiLa.ImageGroupModule.html",
    "title": "Class ImageGroupModule | KaiHeiLa.Net 文档",
    "keywords": "Class ImageGroupModule Represents an image group module that can be used in an ICard . Inheritance System.Object ImageGroupModule Implements IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ImageGroupModule : object, IModule Properties | Improve this Doc View Source Elements Gets the image elements in this image group module. Declaration public ImmutableArray<ImageElement> Elements { get; } Property Value Type Description ImmutableArray < ImageElement > An representing the images in this image group module. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IModule"
  },
  "api/KaiHeiLa.ImageGroupModuleBuilder.html": {
    "href": "api/KaiHeiLa.ImageGroupModuleBuilder.html",
    "title": "Class ImageGroupModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class ImageGroupModuleBuilder Representing an image group module builder for create an ImageGroupModule . Inheritance System.Object ImageGroupModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ImageGroupModuleBuilder : object, IModuleBuilder Constructors | Improve this Doc View Source ImageGroupModuleBuilder() Initializes a new instance of the ImageGroupModuleBuilder class. Declaration public ImageGroupModuleBuilder() Fields | Improve this Doc View Source MaxElementCount Returns the maximum number of elements allowed by KaiHeiLa. Declaration public const int MaxElementCount = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source Elements Gets or sets the elements of the image group. Declaration public List<ImageElementBuilder> Elements { get; set; } Property Value Type Description List < ImageElementBuilder > An ImageElementBuilder containing the elements of the image group. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source AddElement(Action<ImageElementBuilder>) Adds an image element to the image group. Declaration public ImageGroupModuleBuilder AddElement(Action<ImageElementBuilder> action) Parameters Type Name Description Action < ImageElementBuilder > action The action to add an image element to the image group. Returns Type Description ImageGroupModuleBuilder The current builder. | Improve this Doc View Source AddElement(ImageElementBuilder) Adds an image element to the image group. Declaration public ImageGroupModuleBuilder AddElement(ImageElementBuilder field) Parameters Type Name Description ImageElementBuilder field The image element to add. Returns Type Description ImageGroupModuleBuilder The current builder. | Improve this Doc View Source Build() Builds this builder into an ImageGroupModule . Declaration public ImageGroupModule Build() Returns Type Description ImageGroupModule An ImageGroupModule representing the built image group module object. Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.ImageSize.html": {
    "href": "api/KaiHeiLa.ImageSize.html",
    "title": "Enum ImageSize | KaiHeiLa.Net 文档",
    "keywords": "Enum ImageSize Specifies the size of the image in ImageElement . Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ImageSize : int Fields Name Description Large The image is displayed at large size. Small The image is displayed at small size."
  },
  "api/KaiHeiLa.IMediaModule.html": {
    "href": "api/KaiHeiLa.IMediaModule.html",
    "title": "Interface IMediaModule | KaiHeiLa.Net 文档",
    "keywords": "Interface IMediaModule A generic media module that can be used in an ICard . Inherited Members IModule.Type Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IMediaModule : IModule Properties | Improve this Doc View Source Source Gets the source of the media associated with this module. Declaration string Source { get; } Property Value Type Description System.String A langword_csharp_string representing the source of the audio associated with this module. | Improve this Doc View Source Title Gets the title of the media associated with this module. Declaration string Title { get; } Property Value Type Description System.String A langword_csharp_string representing the title of the media associated with this module."
  },
  "api/KaiHeiLa.IMentionable.html": {
    "href": "api/KaiHeiLa.IMentionable.html",
    "title": "Interface IMentionable | KaiHeiLa.Net 文档",
    "keywords": "Interface IMentionable Determines whether the object is mentionable or not. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IMentionable Properties | Improve this Doc View Source KMarkdownMention Returns a special string used to mention this object in KMarkdown formatted text. Declaration string KMarkdownMention { get; } Property Value Type Description System.String A string that is recognized by KaiHeiLa as a mention in KMarkdown formatted text. | Improve this Doc View Source PlainTextMention Returns a special string used to mention this object in plain text formatted text. Declaration string PlainTextMention { get; } Property Value Type Description System.String A string that is recognized by KaiHeiLa as a mention in plain text formatted text."
  },
  "api/KaiHeiLa.IMessage.html": {
    "href": "api/KaiHeiLa.IMessage.html",
    "title": "Interface IMessage | KaiHeiLa.Net 文档",
    "keywords": "Interface IMessage Represents a message object. Inherited Members IEntity<Guid>.Id IDeletable.DeleteAsync(RequestOptions) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IMessage : IEntity<Guid>, IDeletable Properties | Improve this Doc View Source Attachment Gets the attachment included in this message. Declaration IAttachment Attachment { get; } Property Value Type Description IAttachment The attachment included in this message; | Improve this Doc View Source Author Gets the author of this message. Declaration IUser Author { get; } Property Value Type Description IUser | Improve this Doc View Source Cards Gets all cards included in this message. Declaration IReadOnlyCollection<ICard> Cards { get; } Property Value Type Description IReadOnlyCollection < ICard > A read-only collection of card objects. | Improve this Doc View Source Channel Gets the source channel of the message. Declaration IMessageChannel Channel { get; } Property Value Type Description IMessageChannel | Improve this Doc View Source CleanContent Gets the clean content for this message. Declaration string CleanContent { get; } Property Value Type Description System.String A string that contains the body of the message stripped of mentions, markdown, emojis and pings; note that this field may be empty or the original code if the message is not a text based message. | Improve this Doc View Source Content Gets the content for this message. Declaration string Content { get; } Property Value Type Description System.String A string that contains the body of the message; note that this field may be empty or the original code if the message is not a text based message. | Improve this Doc View Source EditedTimestamp Gets the time of this message's last edit. Declaration DateTimeOffset? EditedTimestamp { get; } Property Value Type Description System.Nullable < DateTimeOffset > Time of when the message was last edited; null if the message is never edited. | Improve this Doc View Source Embeds Gets all embeds included in this message. Declaration IReadOnlyCollection<IEmbed> Embeds { get; } Property Value Type Description IReadOnlyCollection < IEmbed > A read-only collection of embed objects. | Improve this Doc View Source IsPinned Gets the value that indicates whether this message is pinned. Declaration bool? IsPinned { get; } Property Value Type Description System.Nullable < System.Boolean > true if this message was added to its channel's pinned messages; otherwise false . | Improve this Doc View Source MentionedEveryone Gets the value that indicates whether this message mentioned everyone. Declaration bool? MentionedEveryone { get; } Property Value Type Description System.Nullable < System.Boolean > true if this message mentioned everyone; otherwise false . | Improve this Doc View Source MentionedHere Gets the value that indicates whether this message mentioned online users. Declaration bool? MentionedHere { get; } Property Value Type Description System.Nullable < System.Boolean > true if this message mentioned online users; otherwise false . | Improve this Doc View Source MentionedRoleIds Gets the IDs of roles mentioned in this message. Declaration IReadOnlyCollection<uint> MentionedRoleIds { get; } Property Value Type Description IReadOnlyCollection < System.UInt32 > A read-only collection of role IDs. | Improve this Doc View Source MentionedUserIds Gets the IDs of users mentioned in this message. Declaration IReadOnlyCollection<ulong> MentionedUserIds { get; } Property Value Type Description IReadOnlyCollection < System.UInt64 > A read-only collection of user IDs. | Improve this Doc View Source Reactions Gets all reactions included in this message. Declaration IReadOnlyDictionary<IEmote, ReactionMetadata> Reactions { get; } Property Value Type Description IReadOnlyDictionary < IEmote , ReactionMetadata > | Improve this Doc View Source Source Gets the source type of this message. Declaration MessageSource Source { get; } Property Value Type Description MessageSource | Improve this Doc View Source Tags Gets all tags included in this message's content. Declaration IReadOnlyCollection<ITag> Tags { get; } Property Value Type Description IReadOnlyCollection < ITag > | Improve this Doc View Source Timestamp Gets the time this message was sent. Declaration DateTimeOffset Timestamp { get; } Property Value Type Description DateTimeOffset Time of when the message was sent. | Improve this Doc View Source Type Gets the type of this message. Declaration MessageType Type { get; } Property Value Type Description MessageType Methods | Improve this Doc View Source AddReactionAsync(IEmote, RequestOptions) Adds a reaction to this message. Declaration Task AddReactionAsync(IEmote emote, RequestOptions options = null) Parameters Type Name Description IEmote emote The emoji used to react to this message. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for adding a reaction to this message. See Also IEmote | Improve this Doc View Source GetReactionUsersAsync(IEmote, RequestOptions) Gets all users that reacted to a message with a given emote. Declaration Task<IReadOnlyCollection<IUser>> GetReactionUsersAsync(IEmote emote, RequestOptions options = null) Parameters Type Name Description IEmote emote The emoji that represents the reaction that you wish to get. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IUser >> Collection of users. | Improve this Doc View Source RemoveReactionAsync(IEmote, IUser, RequestOptions) Removes a reaction from message. Declaration Task RemoveReactionAsync(IEmote emote, IUser user, RequestOptions options = null) Parameters Type Name Description IEmote emote The emoji used to react to this message. IUser user The user that added the emoji. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for removing a reaction to this message. See Also IEmote | Improve this Doc View Source RemoveReactionAsync(IEmote, UInt64, RequestOptions) Removes a reaction from message. Declaration Task RemoveReactionAsync(IEmote emote, ulong userId, RequestOptions options = null) Parameters Type Name Description IEmote emote The emoji used to react to this message. System.UInt64 userId The ID of the user that added the emoji. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for removing a reaction to this message. See Also IEmote Extension Methods MessageExtensions.GetJumpUrl(IMessage)"
  },
  "api/KaiHeiLa.IMessageChannel.html": {
    "href": "api/KaiHeiLa.IMessageChannel.html",
    "title": "Interface IMessageChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IMessageChannel Inherited Members IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IEntity<UInt64>.Id Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IMessageChannel : IChannel, IEntity<ulong> Methods | Improve this Doc View Source DeleteMessageAsync(Guid, RequestOptions) Deletes a message. Declaration Task DeleteMessageAsync(Guid messageId, RequestOptions options = null) Parameters Type Name Description Guid messageId The identifier of the message that would be removed. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous removal operation. | Improve this Doc View Source DeleteMessageAsync(IMessage, RequestOptions) Deletes a message based on the provided message in this channel. Declaration Task DeleteMessageAsync(IMessage message, RequestOptions options = null) Parameters Type Name Description IMessage message The message that would be removed. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous removal operation. | Improve this Doc View Source GetMessageAsync(Guid, CacheMode, RequestOptions) Gets a message from this message channel. Declaration Task<IMessage> GetMessageAsync(Guid id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description Guid id The identifier of the message. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IMessage > A task that represents an asynchronous get operation for retrieving the message. The task result contains the retrieved message; null if no message is found with the specified identifier. | Improve this Doc View Source GetMessagesAsync(Guid, Direction, Int32, CacheMode, RequestOptions) Gets a collection of messages in this channel. Declaration IAsyncEnumerable<IReadOnlyCollection<IMessage>> GetMessagesAsync(Guid referenceMessageId, Direction dir, int limit = null, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description Guid referenceMessageId The ID of the starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IMessage >> Paged collection of messages. Remarks important The returned collection is an asynchronous enumerable object; one must call FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>) to access the individual messages as a collection. warning Do not fetch too many messages at once! This may cause unwanted preemptive rate limit or even actual rate limit, causing your bot to freeze! This method will attempt to fetch the number of messages specified under limit around the message referenceMessageId depending on the dir . The library will attempt to split up the requests according to your limit and MaxMessagesPerBatch . In other words, should the user request 500 messages, and the MaxMessagesPerBatch constant is 100 , the request will be split into 5 individual requests; thus returning 5 individual asynchronous responses, hence the need of flattening. | Improve this Doc View Source GetMessagesAsync(IMessage, Direction, Int32, CacheMode, RequestOptions) Gets a collection of messages in this channel. Declaration IAsyncEnumerable<IReadOnlyCollection<IMessage>> GetMessagesAsync(IMessage referenceMessage, Direction dir, int limit = null, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description IMessage referenceMessage The starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IMessage >> Paged collection of messages. Remarks important The returned collection is an asynchronous enumerable object; one must call FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>) to access the individual messages as a collection. warning Do not fetch too many messages at once! This may cause unwanted preemptive rate limit or even actual rate limit, causing your bot to freeze! This method will attempt to fetch the number of messages specified under limit around the message referenceMessage depending on the dir . The library will attempt to split up the requests according to your limit and MaxMessagesPerBatch . In other words, should the user request 500 messages, and the MaxMessagesPerBatch constant is 100 , the request will be split into 5 individual requests; thus returning 5 individual asynchronous responses, hence the need of flattening. | Improve this Doc View Source GetMessagesAsync(Int32, CacheMode, RequestOptions) Gets the last N messages from this message channel. Declaration IAsyncEnumerable<IReadOnlyCollection<IMessage>> GetMessagesAsync(int limit = null, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.Int32 limit The numbers of message to be gotten from. CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IMessage >> Paged collection of messages. Remarks important The returned collection is an asynchronous enumerable object; one must call FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>) to access the individual messages as a collection. warning Do not fetch too many messages at once! This may cause unwanted preemptive rate limit or even actual rate limit, causing your bot to freeze! This method will attempt to fetch the number of messages specified under limit . The library will attempt to split up the requests according to your limit and MaxMessagesPerBatch . In other words, should the user request 500 messages, and the MaxMessagesPerBatch constant is 100 , the request will be split into 5 individual requests; thus returning 5 individual asynchronous responses, hence the need of flattening. | Improve this Doc View Source ModifyMessageAsync(Guid, Action<MessageProperties>, RequestOptions) Modifies a message. Declaration Task ModifyMessageAsync(Guid messageId, Action<MessageProperties> func, RequestOptions options = null) Parameters Type Name Description Guid messageId The identifier of the message that would be changed. Action < MessageProperties > func A delegate containing the properties to modify the message with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous modification operation. Remarks This method modifies this message with the specified properties. To see an example of this method and what properties are available, please refer to MessageProperties . | Improve this Doc View Source SendCardMessageAsync(IEnumerable<ICard>, IQuote, IUser, RequestOptions) Sends a card message to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(IEnumerable<ICard> cards, IQuote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description IEnumerable < ICard > cards The cards to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendFileMessageAsync(Stream, String, IQuote, IUser, RequestOptions) Sends a file to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(Stream stream, string fileName = null, IQuote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description Stream stream The stream of the file. System.String fileName The name of the file. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends a file as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendFileMessageAsync(String, String, IQuote, IUser, RequestOptions) Sends a file to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(string path, string fileName = null, IQuote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the file. System.String fileName The name of the file. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends a file as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendImageMessageAsync(Stream, String, IQuote, IUser, RequestOptions) Sends an image to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(Stream stream, string fileName = null, IQuote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description Stream stream The stream of the image. System.String fileName The name of the image. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an image as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendImageMessageAsync(String, String, IQuote, IUser, RequestOptions) Sends an image to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(string path, string fileName = null, IQuote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the image. System.String fileName The name of the image. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an image as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendKMarkdownMessageAsync(String, IQuote, IUser, RequestOptions) Sends a KMarkdown message to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendKMarkdownMessageAsync(string text, IQuote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String text The message to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendTextMessageAsync(String, IQuote, IUser, RequestOptions) Sends a plain text to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendTextMessageAsync(string text, IQuote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String text The message to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendVideoMessageAsync(Stream, String, IQuote, IUser, RequestOptions) Sends a video to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(Stream stream, string fileName = null, IQuote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description Stream stream The stream of the video. System.String fileName The name of the video. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an video as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendVideoMessageAsync(String, String, IQuote, IUser, RequestOptions) Sends a video to this message channel. Declaration Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(string path, string fileName = null, IQuote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the video. System.String fileName The name of the video. IQuote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an video as if you are uploading an image directly from your KaiHeiLa client. Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.IModule.html": {
    "href": "api/KaiHeiLa.IModule.html",
    "title": "Interface IModule | KaiHeiLa.Net 文档",
    "keywords": "Interface IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IModule Properties | Improve this Doc View Source Type Declaration ModuleType Type { get; } Property Value Type Description ModuleType"
  },
  "api/KaiHeiLa.IModuleBuilder.html": {
    "href": "api/KaiHeiLa.IModuleBuilder.html",
    "title": "Interface IModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Interface IModuleBuilder A generic module builder for creating an IModule . Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IModuleBuilder Properties | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source Build() Builds the IModuleBuilder into an IModule . Declaration IModule Build() Returns Type Description IModule An IModule representing the built module object."
  },
  "api/KaiHeiLa.INestedChannel.html": {
    "href": "api/KaiHeiLa.INestedChannel.html",
    "title": "Interface INestedChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface INestedChannel Represents a type of guild channel that can be nested within a category. Inherited Members IGuildChannel.Guild IGuildChannel.GuildId IGuildChannel.Position IGuildChannel.Type IGuildChannel.RolePermissionOverwrites IGuildChannel.UserPermissionOverwrites IGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) IGuildChannel.GetPermissionOverwrite(IRole) IGuildChannel.GetPermissionOverwrite(IUser) IGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) IGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) IGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) IGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) IGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) IGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) IGuildChannel.GetUsersAsync(CacheMode, RequestOptions) IGuildChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IChannel.Name IEntity<UInt64>.Id IDeletable.DeleteAsync(RequestOptions) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface INestedChannel : IGuildChannel, IChannel, IEntity<ulong>, IDeletable Properties | Improve this Doc View Source CategoryId Gets the parent (category) ID of this channel in the guild's channel list. Declaration ulong? CategoryId { get; } Property Value Type Description System.Nullable < System.UInt64 > A langword_csharp_ulong representing the identifier of the parent of this channel; null if none is set. | Improve this Doc View Source CreatorId Gets the identifier of the user who created this channel. Declaration ulong CreatorId { get; } Property Value Type Description System.UInt64 A langword_csharp_ulong representing the identifier of the user who created this channel. | Improve this Doc View Source IsPermissionSynced Specifies whether the permissions of this channel is synchronized with its parent channel. Declaration bool IsPermissionSynced { get; } Property Value Type Description System.Boolean A langword_csharp_bool indicating whether the permissions of this channel is synchronized with its parent channel. Methods | Improve this Doc View Source CreateInviteAsync(InviteMaxAge, InviteMaxUses, RequestOptions) Creates a new invite to this channel. Declaration Task<IInvite> CreateInviteAsync(InviteMaxAge maxAge = default(InviteMaxAge), InviteMaxUses maxUses = default(InviteMaxUses), RequestOptions options = null) Parameters Type Name Description InviteMaxAge maxAge The time until the invite expires. Set to InviteMaxAge.NeverExpires to never expire. InviteMaxUses maxUses The max amount of times this invite may be used. Set to InviteMaxUses.Unlimited to have unlimited uses. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IInvite > A task that represents the asynchronous invite creation operation. The task result contains an invite metadata object containing information for the created invite. | Improve this Doc View Source CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, RequestOptions) Creates a new invite to this channel. Declaration Task<IInvite> CreateInviteAsync(int? maxAge, int? maxUses = null, RequestOptions options = null) Parameters Type Name Description System.Nullable < System.Int32 > maxAge The time (in seconds) until the invite expires. Set to null to never expire. System.Nullable < System.Int32 > maxUses The max amount of times this invite may be used. Set to null to have unlimited uses. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IInvite > A task that represents the asynchronous invite creation operation. The task result contains an invite metadata object containing information for the created invite. | Improve this Doc View Source GetCategoryAsync(CacheMode, RequestOptions) Gets the parent (category) channel of this channel. Declaration Task<ICategoryChannel> GetCategoryAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < ICategoryChannel > A task that represents the asynchronous get operation. The task result contains the category channel representing the parent of this channel; null if none is set. | Improve this Doc View Source GetCreatorAsync(CacheMode, RequestOptions) Gets the creator of this channel. Declaration Task<IUser> GetCreatorAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IUser > A task that represents the asynchronous get operation. The task result contains the creator of this channel. | Improve this Doc View Source GetInvitesAsync(RequestOptions) Gets a collection of all invites from this guild channel. Declaration Task<IReadOnlyCollection<IInvite>> GetInvitesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IInvite >> A task that represents the asynchronous get operation. The task result contains a read-only collection of invite, each representing information for an invite found within this guild. Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.IntimacyImage.html": {
    "href": "api/KaiHeiLa.IntimacyImage.html",
    "title": "Class IntimacyImage | KaiHeiLa.Net 文档",
    "keywords": "Class IntimacyImage Represents a single image of an intimacy. Inheritance System.Object IntimacyImage Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class IntimacyImage : object Properties | Improve this Doc View Source Id Gets the ID of the image of an intimacy. Declaration public uint Id { get; } Property Value Type Description System.UInt32 An langword_csharp_int representing the ID of the image of an intimacy. | Improve this Doc View Source Url Gets the URL of the image of an intimacy. Declaration public string Url { get; } Property Value Type Description System.String A representing the URL of the image of an intimacy."
  },
  "api/KaiHeiLa.IntimacyProperties.html": {
    "href": "api/KaiHeiLa.IntimacyProperties.html",
    "title": "Class IntimacyProperties | KaiHeiLa.Net 文档",
    "keywords": "Class IntimacyProperties Properties that are used to modify an IIntimacy with the specified changes. Inheritance System.Object IntimacyProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class IntimacyProperties : object Properties | Improve this Doc View Source ImageId The ID of the image to be updated on the IIntimacy . Declaration public uint ImageId { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Score The score to be set on the IIntimacy . Declaration public int Score { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SocialInfo The social information to be set on the IIntimacy . Declaration public string SocialInfo { get; set; } Property Value Type Description System.String See Also UpdateAsync(Action<IntimacyProperties>, RequestOptions)"
  },
  "api/KaiHeiLa.InviteMaxAge.html": {
    "href": "api/KaiHeiLa.InviteMaxAge.html",
    "title": "Enum InviteMaxAge | KaiHeiLa.Net 文档",
    "keywords": "Enum InviteMaxAge Specifies the time in second after which an IInvite will be expired. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum InviteMaxAge : int Fields Name Description HalfADay The invite will expire after half a day (43200 seconds). HalfAnHour The invite will expire after half an hour (1800 seconds). NeverExpires The invite will never expire. OneDay The invite will expire after one day (86400 seconds). OneHour The invite will expire after one hour (3600 seconds). OneWeek The invite will expire after one week (604800 seconds). SixHours The invite will expire after 6 hours (21600 seconds)."
  },
  "api/KaiHeiLa.InviteMaxUses.html": {
    "href": "api/KaiHeiLa.InviteMaxUses.html",
    "title": "Enum InviteMaxUses | KaiHeiLa.Net 文档",
    "keywords": "Enum InviteMaxUses Specifies the number of uses after which an IInvite will be expired. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum InviteMaxUses : int Fields Name Description Fifty This IInvite can be used for 50 times. Five This IInvite can be used for 5 times. One This IInvite can be used only once. OneHundred This IInvite can be used for 100 times. Ten This IInvite can be used for 10 times. TwentyFive This IInvite can be used for 25 times. Unlimited This IInvite can be used for unlimited times."
  },
  "api/KaiHeiLa.InviteModule.html": {
    "href": "api/KaiHeiLa.InviteModule.html",
    "title": "Class InviteModule | KaiHeiLa.Net 文档",
    "keywords": "Class InviteModule 邀请模块 Inheritance System.Object InviteModule Implements IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class InviteModule : object, IModule Remarks 提供服务器邀请/语音频道邀请 Properties | Improve this Doc View Source Code Declaration public string Code { get; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IModule"
  },
  "api/KaiHeiLa.InviteModuleBuilder.html": {
    "href": "api/KaiHeiLa.InviteModuleBuilder.html",
    "title": "Class InviteModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class InviteModuleBuilder Represents a invite module builder for creating an InviteModule . Inheritance System.Object InviteModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class InviteModuleBuilder : object, IModuleBuilder Properties | Improve this Doc View Source Code Gets or sets the code of the invite. Declaration public string Code { get; set; } Property Value Type Description System.String A langword_csharp_string representing the code of the invite. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source Build() Builds this builder into an InviteModule . Declaration public InviteModule Build() Returns Type Description InviteModule An InviteModule representing the built invite module object. | Improve this Doc View Source WithCode(String) Sets the code of the invite. Declaration public InviteModuleBuilder WithCode(string code) Parameters Type Name Description System.String code The code of the invite to be set. Returns Type Description InviteModuleBuilder The current builder. Operators | Improve this Doc View Source Implicit(String to InviteModuleBuilder) Initialized a new instance of the InviteModuleBuilder class with the specified code . Declaration public static implicit operator InviteModuleBuilder(string code) Parameters Type Name Description System.String code The code representing the invite. Returns Type Description InviteModuleBuilder An InviteModuleBuilder object that is initialized with the specified code . Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.IPermissionOverwrite-1.html": {
    "href": "api/KaiHeiLa.IPermissionOverwrite-1.html",
    "title": "Interface IPermissionOverwrite<TTarget> | KaiHeiLa.Net 文档",
    "keywords": "Interface IPermissionOverwrite<TTarget> Represents a generic permission overwrite. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IPermissionOverwrite<TTarget> Type Parameters Name Description TTarget The type of the target. Properties | Improve this Doc View Source Permissions Gets the overwritten permission. Declaration OverwritePermissions Permissions { get; } Property Value Type Description OverwritePermissions | Improve this Doc View Source Target Gets the target of this overwrite. Declaration TTarget Target { get; } Property Value Type Description TTarget"
  },
  "api/KaiHeiLa.IPresence.html": {
    "href": "api/KaiHeiLa.IPresence.html",
    "title": "Interface IPresence | KaiHeiLa.Net 文档",
    "keywords": "Interface IPresence Represents the user's presence status. This may include their online status and their activity. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IPresence Properties | Improve this Doc View Source ActiveClient Gets the type of the client where this user is currently active. Declaration ClientType? ActiveClient { get; } Property Value Type Description System.Nullable < ClientType > | Improve this Doc View Source IsOnline Gets the current status of this user. Declaration bool? IsOnline { get; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/KaiHeiLa.IPrivateChannel.html": {
    "href": "api/KaiHeiLa.IPrivateChannel.html",
    "title": "Interface IPrivateChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IPrivateChannel Represents a generic channel that is private to selected recipients. Inherited Members IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IEntity<UInt64>.Id Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IPrivateChannel : IChannel, IEntity<ulong> Properties | Improve this Doc View Source Recipients Gets the users that can access this channel. Declaration IReadOnlyCollection<IUser> Recipients { get; } Property Value Type Description IReadOnlyCollection < IUser > A read-only collection of users that can access this channel. Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.IQuote.html": {
    "href": "api/KaiHeiLa.IQuote.html",
    "title": "Interface IQuote | KaiHeiLa.Net 文档",
    "keywords": "Interface IQuote Represents a generic message quote. Inherited Members IEntity<String>.Id Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IQuote : IEntity<string> Properties | Improve this Doc View Source Author Gets the author of this message. Declaration IUser Author { get; } Property Value Type Description IUser | Improve this Doc View Source Content Gets the content of the message this quote refers to. Declaration string Content { get; } Property Value Type Description System.String A string that contains the body of the message; note that this field may be empty or the original code if the message is not a text based message. | Improve this Doc View Source CreateAt Gets the time this message was sent. Declaration DateTimeOffset CreateAt { get; } Property Value Type Description DateTimeOffset Time of when the message was sent. | Improve this Doc View Source QuotedMessageId Gets the identifier of the message this quote refers to. Declaration Guid QuotedMessageId { get; } Property Value Type Description Guid | Improve this Doc View Source Type Gets the type of the message this quote refers to. Declaration MessageType Type { get; } Property Value Type Description MessageType"
  },
  "api/KaiHeiLa.IRateLimitInfo.html": {
    "href": "api/KaiHeiLa.IRateLimitInfo.html",
    "title": "Interface IRateLimitInfo | KaiHeiLa.Net 文档",
    "keywords": "Interface IRateLimitInfo Represents a generic ratelimit info. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IRateLimitInfo Properties | Improve this Doc View Source Bucket Gets a unique string denoting the rate limit being encountered (non-inclusive of major parameters in the route path). Declaration string Bucket { get; } Property Value Type Description System.String | Improve this Doc View Source Endpoint Gets the endpoint that this ratelimit info came from. Declaration string Endpoint { get; } Property Value Type Description System.String | Improve this Doc View Source IsGlobal Gets whether or not this ratelimit info is global. Declaration bool IsGlobal { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Lag Gets the amount of lag for the request. This is used to denote the precise time of when the ratelimit expires. Declaration TimeSpan? Lag { get; } Property Value Type Description System.Nullable < TimeSpan > | Improve this Doc View Source Limit Gets the number of requests that can be made. Declaration int? Limit { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Remaining Gets the number of remaining requests that can be made. Declaration int? Remaining { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ResetAfter Gets the absolute time when this ratelimit resets. Declaration TimeSpan? ResetAfter { get; } Property Value Type Description System.Nullable < TimeSpan >"
  },
  "api/KaiHeiLa.IReaction.html": {
    "href": "api/KaiHeiLa.IReaction.html",
    "title": "Interface IReaction | KaiHeiLa.Net 文档",
    "keywords": "Interface IReaction Represents a generic reaction object. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IReaction Properties | Improve this Doc View Source Emote The IEmote used in the reaction. Declaration IEmote Emote { get; } Property Value Type Description IEmote"
  },
  "api/KaiHeiLa.IRecommendInfo.html": {
    "href": "api/KaiHeiLa.IRecommendInfo.html",
    "title": "Interface IRecommendInfo | KaiHeiLa.Net 文档",
    "keywords": "Interface IRecommendInfo Represents a generic recommendation information. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IRecommendInfo Properties | Improve this Doc View Source AuditStatus TODO: To be documented. Declaration int AuditStatus { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Banner Gets the banner URL of the recommended guild. Declaration string Banner { get; } Property Value Type Description System.String A langword_csharp_string representing the banner URL of the recommended guild. | Improve this Doc View Source BoostLevel Gets the boost level of the recommended guild. Declaration BoostLevel BoostLevel { get; } Property Value Type Description BoostLevel A BoostLevel representing the boost level of the recommended guild. | Improve this Doc View Source CustomId TODO: To be documented. Declaration string CustomId { get; } Property Value Type Description System.String | Improve this Doc View Source DaysBeforeModify Gets the number of days need to be waited before the recommendation information can be modified again. Declaration int DaysBeforeModify { get; } Property Value Type Description System.Int32 An representing the number of days need to be waited before the recommendation information can be modified again. | Improve this Doc View Source DefaultChannelId Gets the default channel ID of the recommended guild. Declaration ulong DefaultChannelId { get; } Property Value Type Description System.UInt64 A langword_csharp_ulong representing the default channel ID of the recommended guild. | Improve this Doc View Source Description Gets the description of the recommended guild. Declaration string Description { get; } Property Value Type Description System.String A langword_csharp_string representing the description of the recommended guild. | Improve this Doc View Source Features TODO: To be documented. Declaration object[] Features { get; } Property Value Type Description System.Object [] | Improve this Doc View Source GuildId Gets the ID of the recommended guild. Declaration ulong GuildId { get; } Property Value Type Description System.UInt64 A langword_csharp_ulong representing the ID of the recommended guild. | Improve this Doc View Source Icon Gets the icon URL of the recommended guild. Declaration string Icon { get; } Property Value Type Description System.String A langword_csharp_string representing the icon URL of the recommended guild. | Improve this Doc View Source IsOfficialPartner Gets whether the recommended guild is an official partner. Declaration bool IsOfficialPartner { get; } Property Value Type Description System.Boolean A langword_csharp_bool representing whether the recommended guild is an official partner. | Improve this Doc View Source Name Gets the name of the recommended guild. Declaration string Name { get; } Property Value Type Description System.String A langword_csharp_string representing the name of the recommended guild. | Improve this Doc View Source OpenId Gets the open ID for the recommended guild. Declaration uint OpenId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Sort TODO: To be documented. Declaration int Sort { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Status Gets the status of the recommended guild. Declaration int Status { get; } Property Value Type Description System.Int32 A langword_csharp_int representing the status of the recommended guild. | Improve this Doc View Source Tag Gets the tag of the recommended guild. Declaration string Tag { get; } Property Value Type Description System.String A langword_csharp_string representing the tag of the recommended guild."
  },
  "api/KaiHeiLa.IRole.html": {
    "href": "api/KaiHeiLa.IRole.html",
    "title": "Interface IRole | KaiHeiLa.Net 文档",
    "keywords": "Interface IRole Represents a generic role object to be given to a guild user. Inherited Members IEntity<UInt32>.Id IDeletable.DeleteAsync(RequestOptions) IMentionable.PlainTextMention IMentionable.KMarkdownMention Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IRole : IEntity<uint>, IDeletable, IMentionable, IComparable<IRole> Properties | Improve this Doc View Source Color Gets the color given to users of this role. Declaration Color Color { get; } Property Value Type Description Color A Color struct representing the color of this role. | Improve this Doc View Source Guild Gets the guild that owns this role. Declaration IGuild Guild { get; } Property Value Type Description IGuild A guild representing the parent guild of this role. | Improve this Doc View Source IsHoisted Gets a value that indicates whether the role can be separated in the user list. Declaration bool IsHoisted { get; } Property Value Type Description System.Boolean true if users of this role are separated in the user list; otherwise false . | Improve this Doc View Source IsMentionable Gets a value that indicates whether the role is mentionable. Declaration bool IsMentionable { get; } Property Value Type Description System.Boolean true if this role may be mentioned in messages; otherwise false . | Improve this Doc View Source Name Gets the name of this role. Declaration string Name { get; } Property Value Type Description System.String A string containing the name of this role. | Improve this Doc View Source Permissions Gets the permissions granted to members of this role. Declaration GuildPermissions Permissions { get; } Property Value Type Description GuildPermissions A GuildPermissions struct that this role possesses. | Improve this Doc View Source Position Gets this role's position relative to other roles in the same guild. Declaration int Position { get; } Property Value Type Description System.Int32 An representing the position of the role in the role list of the guild. | Improve this Doc View Source Type Gets the type of this role. Declaration RoleType? Type { get; } Property Value Type Description System.Nullable < RoleType > A RoleType representing the type of this role. Methods | Improve this Doc View Source GetUsersAsync(CacheMode, RequestOptions) Gets a collection of users with this role. Declaration IAsyncEnumerable<IReadOnlyCollection<IGuildUser>> GetUsersAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode The CacheMode that determines whether the object should be fetched from cache. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IGuildUser >> Paged collection of users with this role. | Improve this Doc View Source ModifyAsync(Action<RoleProperties>, RequestOptions) Modifies this role. Declaration Task ModifyAsync(Action<RoleProperties> func, RequestOptions options = null) Parameters Type Name Description Action < RoleProperties > func A delegate containing the properties to modify the role with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous modification operation. Remarks This method modifies this role with the specified properties. To see an example of this method and what properties are available, please refer to RoleProperties ."
  },
  "api/KaiHeiLa.ISelfUser.html": {
    "href": "api/KaiHeiLa.ISelfUser.html",
    "title": "Interface ISelfUser | KaiHeiLa.Net 文档",
    "keywords": "Interface ISelfUser Represents the logged-in KaiHeiLa user. Inherited Members IUser.Username IUser.IdentifyNumber IUser.IdentifyNumberValue IUser.IsBot IUser.IsBanned IUser.IsVIP IUser.Avatar IUser.VIPAvatar IUser.IsDenoiseEnabled IUser.UserTag IUser.CreateDMChannelAsync(RequestOptions) IUser.GetIntimacyAsync(RequestOptions) IUser.UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) IEntity<UInt64>.Id IMentionable.PlainTextMention IMentionable.KMarkdownMention IPresence.IsOnline IPresence.ActiveClient Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface ISelfUser : IUser, IEntity<ulong>, IMentionable, IPresence Properties | Improve this Doc View Source InvitedCount TODO: To be documented. Declaration int InvitedCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsMobileVerified Gets whether the mobile number of the logged-in user is verified. Declaration bool IsMobileVerified { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Mobile Gets the mobile number of the logged-in user. Declaration string Mobile { get; } Property Value Type Description System.String | Improve this Doc View Source MobilePrefix Gets the mobile prefix of the logged-in user. Declaration string MobilePrefix { get; } Property Value Type Description System.String Methods | Improve this Doc View Source StartPlayingAsync(IGame, RequestOptions) Starts a new game activity. After this operation, a game activity will be displayed on the currently connected user's profile. Declaration Task StartPlayingAsync(IGame game, RequestOptions options = null) Parameters Type Name Description IGame game The game to be played. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for starting a game activity. | Improve this Doc View Source StartPlayingAsync(Music, RequestOptions) Starts a new music activity. After this operation, a music activity will be displayed on the currently connected user's profile. Declaration Task StartPlayingAsync(Music music, RequestOptions options = null) Parameters Type Name Description Music music The music being listened to be showed. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for starting a music activity. | Improve this Doc View Source StopPlayingAsync(ActivityType, RequestOptions) Stops an activity. After this operation, the activity on the currently connected user's profile will disappear. Declaration Task StopPlayingAsync(ActivityType type, RequestOptions options = null) Parameters Type Name Description ActivityType type The type of the activity to stop RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for stopping an activity. Extension Methods UserExtensions.SendTextMessageAsync(IUser, String, IQuote, RequestOptions) UserExtensions.SendImageMessageAsync(IUser, String, String, IQuote, RequestOptions) UserExtensions.SendImageMessageAsync(IUser, Stream, String, IQuote, RequestOptions) UserExtensions.SendVideoMessageAsync(IUser, String, String, IQuote, RequestOptions) UserExtensions.SendVideoMessageAsync(IUser, Stream, String, IQuote, RequestOptions) UserExtensions.SendFileMessageAsync(IUser, String, String, IQuote, RequestOptions) UserExtensions.SendFileMessageAsync(IUser, Stream, String, IQuote, RequestOptions) UserExtensions.SendKMarkdownMessageAsync(IUser, String, IQuote, RequestOptions) UserExtensions.ReplyCardsAsync(IUser, IEnumerable<ICard>, IQuote, RequestOptions) UserExtensions.ReplyCardsAsync(IUser, ICard, IQuote, RequestOptions)"
  },
  "api/KaiHeiLa.ISystemMessage.html": {
    "href": "api/KaiHeiLa.ISystemMessage.html",
    "title": "Interface ISystemMessage | KaiHeiLa.Net 文档",
    "keywords": "Interface ISystemMessage Represents a generic message sent by the system. Inherited Members IMessage.Type IMessage.Source IMessage.IsPinned IMessage.Channel IMessage.Author IMessage.Content IMessage.CleanContent IMessage.Timestamp IMessage.EditedTimestamp IMessage.MentionedUserIds IMessage.MentionedRoleIds IMessage.MentionedEveryone IMessage.MentionedHere IMessage.Tags IMessage.Attachment IMessage.Cards IMessage.Embeds IMessage.Reactions IMessage.AddReactionAsync(IEmote, RequestOptions) IMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions) IMessage.RemoveReactionAsync(IEmote, UInt64, RequestOptions) IMessage.GetReactionUsersAsync(IEmote, RequestOptions) IEntity<Guid>.Id IDeletable.DeleteAsync(RequestOptions) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface ISystemMessage : IMessage, IEntity<Guid>, IDeletable Properties | Improve this Doc View Source SystemMessageType Gets the type of the system message. Declaration SystemMessageType SystemMessageType { get; } Property Value Type Description SystemMessageType Remarks warning Because the data from KaiHeiLa does not describe the type of the message in detail, this property is not implemented yet. Accessing this property will always result in an exception at present. Extension Methods MessageExtensions.GetJumpUrl(IMessage)"
  },
  "api/KaiHeiLa.ITag.html": {
    "href": "api/KaiHeiLa.ITag.html",
    "title": "Interface ITag | KaiHeiLa.Net 文档",
    "keywords": "Interface ITag Gets a generic tag found in messages. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface ITag Properties | Improve this Doc View Source Index Gets position of the tag in the message. Declaration int Index { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Key Gets the key of the tag. Declaration dynamic Key { get; } Property Value Type Description System.Object | Improve this Doc View Source Length Gets the length of the tag. Declaration int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Gets the type of the tag. Declaration TagType Type { get; } Property Value Type Description TagType | Improve this Doc View Source Value Gets the value of the tag. Declaration object Value { get; } Property Value Type Description System.Object See Also Tags"
  },
  "api/KaiHeiLa.ITextChannel.html": {
    "href": "api/KaiHeiLa.ITextChannel.html",
    "title": "Interface ITextChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface ITextChannel Represents a generic channel in a guild that can send and receive messages. Inherited Members INestedChannel.CategoryId INestedChannel.IsPermissionSynced INestedChannel.CreatorId INestedChannel.GetCategoryAsync(CacheMode, RequestOptions) INestedChannel.GetCreatorAsync(CacheMode, RequestOptions) INestedChannel.GetInvitesAsync(RequestOptions) INestedChannel.CreateInviteAsync(InviteMaxAge, InviteMaxUses, RequestOptions) INestedChannel.CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, RequestOptions) IGuildChannel.Guild IGuildChannel.GuildId IGuildChannel.Position IGuildChannel.Type IGuildChannel.RolePermissionOverwrites IGuildChannel.UserPermissionOverwrites IGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) IGuildChannel.GetPermissionOverwrite(IRole) IGuildChannel.GetPermissionOverwrite(IUser) IGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) IGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) IGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) IGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) IGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) IGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) IGuildChannel.GetUsersAsync(CacheMode, RequestOptions) IGuildChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IDeletable.DeleteAsync(RequestOptions) IMentionable.PlainTextMention IMentionable.KMarkdownMention IMessageChannel.SendTextMessageAsync(String, IQuote, IUser, RequestOptions) IMessageChannel.SendImageMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendImageMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendVideoMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendVideoMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendFileMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendFileMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendKMarkdownMessageAsync(String, IQuote, IUser, RequestOptions) IMessageChannel.SendCardMessageAsync(IEnumerable<ICard>, IQuote, IUser, RequestOptions) IMessageChannel.GetMessageAsync(Guid, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(Int32, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(Guid, Direction, Int32, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(IMessage, Direction, Int32, CacheMode, RequestOptions) IMessageChannel.DeleteMessageAsync(Guid, RequestOptions) IMessageChannel.DeleteMessageAsync(IMessage, RequestOptions) IMessageChannel.ModifyMessageAsync(Guid, Action<MessageProperties>, RequestOptions) IChannel.Name IEntity<UInt64>.Id Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface ITextChannel : INestedChannel, IGuildChannel, IDeletable, IMentionable, IMessageChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source SlowModeInterval Gets the current slow-mode delay for this channel. Declaration int SlowModeInterval { get; } Property Value Type Description System.Int32 An int representing the time in seconds required before the user can send another message; 0 if disabled. | Improve this Doc View Source Topic Gets the current topic for this text channel. Declaration string Topic { get; } Property Value Type Description System.String A string representing the topic set in the channel; null if none is set. Methods | Improve this Doc View Source GetPinnedMessagesAsync(RequestOptions) Gets a collection of pinned messages in this channel. Declaration Task<IReadOnlyCollection<IMessage>> GetPinnedMessagesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < IMessage >> A task that represents the asynchronous get operation for retrieving pinned messages in this channel. The task result contains a collection of messages found in the pinned messages. | Improve this Doc View Source ModifyAsync(Action<ModifyTextChannelProperties>, RequestOptions) Modifies this text channel. Declaration Task ModifyAsync(Action<ModifyTextChannelProperties> func, RequestOptions options = null) Parameters Type Name Description Action < ModifyTextChannelProperties > func The delegate containing the properties to modify the channel with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous modification operation. See Also ModifyTextChannelProperties Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.IUpdateable.html": {
    "href": "api/KaiHeiLa.IUpdateable.html",
    "title": "Interface IUpdateable | KaiHeiLa.Net 文档",
    "keywords": "Interface IUpdateable Defines whether the object is updateable or not. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IUpdateable Methods | Improve this Doc View Source UpdateAsync(RequestOptions) Updates this object's properties with its current state. Declaration Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents an asynchronous reloading operation. Remarks warning This method will fetch the latest data from REST API, and replace the current object's properties with the new data."
  },
  "api/KaiHeiLa.IUser.html": {
    "href": "api/KaiHeiLa.IUser.html",
    "title": "Interface IUser | KaiHeiLa.Net 文档",
    "keywords": "Interface IUser Inherited Members IEntity<UInt64>.Id IMentionable.PlainTextMention IMentionable.KMarkdownMention IPresence.IsOnline IPresence.ActiveClient Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IUser : IEntity<ulong>, IMentionable, IPresence Properties | Improve this Doc View Source Avatar Gets the link to this user's avatar. Declaration string Avatar { get; } Property Value Type Description System.String | Improve this Doc View Source IdentifyNumber Gets the per-username unique ID for this user. Declaration string IdentifyNumber { get; } Property Value Type Description System.String | Improve this Doc View Source IdentifyNumberValue Gets the per-username unique ID for this user. Declaration ushort? IdentifyNumberValue { get; } Property Value Type Description System.Nullable < System.UInt16 > | Improve this Doc View Source IsBanned Gets whether this user is banned; null if unknown. Declaration bool? IsBanned { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsBot Gets whether this user is a bot; null if unknown. Declaration bool? IsBot { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsDenoiseEnabled Gets whether this user enabled denoise feature; null if unknown. Declaration bool? IsDenoiseEnabled { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsVIP Gets whether this user is VIP; null if unknown. Declaration bool? IsVIP { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Username Gets the username for this user. Declaration string Username { get; } Property Value Type Description System.String | Improve this Doc View Source UserTag Get the tag this user has. Declaration UserTag UserTag { get; } Property Value Type Description UserTag | Improve this Doc View Source VIPAvatar Gets the link to this user's VIP avatar. Declaration string VIPAvatar { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CreateDMChannelAsync(RequestOptions) Creates the direct message channel of this user. Declaration Task<IDMChannel> CreateDMChannelAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IDMChannel > A task that represents the asynchronous operation for getting or creating a DM channel. The task result contains the DM channel associated with this user. Remarks This method is used to obtain or create a channel used to send a direct message. warning In event that the current user cannot send a message to the target user, a channel can and will still be created by KaiHeiLa. However, attempting to send a message will yield a HttpException with a 403 as its HttpCode . There are currently no official workarounds by KaiHeiLa. | Improve this Doc View Source GetIntimacyAsync(RequestOptions) Gets the intimacy information with this user. Declaration Task<IIntimacy> GetIntimacyAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IIntimacy > A task that represents the asynchronous operation for getting the intimacy information. The task result contains the intimacy information associated with this user. | Improve this Doc View Source UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) Updates the intimacy information with this user. Declaration Task UpdateIntimacyAsync(Action<IntimacyProperties> func, RequestOptions options) Parameters Type Name Description Action < IntimacyProperties > func A delegate containing the properties to modify the IIntimacy with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for updating the intimacy information. Extension Methods UserExtensions.SendTextMessageAsync(IUser, String, IQuote, RequestOptions) UserExtensions.SendImageMessageAsync(IUser, String, String, IQuote, RequestOptions) UserExtensions.SendImageMessageAsync(IUser, Stream, String, IQuote, RequestOptions) UserExtensions.SendVideoMessageAsync(IUser, String, String, IQuote, RequestOptions) UserExtensions.SendVideoMessageAsync(IUser, Stream, String, IQuote, RequestOptions) UserExtensions.SendFileMessageAsync(IUser, String, String, IQuote, RequestOptions) UserExtensions.SendFileMessageAsync(IUser, Stream, String, IQuote, RequestOptions) UserExtensions.SendKMarkdownMessageAsync(IUser, String, IQuote, RequestOptions) UserExtensions.ReplyCardsAsync(IUser, IEnumerable<ICard>, IQuote, RequestOptions) UserExtensions.ReplyCardsAsync(IUser, ICard, IQuote, RequestOptions)"
  },
  "api/KaiHeiLa.IUserMessage.html": {
    "href": "api/KaiHeiLa.IUserMessage.html",
    "title": "Interface IUserMessage | KaiHeiLa.Net 文档",
    "keywords": "Interface IUserMessage Represents a generic message sent by a user. Inherited Members IMessage.Type IMessage.Source IMessage.IsPinned IMessage.Channel IMessage.Author IMessage.Content IMessage.CleanContent IMessage.Timestamp IMessage.EditedTimestamp IMessage.MentionedUserIds IMessage.MentionedRoleIds IMessage.MentionedEveryone IMessage.MentionedHere IMessage.Tags IMessage.Attachment IMessage.Cards IMessage.Embeds IMessage.Reactions IMessage.AddReactionAsync(IEmote, RequestOptions) IMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions) IMessage.RemoveReactionAsync(IEmote, UInt64, RequestOptions) IMessage.GetReactionUsersAsync(IEmote, RequestOptions) IEntity<Guid>.Id IDeletable.DeleteAsync(RequestOptions) Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IUserMessage : IMessage, IEntity<Guid>, IDeletable Properties | Improve this Doc View Source Quote Gets the message quote. Declaration IQuote Quote { get; } Property Value Type Description IQuote The message quote. Methods | Improve this Doc View Source ModifyAsync(Action<MessageProperties>, RequestOptions) Modifies this message. Declaration Task ModifyAsync(Action<MessageProperties> func, RequestOptions options = null) Parameters Type Name Description Action < MessageProperties > func A delegate containing the properties to modify the message with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous modification operation. Remarks This method modifies this message with the specified properties. To see an example of this method and what properties are available, please refer to MessageProperties . | Improve this Doc View Source Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling) Transforms this message's text into a human-readable form by resolving its tags. Declaration string Resolve(TagHandling userHandling = default(TagHandling), TagHandling channelHandling = default(TagHandling), TagHandling roleHandling = default(TagHandling), TagHandling everyoneHandling = default(TagHandling), TagHandling emojiHandling = default(TagHandling)) Parameters Type Name Description TagHandling userHandling Determines how the user tag should be handled. TagHandling channelHandling Determines how the channel tag should be handled. TagHandling roleHandling Determines how the role tag should be handled. TagHandling everyoneHandling Determines how the @everyone tag should be handled. TagHandling emojiHandling Determines how the emoji tag should be handled. Returns Type Description System.String Extension Methods MessageExtensions.GetJumpUrl(IMessage) MessageExtensions.AddReactionsAsync(IUserMessage, IEnumerable<IEmote>, RequestOptions) MessageExtensions.RemoveReactionsAsync(IUserMessage, IUser, IEnumerable<IEmote>, RequestOptions) MessageExtensions.ReplyTextAsync(IUserMessage, String, Boolean, Boolean, RequestOptions) MessageExtensions.ReplyImageAsync(IUserMessage, String, String, Boolean, Boolean, RequestOptions) MessageExtensions.ReplyImageAsync(IUserMessage, Stream, String, Boolean, Boolean, RequestOptions) MessageExtensions.ReplyVideoAsync(IUserMessage, String, String, Boolean, Boolean, RequestOptions) MessageExtensions.ReplyVideoAsync(IUserMessage, Stream, String, Boolean, Boolean, RequestOptions) MessageExtensions.ReplyFileAsync(IUserMessage, String, String, Boolean, Boolean, RequestOptions) MessageExtensions.ReplyFileAsync(IUserMessage, Stream, String, Boolean, Boolean, RequestOptions) MessageExtensions.ReplyKMarkdownAsync(IUserMessage, String, Boolean, Boolean, RequestOptions) MessageExtensions.ReplyCardsAsync(IUserMessage, IEnumerable<ICard>, Boolean, Boolean, RequestOptions) MessageExtensions.ReplyCardsAsync(IUserMessage, ICard, Boolean, Boolean, RequestOptions) MessageExtensions.HasCharPrefix(IUserMessage, Char, ref Int32) MessageExtensions.HasStringPrefix(IUserMessage, String, ref Int32, StringComparison) MessageExtensions.HasMentionPrefix(IUserMessage, IUser, ref Int32)"
  },
  "api/KaiHeiLa.IVoiceChannel.html": {
    "href": "api/KaiHeiLa.IVoiceChannel.html",
    "title": "Interface IVoiceChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IVoiceChannel Represents a generic voice channel in a guild. Inherited Members INestedChannel.CategoryId INestedChannel.IsPermissionSynced INestedChannel.CreatorId INestedChannel.GetCategoryAsync(CacheMode, RequestOptions) INestedChannel.GetCreatorAsync(CacheMode, RequestOptions) INestedChannel.GetInvitesAsync(RequestOptions) INestedChannel.CreateInviteAsync(InviteMaxAge, InviteMaxUses, RequestOptions) INestedChannel.CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, RequestOptions) IGuildChannel.Guild IGuildChannel.GuildId IGuildChannel.Position IGuildChannel.Type IGuildChannel.RolePermissionOverwrites IGuildChannel.UserPermissionOverwrites IGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) IGuildChannel.GetPermissionOverwrite(IRole) IGuildChannel.GetPermissionOverwrite(IUser) IGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) IGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) IGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) IGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) IGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) IGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) IGuildChannel.GetUsersAsync(CacheMode, RequestOptions) IGuildChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IDeletable.DeleteAsync(RequestOptions) IChannel.Name IEntity<UInt64>.Id IMentionable.PlainTextMention IMentionable.KMarkdownMention Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IVoiceChannel : INestedChannel, IGuildChannel, IDeletable, IAudioChannel, IChannel, IEntity<ulong>, IMentionable Properties | Improve this Doc View Source HasPassword Gets whether this voice channel is locked by a password. Declaration bool HasPassword { get; } Property Value Type Description System.Boolean A bool representing whether this voice channel is locked by a password. | Improve this Doc View Source ServerUrl Gets the server url that clients should connect to to join this voice channel. Declaration string ServerUrl { get; } Property Value Type Description System.String A string representing the url that clients should connect to to join this voice channel. | Improve this Doc View Source UserLimit Gets the max number of users allowed to be connected to this channel at once. Declaration int? UserLimit { get; } Property Value Type Description System.Nullable < System.Int32 > An int representing the maximum number of users that are allowed to be connected to this channel at once; null if a limit is not set. | Improve this Doc View Source VoiceQuality Gets the voice quality that the clients in this voice channel are requested to use. Declaration VoiceQuality? VoiceQuality { get; } Property Value Type Description System.Nullable < VoiceQuality > A VoiceQuality representing the voice quality that this voice channel defines and requests the client(s) to use. Methods | Improve this Doc View Source ModifyAsync(Action<ModifyVoiceChannelProperties>, RequestOptions) Modifies this voice channel. Declaration Task ModifyAsync(Action<ModifyVoiceChannelProperties> func, RequestOptions options = null) Parameters Type Name Description Action < ModifyVoiceChannelProperties > func The properties to modify the channel with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous modification operation. See Also ModifyVoiceChannelProperties Extension Methods ChannelExtensions.GetChannelType(IChannel) ChannelExtensions.GetJumpUrl(IChannel)"
  },
  "api/KaiHeiLa.KaiHeiLaConfig.html": {
    "href": "api/KaiHeiLa.KaiHeiLaConfig.html",
    "title": "Class KaiHeiLaConfig | KaiHeiLa.Net 文档",
    "keywords": "Class KaiHeiLaConfig Defines various behaviors of KaiHeiLa.Net. Inheritance System.Object KaiHeiLaConfig KaiHeiLaRestConfig Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class KaiHeiLaConfig : object Fields | Improve this Doc View Source APIUrl Returns the base KaiHeiLa API URL. Declaration public static readonly string APIUrl Field Value Type Description System.String The KaiHeiLa API URL using APIVersion . | Improve this Doc View Source APIVersion Returns the API version KaiHeiLa.Net uses. Declaration public const int APIVersion = null Field Value Type Description System.Int32 An int representing the API version that KaiHeiLa.Net uses to communicate with KaiHeiLa. A list of available API version can be seen on the official KaiHeiLa API documentation . | Improve this Doc View Source DefaultRequestTimeout Returns the default timeout for requests. Declaration public const int DefaultRequestTimeout = null Field Value Type Description System.Int32 The amount of time it takes in milliseconds before a request is timed out. | Improve this Doc View Source MaxIntimacyScore Returns the max value for a KaiHeiLa intimacy score. Declaration public const int MaxIntimacyScore = null Field Value Type Description System.Int32 The maximum value of an intimacy score allowed by KaiHeiLa. | Improve this Doc View Source MaxItemsPerBatchByDefault Returns the max items allowed to be in a request by default. Declaration public const int MaxItemsPerBatchByDefault = null Field Value Type Description System.Int32 The maximum number of items that can be gotten per-batch by default. | Improve this Doc View Source MaxMessageSize Returns the max length for a KaiHeiLa message. Declaration public const int MaxMessageSize = null Field Value Type Description System.Int32 The maximum length of a message allowed by KaiHeiLa. Remarks warning The accurate value of this property is not known. It is set to int.MaxValue at current so that it does not work. | Improve this Doc View Source MaxMessagesPerBatch Returns the max messages allowed to be in a request. Declaration public const int MaxMessagesPerBatch = null Field Value Type Description System.Int32 The maximum number of messages that can be gotten per-batch. | Improve this Doc View Source MaxNicknameSize Returns the max length for a KaiHeiLa guild nickname. Declaration public const int MaxNicknameSize = null Field Value Type Description System.Int32 The maximum length of a nickname allowed by KaiHeiLa. | Improve this Doc View Source MaxUsersPerBatch Returns the max users allowed to be in a request. Declaration public const int MaxUsersPerBatch = null Field Value Type Description System.Int32 The maximum number of users that can be gotten per-batch. | Improve this Doc View Source MinIntimacyScore Returns the min value for a KaiHeiLa intimacy score. Declaration public const int MinIntimacyScore = null Field Value Type Description System.Int32 The minimum value of an intimacy score allowed by KaiHeiLa. | Improve this Doc View Source MinNicknameSize Returns the min length for a KaiHeiLa guild nickname. Declaration public const int MinNicknameSize = null Field Value Type Description System.Int32 The minimum length of a nickname allowed by KaiHeiLa. Properties | Improve this Doc View Source DefaultRatelimitCallback Gets or sets the default callback for rate limits. Declaration public Func<IRateLimitInfo, Task> DefaultRatelimitCallback { get; set; } Property Value Type Description Func < IRateLimitInfo , Task > Remarks This property is mutually exclusive with RatelimitCallback . | Improve this Doc View Source DefaultRetryMode Gets or sets how a request should act in the case of an error, by default. Declaration public RetryMode DefaultRetryMode { get; set; } Property Value Type Description RetryMode The currently set RetryMode . | Improve this Doc View Source LogLevel Gets or sets the minimum log level severity that will be sent to the Log event. Declaration public LogSeverity LogLevel { get; set; } Property Value Type Description LogSeverity The currently set LogSeverity for logging level. | Improve this Doc View Source UserAgent Gets the user agent that KaiHeiLa.Net uses in its clients. Declaration public static string UserAgent { get; } Property Value Type Description System.String The user agent used in each KaiHeiLa.Net request. | Improve this Doc View Source Version Gets the KaiHeiLa.Net version, including the build number. Declaration public static string Version { get; } Property Value Type Description System.String A string containing the detailed version information, including its build number; Unknown when the version fails to be fetched."
  },
  "api/KaiHeiLa.KaiHeiLaError.html": {
    "href": "api/KaiHeiLa.KaiHeiLaError.html",
    "title": "Struct KaiHeiLaError | KaiHeiLa.Net 文档",
    "keywords": "Struct KaiHeiLaError Represents an error with a property. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct KaiHeiLaError Properties | Improve this Doc View Source Code Gets the code of the error. Declaration public string Code { get; } Property Value Type Description System.String | Improve this Doc View Source Message Gets the message describing what went wrong. Declaration public string Message { get; } Property Value Type Description System.String"
  },
  "api/KaiHeiLa.KaiHeiLaErrorCode.html": {
    "href": "api/KaiHeiLa.KaiHeiLaErrorCode.html",
    "title": "Enum KaiHeiLaErrorCode | KaiHeiLa.Net 文档",
    "keywords": "Enum KaiHeiLaErrorCode Represents a set of json error codes received by KaiHeiLa. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum KaiHeiLaErrorCode : int Fields Name Description GeneralError InvalidAuthenticationToken InvalidSequenceNumber MissingArgument MissingPermissions MissingResumeArgument RequestEntityTooLarge SessionExpired Success TokenExpired TokenVerificationFailed"
  },
  "api/KaiHeiLa.KaiHeiLaJsonError.html": {
    "href": "api/KaiHeiLa.KaiHeiLaJsonError.html",
    "title": "Struct KaiHeiLaJsonError | KaiHeiLa.Net 文档",
    "keywords": "Struct KaiHeiLaJsonError Represents a generic parsed json error received from KaiHeiLa after performing a rest request. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct KaiHeiLaJsonError Properties | Improve this Doc View Source Errors Gets a collection of errors associated with the specific property at the path. Declaration public IReadOnlyCollection<KaiHeiLaError> Errors { get; } Property Value Type Description IReadOnlyCollection < KaiHeiLaError > | Improve this Doc View Source Path Gets the json path of the error. Declaration public string Path { get; } Property Value Type Description System.String"
  },
  "api/KaiHeiLa.KMarkdownElement.html": {
    "href": "api/KaiHeiLa.KMarkdownElement.html",
    "title": "Class KMarkdownElement | KaiHeiLa.Net 文档",
    "keywords": "Class KMarkdownElement A KMarkdown element that can be used in an IModule . Inheritance System.Object KMarkdownElement Implements IElement Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class KMarkdownElement : object, IElement Properties | Improve this Doc View Source Content Gets the KMarkdown content of the element. Declaration public string Content { get; } Property Value Type Description System.String A string that represents the KMarkdown content of the element. | Improve this Doc View Source Type Gets the type of the element. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType value that represents the theme of the button. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IElement"
  },
  "api/KaiHeiLa.KMarkdownElementBuilder.html": {
    "href": "api/KaiHeiLa.KMarkdownElementBuilder.html",
    "title": "Class KMarkdownElementBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class KMarkdownElementBuilder An element builder to build a KMarkdownElement . Inheritance System.Object KMarkdownElementBuilder Implements IElementBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class KMarkdownElementBuilder : object, IElementBuilder Fields | Improve this Doc View Source MaxKMarkdownLength Gets the maximum KMarkdown length allowed by KaiHeiLa. Declaration public const int MaxKMarkdownLength = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source Content Gets or sets the content of a KMarkdownElementBuilder . Declaration public string Content { get; set; } Property Value Type Description System.String The content of the KMarkdownElementBuilder . | Improve this Doc View Source Type Gets the type of the element that this builder builds. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType that represents the type of element that this builder builds. Methods | Improve this Doc View Source Build() Builds the KMarkdownElementBuilder into a KMarkdownElement . Declaration public KMarkdownElement Build() Returns Type Description KMarkdownElement A KMarkdownElement represents the built element object. | Improve this Doc View Source WithContent(String) Sets the content of a KMarkdownElementBuilder . Declaration public KMarkdownElementBuilder WithContent(string content) Parameters Type Name Description System.String content The text to be set as the content. Returns Type Description KMarkdownElementBuilder The current builder. Operators | Improve this Doc View Source Implicit(String to KMarkdownElementBuilder) Initialized a new instance of the KMarkdownElementBuilder class with the specified content. Declaration public static implicit operator KMarkdownElementBuilder(string content) Parameters Type Name Description System.String content The content of the KMarkdownElement . Returns Type Description KMarkdownElementBuilder A KMarkdownElementBuilder object that is initialized with the specified content. Explicit Interface Implementations | Improve this Doc View Source IElementBuilder.Build() Builds the IElementBuilder into an IElement . Declaration IElement IElementBuilder.Build() Returns Type Description IElement An IElement represents the built element object. Implements IElementBuilder"
  },
  "api/KaiHeiLa.LinkEmbed.html": {
    "href": "api/KaiHeiLa.LinkEmbed.html",
    "title": "Class LinkEmbed | KaiHeiLa.Net 文档",
    "keywords": "Class LinkEmbed Represents a link embed. Inheritance System.Object LinkEmbed Implements IEmbed Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class LinkEmbed : object, IEmbed Properties | Improve this Doc View Source Color Gets the color displayed along the left side of the card. Declaration public Color Color { get; } Property Value Type Description Color A langword_csharp_string representing the color displayed along the left side of the card. | Improve this Doc View Source Description Gets the description of the website the link directs to. Declaration public string Description { get; } Property Value Type Description System.String A langword_csharp_string representing the description of the website the link directs to. | Improve this Doc View Source Image Gets the URL of the image related to the website the link directs to. Declaration public string Image { get; } Property Value Type Description System.String A langword_csharp_string representing the URL of the image related to the website the link directs to. | Improve this Doc View Source SiteName Gets the name of the website the link directs to. Declaration public string SiteName { get; } Property Value Type Description System.String A langword_csharp_string representing the name of the website the link directs to. | Improve this Doc View Source Title Gets the title of the website the link directs to. Declaration public string Title { get; } Property Value Type Description System.String A langword_csharp_string representing the title of the website the link directs to. | Improve this Doc View Source Type Gets the type of this embed. Declaration public EmbedType Type { get; } Property Value Type Description EmbedType A EmbedType that represents the type of this embed. | Improve this Doc View Source Url Gets the URL of this embed. Declaration public string Url { get; } Property Value Type Description System.String A langword_csharp_string that represents the URL of this embed. Implements IEmbed"
  },
  "api/KaiHeiLa.LoginState.html": {
    "href": "api/KaiHeiLa.LoginState.html",
    "title": "Enum LoginState | KaiHeiLa.Net 文档",
    "keywords": "Enum LoginState Specifies the state of the client's login status. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum LoginState : byte Fields Name Description LoggedIn The client is currently logged in. LoggedOut The client is currently logged out. LoggingIn The client is currently logging in. LoggingOut The client is currently logging out."
  },
  "api/KaiHeiLa.LogMessage.html": {
    "href": "api/KaiHeiLa.LogMessage.html",
    "title": "Struct LogMessage | KaiHeiLa.Net 文档",
    "keywords": "Struct LogMessage Provides a message object used for logging purposes. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct LogMessage Constructors | Improve this Doc View Source LogMessage(LogSeverity, String, String, Exception) Initializes a new LogMessage struct with the severity, source, message of the event, and optionally, an exception. Declaration public LogMessage(LogSeverity severity, string source, string message, Exception exception = null) Parameters Type Name Description LogSeverity severity The severity of the event. System.String source The source of the event. System.String message The message of the event. Exception exception The exception of the event. Properties | Improve this Doc View Source Exception Gets the exception of this log entry. Declaration public Exception Exception { get; } Property Value Type Description Exception A Exception object associated with an incident; otherwise null . | Improve this Doc View Source Message Gets the message of this log entry. Declaration public string Message { get; } Property Value Type Description System.String A string containing the message of this log entry. | Improve this Doc View Source Severity Gets the severity of the log entry. Declaration public LogSeverity Severity { get; } Property Value Type Description LogSeverity A LogSeverity enum to indicate the severeness of the incident or event. | Improve this Doc View Source Source Gets the source of the log entry. Declaration public string Source { get; } Property Value Type Description System.String A string representing the source of the log entry. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String | Improve this Doc View Source ToString(StringBuilder, Boolean, Boolean, DateTimeKind, Nullable<Int32>) Declaration public string ToString(StringBuilder builder = null, bool fullException = true, bool prependTimestamp = true, DateTimeKind timestampKind = null, int? padSource) Parameters Type Name Description StringBuilder builder System.Boolean fullException System.Boolean prependTimestamp DateTimeKind timestampKind System.Nullable < System.Int32 > padSource Returns Type Description System.String"
  },
  "api/KaiHeiLa.LogSeverity.html": {
    "href": "api/KaiHeiLa.LogSeverity.html",
    "title": "Enum LogSeverity | KaiHeiLa.Net 文档",
    "keywords": "Enum LogSeverity Specifies the severity of the log message. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum LogSeverity : int Fields Name Description Critical Logs that contain the most severe level of error. This type of error indicate that immediate attention may be required. Debug Logs that contain the most detailed messages. Error Logs that highlight when the flow of execution is stopped due to a failure. Info Logs that track the general flow of the application. Verbose Logs that are used for interactive investigation during development. Warning Logs that highlight an abnormal activity in the flow of execution."
  },
  "api/KaiHeiLa.MentionUtils.html": {
    "href": "api/KaiHeiLa.MentionUtils.html",
    "title": "Class MentionUtils | KaiHeiLa.Net 文档",
    "keywords": "Class MentionUtils Provides a series of helper methods for parsing mentions. Inheritance System.Object MentionUtils Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public static class MentionUtils : object Methods | Improve this Doc View Source KMarkdownMentionChannel(UInt64) Returns a KMarkdown formatted mention string based on the channel ID. Declaration public static string KMarkdownMentionChannel(ulong id) Parameters Type Name Description System.UInt64 id Returns Type Description System.String A channel mention string formatted to KMarkdown. | Improve this Doc View Source KMarkdownMentionRole(UInt32) Returns a KMarkdown formatted mention string based on the role ID. Declaration public static string KMarkdownMentionRole(uint id) Parameters Type Name Description System.UInt32 id Returns Type Description System.String A role mention string formatted to KMarkdown. | Improve this Doc View Source KMarkdownMentionUser(UInt64) Returns a KMarkdown formatted mention string based on the user ID. Declaration public static string KMarkdownMentionUser(ulong id) Parameters Type Name Description System.UInt64 id Returns Type Description System.String A user mention string formatted to KMarkdown. | Improve this Doc View Source ParseChannel(String, TagMode) Parses a provided channel mention string. Declaration public static ulong ParseChannel(string text, TagMode tagMode) Parameters Type Name Description System.String text TagMode tagMode Returns Type Description System.UInt64 | Improve this Doc View Source ParseRole(String, TagMode) Parses a provided role mention string. Declaration public static ulong ParseRole(string text, TagMode tagMode) Parameters Type Name Description System.String text TagMode tagMode Returns Type Description System.UInt64 | Improve this Doc View Source ParseUser(String, TagMode) Parses a provided user mention string. Declaration public static ulong ParseUser(string text, TagMode tagMode) Parameters Type Name Description System.String text The user mention. TagMode tagMode Returns Type Description System.UInt64 | Improve this Doc View Source PlainTextMentionChannel(UInt64) Returns a plain text formatted mention string based on the channel ID. Declaration public static string PlainTextMentionChannel(ulong id) Parameters Type Name Description System.UInt64 id Returns Type Description System.String A channel mention string formatted to plain text. | Improve this Doc View Source PlainTextMentionRole(UInt32) Returns a plain text formatted mention string based on the role ID. Declaration public static string PlainTextMentionRole(uint id) Parameters Type Name Description System.UInt32 id Returns Type Description System.String A role mention string formatted to plain text. | Improve this Doc View Source PlainTextMentionUser(String, UInt64) Returns a plain text formatted mention string based on the user ID. Declaration public static string PlainTextMentionUser(string username, ulong id) Parameters Type Name Description System.String username System.UInt64 id Returns Type Description System.String A user mention string formatted to plain text. | Improve this Doc View Source TryParseChannel(String, out UInt64, TagMode) Tries to parse a provided channel mention string. Declaration public static bool TryParseChannel(string text, out ulong channelId, TagMode tagMode) Parameters Type Name Description System.String text System.UInt64 channelId TagMode tagMode Returns Type Description System.Boolean | Improve this Doc View Source TryParseRole(String, out UInt32, TagMode) Tries to parse a provided role mention string. Declaration public static bool TryParseRole(string text, out uint roleId, TagMode tagMode) Parameters Type Name Description System.String text System.UInt32 roleId TagMode tagMode Returns Type Description System.Boolean | Improve this Doc View Source TryParseUser(String, out UInt64, TagMode) Tries to parse a provided user mention string. Declaration public static bool TryParseUser(string text, out ulong userId, TagMode tagMode) Parameters Type Name Description System.String text The user mention. System.UInt64 userId The UserId of the user. TagMode tagMode Parse as PlainText or KMarkdown. Returns Type Description System.Boolean"
  },
  "api/KaiHeiLa.MessageExtensions.html": {
    "href": "api/KaiHeiLa.MessageExtensions.html",
    "title": "Class MessageExtensions | KaiHeiLa.Net 文档",
    "keywords": "Class MessageExtensions Provides extension methods for IMessage . Inheritance System.Object MessageExtensions Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public static class MessageExtensions : object Methods | Improve this Doc View Source AddReactionsAsync(IUserMessage, IEnumerable<IEmote>, RequestOptions) Add multiple reactions to a message. Declaration public static Task AddReactionsAsync(this IUserMessage msg, IEnumerable<IEmote> reactions, RequestOptions options = null) Parameters Type Name Description IUserMessage msg The message to add reactions to. IEnumerable < IEmote > reactions An array of reactions to add to the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for adding a reaction to this message. Remarks This method does not bulk add reactions! It will send a request for each reaction included. Examples IEmote A = new Emoji(\"🅰\"); IEmote B = new Emoji(\"🅱\"); await msg.AddReactionsAsync(new[] { A, B }); See Also AddReactionAsync ( IEmote , RequestOptions ) IEmote | Improve this Doc View Source GetJumpUrl(IMessage) Gets a URL that jumps to the message. Declaration public static string GetJumpUrl(this IMessage msg) Parameters Type Name Description IMessage msg The message to jump to. Returns Type Description System.String A string that contains a URL for jumping to the message in chat. | Improve this Doc View Source RemoveReactionsAsync(IUserMessage, IUser, IEnumerable<IEmote>, RequestOptions) Remove multiple reactions from a message. Declaration public static Task RemoveReactionsAsync(this IUserMessage msg, IUser user, IEnumerable<IEmote> reactions, RequestOptions options = null) Parameters Type Name Description IUserMessage msg The message to remove reactions from. IUser user The user who removed the reaction. IEnumerable < IEmote > reactions An array of reactions to remove from the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for removing a reaction to this message. Remarks This method does not bulk remove reactions! It will send a request for each reaction included. Examples await msg.RemoveReactionsAsync(currentUser, new[] { A, B }); See Also RemoveReactionAsync ( IEmote , IUser , RequestOptions ) IEmote | Improve this Doc View Source ReplyCardsAsync(IUserMessage, IEnumerable<ICard>, Boolean, Boolean, RequestOptions) Sends a card message to the source channel. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyCardsAsync(this IUserMessage message, IEnumerable<ICard> cards, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. IEnumerable < ICard > cards The cards to be sent. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyCardsAsync(IUserMessage, ICard, Boolean, Boolean, RequestOptions) Sends a card message to the source channel. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyCardsAsync(this IUserMessage message, ICard card, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. ICard card The card to be sent. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyFileAsync(IUserMessage, Stream, String, Boolean, Boolean, RequestOptions) Sends an inline reply of file that references a message. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyFileAsync(this IUserMessage message, Stream stream, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. Stream stream Stream of the file to be sent. System.String fileName The name of the file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyFileAsync(IUserMessage, String, String, Boolean, Boolean, RequestOptions) Sends an inline reply of file that references a message. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyFileAsync(this IUserMessage message, string path, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. System.String path The file path of the file. System.String fileName The name of the file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyImageAsync(IUserMessage, Stream, String, Boolean, Boolean, RequestOptions) Sends an inline reply of image that references a message. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyImageAsync(this IUserMessage message, Stream stream, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. Stream stream Stream of the image file to be sent. System.String fileName The name of the image file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyImageAsync(IUserMessage, String, String, Boolean, Boolean, RequestOptions) Sends an inline reply of image that references a message. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyImageAsync(this IUserMessage message, string path, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. System.String path The file path of the image file. System.String fileName The name of the image file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyKMarkdownAsync(IUserMessage, String, Boolean, Boolean, RequestOptions) Sends an inline reply of KMarkdown that references a message. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyKMarkdownAsync(this IUserMessage message, string content, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. System.String content Contents of the message. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyTextAsync(IUserMessage, String, Boolean, Boolean, RequestOptions) Sends an inline reply of plain text that references a message. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyTextAsync(this IUserMessage message, string text, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. System.String text The message to be sent. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyVideoAsync(IUserMessage, Stream, String, Boolean, Boolean, RequestOptions) Sends an inline reply of video that references a message. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyVideoAsync(this IUserMessage message, Stream stream, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. Stream stream Stream of the video file to be sent. System.String fileName The name of the video file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyVideoAsync(IUserMessage, String, String, Boolean, Boolean, RequestOptions) Sends an inline reply of video that references a message. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyVideoAsync(this IUserMessage message, string path, string fileName = null, bool isQuote = false, bool isEphemeral = false, RequestOptions options = null) Parameters Type Name Description IUserMessage message The message that is being replied on. System.String path The file path of the video file. System.String fileName The name of the video file. System.Boolean isQuote true if the source message will be quoted in this message; otherwise, false . System.Boolean isEphemeral true if the message to be sent can be seen only by the command invoker; otherwise, false . RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >>"
  },
  "api/KaiHeiLa.MessageProperties.html": {
    "href": "api/KaiHeiLa.MessageProperties.html",
    "title": "Class MessageProperties | KaiHeiLa.Net 文档",
    "keywords": "Class MessageProperties Properties that are used to modify an IUserMessage with the specified changes. Inheritance System.Object MessageProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class MessageProperties : object Properties | Improve this Doc View Source Cards Gets or sets the cards of the message. Declaration public List<Card> Cards { get; set; } Property Value Type Description List < Card > | Improve this Doc View Source Content Gets or sets the content of the message. Declaration public string Content { get; set; } Property Value Type Description System.String Remarks This must be less than the constant defined by MaxMessageSize . | Improve this Doc View Source EphemeralUser Gets or sets the only user that can see this message. Declaration public IUser EphemeralUser { get; set; } Property Value Type Description IUser | Improve this Doc View Source Quote Gets or sets the quote of the message. Declaration public IQuote Quote { get; set; } Property Value Type Description IQuote See Also ModifyAsync(Action<MessageProperties>, RequestOptions)"
  },
  "api/KaiHeiLa.MessageSource.html": {
    "href": "api/KaiHeiLa.MessageSource.html",
    "title": "Enum MessageSource | KaiHeiLa.Net 文档",
    "keywords": "Enum MessageSource Specifies the source of the KaiHeiLa message. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum MessageSource : int Fields Name Description Bot The message is sent by a bot. System The message is sent by the system. User The message is sent by a user."
  },
  "api/KaiHeiLa.MessageType.html": {
    "href": "api/KaiHeiLa.MessageType.html",
    "title": "Enum MessageType | KaiHeiLa.Net 文档",
    "keywords": "Enum MessageType Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum MessageType : int Fields Name Description Audio 音频消息 Card 卡片消息 File 文件消息 Image 图片消息 KMarkdown KMarkdown消息 System 系统消息 Text 文字消息 Video 视频消息"
  },
  "api/KaiHeiLa.ModifyGuildChannelProperties.html": {
    "href": "api/KaiHeiLa.ModifyGuildChannelProperties.html",
    "title": "Class ModifyGuildChannelProperties | KaiHeiLa.Net 文档",
    "keywords": "Class ModifyGuildChannelProperties Properties that are used to modify an IGuildChannel with the specified properties. Inheritance System.Object ModifyGuildChannelProperties ModifyTextChannelProperties ModifyVoiceChannelProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ModifyGuildChannelProperties : object Properties | Improve this Doc View Source CategoryId Gets or sets the category ID for this channel. Declaration public ulong? CategoryId { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Remarks Setting this value to a category's identifier will change this channel's parent to the specified channel; setting this value to 0 will detach this channel from its parent if one is set; if this is null , the parent of this channel will not be modified. | Improve this Doc View Source Name Gets or sets the channel to this name to be modified. Declaration public string Name { get; set; } Property Value Type Description System.String Remarks This property defines the new name for this channel; if this is null , the name will not be modified. | Improve this Doc View Source Position Moves the channel to the following position. This property is one-based. Declaration public int? Position { get; set; } Property Value Type Description System.Nullable < System.Int32 > Remarks If this is null , the position will not be modified."
  },
  "api/KaiHeiLa.ModifyTextChannelProperties.html": {
    "href": "api/KaiHeiLa.ModifyTextChannelProperties.html",
    "title": "Class ModifyTextChannelProperties | KaiHeiLa.Net 文档",
    "keywords": "Class ModifyTextChannelProperties Provides properties that are used to modify an ITextChannel with the specified properties. Inheritance System.Object ModifyGuildChannelProperties ModifyTextChannelProperties Inherited Members ModifyGuildChannelProperties.Name ModifyGuildChannelProperties.Position ModifyGuildChannelProperties.CategoryId Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ModifyTextChannelProperties : ModifyGuildChannelProperties Properties | Improve this Doc View Source SlowModeInterval Gets or sets the slow-mode ratelimit in seconds for this channel. Declaration public int? SlowModeInterval { get; set; } Property Value Type Description System.Nullable < System.Int32 > Remarks Setting this value to anything above zero will require each user to wait X seconds before sending another message; setting this value to 0 will disable slow-mode for this channel; if this value is set to null , the slow-mode interval will not be modified. note Users with ManageMessages or ManageChannels will be exempt from slow-mode. | Improve this Doc View Source Topic Gets or sets the topic of the channel. Declaration public string Topic { get; set; } Property Value Type Description System.String Remarks Setting this value to any string other than null or will set the channel topic or description to the desired value."
  },
  "api/KaiHeiLa.ModifyVoiceChannelProperties.html": {
    "href": "api/KaiHeiLa.ModifyVoiceChannelProperties.html",
    "title": "Class ModifyVoiceChannelProperties | KaiHeiLa.Net 文档",
    "keywords": "Class ModifyVoiceChannelProperties Provides properties that are used to modify an IVoiceChannel with the specified properties. Inheritance System.Object ModifyGuildChannelProperties ModifyVoiceChannelProperties Inherited Members ModifyGuildChannelProperties.Name ModifyGuildChannelProperties.Position ModifyGuildChannelProperties.CategoryId Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ModifyVoiceChannelProperties : ModifyGuildChannelProperties Properties | Improve this Doc View Source UserLimit Gets or sets the maximum number of users that can be present in a channel, or 0 if none; null if not set. Declaration public int? UserLimit { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source VoiceQuality Gets or sets the voice quality that the clients in this voice channel are requested to use; null if not set. Declaration public VoiceQuality? VoiceQuality { get; set; } Property Value Type Description System.Nullable < VoiceQuality > Remarks warning This property cannot be set to the quality equivalent or higher than _128kbps via KaiHeiLa REST API because of the server-side limitation despite of the fact that the voice channel exists in a boosted guild."
  },
  "api/KaiHeiLa.ModuleType.html": {
    "href": "api/KaiHeiLa.ModuleType.html",
    "title": "Enum ModuleType | KaiHeiLa.Net 文档",
    "keywords": "Enum ModuleType Specifies the type of an IModule . Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum ModuleType : int Fields Name Description ActionGroup An ActionGroupModule . Audio An AudioModule . Container A ContainerModule . Context A ContextModule . Countdown A CountdownModule . Divider A DividerModule . File A FileModule . Header A HeaderModule . ImageGroup An ImageGroupModule . Invite An InviteModule . Section A SectionModule . Video A VideoModule ."
  },
  "api/KaiHeiLa.Music.html": {
    "href": "api/KaiHeiLa.Music.html",
    "title": "Class Music | KaiHeiLa.Net 文档",
    "keywords": "Class Music Inheritance System.Object Music Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class Music : object Properties | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Provider Declaration public MusicProvider Provider { get; set; } Property Value Type Description MusicProvider | Improve this Doc View Source Singer Declaration public string Singer { get; set; } Property Value Type Description System.String"
  },
  "api/KaiHeiLa.MusicProvider.html": {
    "href": "api/KaiHeiLa.MusicProvider.html",
    "title": "Enum MusicProvider | KaiHeiLa.Net 文档",
    "keywords": "Enum MusicProvider Specifies the provider of music. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum MusicProvider : int Fields Name Description KuGouMusic Specifies that the music provider is KuGou. NetEaseCloudMusic Specifies that the music provider is NetEase. TencentMusic Specifies that the music provider is QQ. Unspecified Specifies that the music provider is unspecified."
  },
  "api/KaiHeiLa.Net.BucketId.html": {
    "href": "api/KaiHeiLa.Net.BucketId.html",
    "title": "Class BucketId | KaiHeiLa.Net 文档",
    "keywords": "Class BucketId Represents a ratelimit bucket. Inheritance System.Object BucketId Namespace : KaiHeiLa.Net Assembly : KaiHeiLa.Net.Core.dll Syntax public class BucketId : IEquatable<BucketId> Properties | Improve this Doc View Source BucketHash Gets the hash of this bucket. Declaration public string BucketHash { get; } Property Value Type Description System.String Remarks The hash is provided by KaiHeiLa to group ratelimits. | Improve this Doc View Source Endpoint Gets the endpoint that is going to be requested if available. Declaration public string Endpoint { get; } Property Value Type Description System.String | Improve this Doc View Source HttpMethod Gets the http method used to make the request if available. Declaration public HttpMethod HttpMethod { get; } Property Value Type Description HttpMethod | Improve this Doc View Source IsHashBucket Gets if this bucket is a hash type. Declaration public bool IsHashBucket { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MajorParameters Gets the major parameters of the route. Declaration public IOrderedEnumerable<KeyValuePair<string, string>> MajorParameters { get; } Property Value Type Description IOrderedEnumerable < KeyValuePair < System.String , System.String >> Methods | Improve this Doc View Source Create(HttpMethod, String, Dictionary<String, String>) Creates a new BucketId based on the HttpMethod and Endpoint . Declaration public static BucketId Create(HttpMethod httpMethod, string endpoint, Dictionary<string, string> majorParams) Parameters Type Name Description HttpMethod httpMethod Http method used to make the request. System.String endpoint Endpoint that is going to receive requests. Dictionary < System.String , System.String > majorParams Major parameters of the route of this endpoint. Returns Type Description BucketId A BucketId based on the HttpMethod and the Endpoint with the provided data. | Improve this Doc View Source Create(String, BucketId) Creates a new BucketId based on a BucketHash and a previous BucketId . Declaration public static BucketId Create(string hash, BucketId oldBucket) Parameters Type Name Description System.String hash Bucket hash provided by KaiHeiLa. BucketId oldBucket BucketId that is going to be upgraded to a hash type. Returns Type Description BucketId A BucketId based on the BucketHash and MajorParameters . | Improve this Doc View Source Equals(BucketId) Declaration public bool Equals(BucketId other) Parameters Type Name Description BucketId other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetBucketHash() Gets the string that will define this bucket as a hash based one. Declaration public string GetBucketHash() Returns Type Description System.String A string that defines this bucket as a hash based one. | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source GetUniqueEndpoint() Gets the string that will define this bucket as an endpoint based one. Declaration public string GetUniqueEndpoint() Returns Type Description System.String A string that defines this bucket as an endpoint based one. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/KaiHeiLa.Net.html": {
    "href": "api/KaiHeiLa.Net.html",
    "title": "Namespace KaiHeiLa.Net | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.Net Classes BucketId Represents a ratelimit bucket. HttpException The exception that is thrown if an error occurs while processing an KaiHeiLa HTTP request. RateLimitedException The exception that is thrown when the user is being rate limited by KaiHeiLa. WebSocketClosedException The exception that is thrown when the WebSocket session is closed by KaiHeiLa. Structs RateLimitInfo Represents a REST-Based ratelimit info. Interfaces IRequest Represents a generic request to be sent to KaiHeiLa."
  },
  "api/KaiHeiLa.Net.HttpException.html": {
    "href": "api/KaiHeiLa.Net.HttpException.html",
    "title": "Class HttpException | KaiHeiLa.Net 文档",
    "keywords": "Class HttpException The exception that is thrown if an error occurs while processing an KaiHeiLa HTTP request. Inheritance System.Object HttpException Namespace : KaiHeiLa.Net Assembly : KaiHeiLa.Net.Core.dll Syntax public class HttpException : Exception Constructors | Improve this Doc View Source HttpException(HttpStatusCode, IRequest, Nullable<KaiHeiLaErrorCode>, String, KaiHeiLaJsonError[]) Initializes a new instance of the HttpException class. Declaration public HttpException(HttpStatusCode httpCode, IRequest request, KaiHeiLaErrorCode? kaiHeiLaCode = null, string reason = null, KaiHeiLaJsonError[] errors = null) Parameters Type Name Description HttpStatusCode httpCode The HTTP status code returned. IRequest request The request that was sent prior to the exception. System.Nullable < KaiHeiLaErrorCode > kaiHeiLaCode The KaiHeiLa status code returned. System.String reason The reason behind the exception. KaiHeiLaJsonError [] errors Properties | Improve this Doc View Source Errors Gets a collection of json errors describing what went wrong with the request. Declaration public IReadOnlyCollection<KaiHeiLaJsonError> Errors { get; } Property Value Type Description IReadOnlyCollection < KaiHeiLaJsonError > | Improve this Doc View Source HttpCode Gets the HTTP status code returned by KaiHeiLa. Declaration public HttpStatusCode HttpCode { get; } Property Value Type Description HttpStatusCode An HTTP status code from KaiHeiLa. | Improve this Doc View Source KaiHeiLaCode Gets the JSON error code returned by KaiHeiLa. Declaration public KaiHeiLaErrorCode? KaiHeiLaCode { get; } Property Value Type Description System.Nullable < KaiHeiLaErrorCode > A JSON error code from KaiHeiLa, or null if none. | Improve this Doc View Source Reason Gets the reason of the exception. Declaration public string Reason { get; } Property Value Type Description System.String | Improve this Doc View Source Request Gets the request object used to send the request. Declaration public IRequest Request { get; } Property Value Type Description IRequest"
  },
  "api/KaiHeiLa.Net.IRequest.html": {
    "href": "api/KaiHeiLa.Net.IRequest.html",
    "title": "Interface IRequest | KaiHeiLa.Net 文档",
    "keywords": "Interface IRequest Represents a generic request to be sent to KaiHeiLa. Namespace : KaiHeiLa.Net Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IRequest Properties | Improve this Doc View Source Options Declaration RequestOptions Options { get; } Property Value Type Description RequestOptions | Improve this Doc View Source TimeoutAt Declaration DateTimeOffset? TimeoutAt { get; } Property Value Type Description System.Nullable < DateTimeOffset >"
  },
  "api/KaiHeiLa.Net.RateLimitedException.html": {
    "href": "api/KaiHeiLa.Net.RateLimitedException.html",
    "title": "Class RateLimitedException | KaiHeiLa.Net 文档",
    "keywords": "Class RateLimitedException The exception that is thrown when the user is being rate limited by KaiHeiLa. Inheritance System.Object RateLimitedException Namespace : KaiHeiLa.Net Assembly : KaiHeiLa.Net.Core.dll Syntax public class RateLimitedException : TimeoutException Constructors | Improve this Doc View Source RateLimitedException(IRequest) Initializes a new instance of the RateLimitedException class using the request sent. Declaration public RateLimitedException(IRequest request) Parameters Type Name Description IRequest request Properties | Improve this Doc View Source Request Gets the request object used to send the request. Declaration public IRequest Request { get; } Property Value Type Description IRequest"
  },
  "api/KaiHeiLa.Net.RateLimitInfo.html": {
    "href": "api/KaiHeiLa.Net.RateLimitInfo.html",
    "title": "Struct RateLimitInfo | KaiHeiLa.Net 文档",
    "keywords": "Struct RateLimitInfo Represents a REST-Based ratelimit info. Implements IRateLimitInfo Namespace : KaiHeiLa.Net Assembly : KaiHeiLa.Net.Rest.dll Syntax public struct RateLimitInfo : IRateLimitInfo Properties | Improve this Doc View Source Bucket Declaration public string Bucket { get; } Property Value Type Description System.String | Improve this Doc View Source Endpoint Declaration public string Endpoint { get; } Property Value Type Description System.String | Improve this Doc View Source IsGlobal Declaration public bool IsGlobal { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Lag Declaration public TimeSpan? Lag { get; } Property Value Type Description System.Nullable < TimeSpan > | Improve this Doc View Source Limit Declaration public int? Limit { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Remaining Declaration public int? Remaining { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ResetAfter Declaration public TimeSpan? ResetAfter { get; } Property Value Type Description System.Nullable < TimeSpan > Implements IRateLimitInfo"
  },
  "api/KaiHeiLa.Net.Rest.DefaultRestClientProvider.html": {
    "href": "api/KaiHeiLa.Net.Rest.DefaultRestClientProvider.html",
    "title": "Class DefaultRestClientProvider | KaiHeiLa.Net 文档",
    "keywords": "Class DefaultRestClientProvider Inheritance System.Object DefaultRestClientProvider Namespace : KaiHeiLa.Net.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public static class DefaultRestClientProvider : object Fields | Improve this Doc View Source Instance Declaration public static readonly RestClientProvider Instance Field Value Type Description RestClientProvider Methods | Improve this Doc View Source Create(Boolean) Declaration public static RestClientProvider Create(bool useProxy = false) Parameters Type Name Description System.Boolean useProxy Returns Type Description RestClientProvider"
  },
  "api/KaiHeiLa.Net.Rest.html": {
    "href": "api/KaiHeiLa.Net.Rest.html",
    "title": "Namespace KaiHeiLa.Net.Rest | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.Net.Rest Classes DefaultRestClientProvider Structs RestResponse Interfaces IRestClient Represents a generic REST-based client. Delegates RestClientProvider"
  },
  "api/KaiHeiLa.Net.Rest.IRestClient.html": {
    "href": "api/KaiHeiLa.Net.Rest.IRestClient.html",
    "title": "Interface IRestClient | KaiHeiLa.Net 文档",
    "keywords": "Interface IRestClient Represents a generic REST-based client. Namespace : KaiHeiLa.Net.Rest Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IRestClient : IDisposable Methods | Improve this Doc View Source SendAsync(HttpMethod, String, CancellationToken, Boolean, String) Sends a REST request. Declaration Task<RestResponse> SendAsync(HttpMethod method, string endpoint, CancellationToken cancelToken, bool headerOnly = false, string reason = null) Parameters Type Name Description HttpMethod method The method used to send this request (i.e. HTTP verb such as GET , POST ). System.String endpoint The endpoint to send this request to. CancellationToken cancelToken The cancellation token used to cancel the task. System.Boolean headerOnly Indicates whether to send the header only. System.String reason The audit log reason. Returns Type Description Task < RestResponse > | Improve this Doc View Source SendAsync(HttpMethod, String, IReadOnlyDictionary<String, Object>, CancellationToken, Boolean, String) Declaration Task<RestResponse> SendAsync(HttpMethod method, string endpoint, IReadOnlyDictionary<string, object> multipartParams, CancellationToken cancelToken, bool headerOnly = false, string reason = null) Parameters Type Name Description HttpMethod method System.String endpoint IReadOnlyDictionary < System.String , System.Object > multipartParams CancellationToken cancelToken System.Boolean headerOnly System.String reason Returns Type Description Task < RestResponse > | Improve this Doc View Source SendAsync(HttpMethod, String, String, CancellationToken, Boolean, String) Declaration Task<RestResponse> SendAsync(HttpMethod method, string endpoint, string json, CancellationToken cancelToken, bool headerOnly = false, string reason = null) Parameters Type Name Description HttpMethod method System.String endpoint System.String json CancellationToken cancelToken System.Boolean headerOnly System.String reason Returns Type Description Task < RestResponse > | Improve this Doc View Source SetCancelToken(CancellationToken) Sets the cancellation token for this client. Declaration void SetCancelToken(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken The cancellation token. | Improve this Doc View Source SetHeader(String, String) Sets the HTTP header of this client for all requests. Declaration void SetHeader(string key, string value) Parameters Type Name Description System.String key The field name of the header. System.String value The value of the header."
  },
  "api/KaiHeiLa.Net.Rest.RestClientProvider.html": {
    "href": "api/KaiHeiLa.Net.Rest.RestClientProvider.html",
    "title": "Delegate RestClientProvider | KaiHeiLa.Net 文档",
    "keywords": "Delegate RestClientProvider Namespace : KaiHeiLa.Net.Rest Assembly : KaiHeiLa.Net.Core.dll Syntax public delegate IRestClient RestClientProvider(string baseUrl); Parameters Type Name Description System.String baseUrl Returns Type Description IRestClient"
  },
  "api/KaiHeiLa.Net.Rest.RestResponse.html": {
    "href": "api/KaiHeiLa.Net.Rest.RestResponse.html",
    "title": "Struct RestResponse | KaiHeiLa.Net 文档",
    "keywords": "Struct RestResponse Namespace : KaiHeiLa.Net.Rest Assembly : KaiHeiLa.Net.Core.dll Syntax public struct RestResponse Constructors | Improve this Doc View Source RestResponse(HttpStatusCode, Dictionary<String, String>, Stream, MediaTypeHeaderValue) Declaration public RestResponse(HttpStatusCode statusCode, Dictionary<string, string> headers, Stream stream, MediaTypeHeaderValue mediaTypeHeader) Parameters Type Name Description HttpStatusCode statusCode Dictionary < System.String , System.String > headers Stream stream MediaTypeHeaderValue mediaTypeHeader Properties | Improve this Doc View Source Headers Declaration public Dictionary<string, string> Headers { get; } Property Value Type Description Dictionary < System.String , System.String > | Improve this Doc View Source MediaTypeHeader Declaration public MediaTypeHeaderValue MediaTypeHeader { get; } Property Value Type Description MediaTypeHeaderValue | Improve this Doc View Source StatusCode Declaration public HttpStatusCode StatusCode { get; } Property Value Type Description HttpStatusCode | Improve this Doc View Source Stream Declaration public Stream Stream { get; } Property Value Type Description Stream"
  },
  "api/KaiHeiLa.Net.Udp.DefaultUdpSocketProvider.html": {
    "href": "api/KaiHeiLa.Net.Udp.DefaultUdpSocketProvider.html",
    "title": "Class DefaultUdpSocketProvider | KaiHeiLa.Net 文档",
    "keywords": "Class DefaultUdpSocketProvider Inheritance System.Object DefaultUdpSocketProvider Namespace : KaiHeiLa.Net.Udp Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public static class DefaultUdpSocketProvider : object Fields | Improve this Doc View Source Instance Declaration public static readonly UdpSocketProvider Instance Field Value Type Description UdpSocketProvider"
  },
  "api/KaiHeiLa.Net.Udp.html": {
    "href": "api/KaiHeiLa.Net.Udp.html",
    "title": "Namespace KaiHeiLa.Net.Udp | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.Net.Udp Classes DefaultUdpSocketProvider Interfaces IUdpSocket Delegates UdpSocketProvider"
  },
  "api/KaiHeiLa.Net.Udp.IUdpSocket.html": {
    "href": "api/KaiHeiLa.Net.Udp.IUdpSocket.html",
    "title": "Interface IUdpSocket | KaiHeiLa.Net 文档",
    "keywords": "Interface IUdpSocket Namespace : KaiHeiLa.Net.Udp Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IUdpSocket : IDisposable Properties | Improve this Doc View Source Port Declaration ushort Port { get; } Property Value Type Description System.UInt16 Methods | Improve this Doc View Source SendAsync(Byte[], Int32, Int32) Declaration Task SendAsync(byte[] data, int index, int count) Parameters Type Name Description System.Byte [] data System.Int32 index System.Int32 count Returns Type Description Task | Improve this Doc View Source SetCancelToken(CancellationToken) Declaration void SetCancelToken(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken | Improve this Doc View Source SetDestination(String, Int32) Declaration void SetDestination(string ip, int port) Parameters Type Name Description System.String ip System.Int32 port | Improve this Doc View Source StartAsync() Declaration Task StartAsync() Returns Type Description Task | Improve this Doc View Source StopAsync() Declaration Task StopAsync() Returns Type Description Task Events | Improve this Doc View Source ReceivedDatagram Declaration event Func<byte[], int, int, Task> ReceivedDatagram Event Type Type Description Func < System.Byte [], System.Int32 , System.Int32 , Task >"
  },
  "api/KaiHeiLa.Net.Udp.UdpSocketProvider.html": {
    "href": "api/KaiHeiLa.Net.Udp.UdpSocketProvider.html",
    "title": "Delegate UdpSocketProvider | KaiHeiLa.Net 文档",
    "keywords": "Delegate UdpSocketProvider Namespace : KaiHeiLa.Net.Udp Assembly : KaiHeiLa.Net.Core.dll Syntax public delegate IUdpSocket UdpSocketProvider(); Returns Type Description IUdpSocket"
  },
  "api/KaiHeiLa.Net.WebSocketClosedException.html": {
    "href": "api/KaiHeiLa.Net.WebSocketClosedException.html",
    "title": "Class WebSocketClosedException | KaiHeiLa.Net 文档",
    "keywords": "Class WebSocketClosedException The exception that is thrown when the WebSocket session is closed by KaiHeiLa. Inheritance System.Object WebSocketClosedException Namespace : KaiHeiLa.Net Assembly : KaiHeiLa.Net.Core.dll Syntax public class WebSocketClosedException : Exception Constructors | Improve this Doc View Source WebSocketClosedException(Int32, String) Initializes a new instance of the WebSocketClosedException using a KaiHeiLa close code and an optional reason. Declaration public WebSocketClosedException(int closeCode, string reason = null) Parameters Type Name Description System.Int32 closeCode System.String reason Properties | Improve this Doc View Source CloseCode Gets the close code sent by KaiHeiLa. Declaration public int CloseCode { get; } Property Value Type Description System.Int32 A close code from KaiHeiLa. | Improve this Doc View Source Reason Gets the reason of the interruption. Declaration public string Reason { get; } Property Value Type Description System.String"
  },
  "api/KaiHeiLa.Net.WebSockets.DefaultWebSocketProvider.html": {
    "href": "api/KaiHeiLa.Net.WebSockets.DefaultWebSocketProvider.html",
    "title": "Class DefaultWebSocketProvider | KaiHeiLa.Net 文档",
    "keywords": "Class DefaultWebSocketProvider Inheritance System.Object DefaultWebSocketProvider Namespace : KaiHeiLa.Net.WebSockets Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public static class DefaultWebSocketProvider : object Fields | Improve this Doc View Source Instance Declaration public static readonly WebSocketProvider Instance Field Value Type Description WebSocketProvider Methods | Improve this Doc View Source Create(IWebProxy) Declaration public static WebSocketProvider Create(IWebProxy proxy = null) Parameters Type Name Description IWebProxy proxy Returns Type Description WebSocketProvider"
  },
  "api/KaiHeiLa.Net.WebSockets.html": {
    "href": "api/KaiHeiLa.Net.WebSockets.html",
    "title": "Namespace KaiHeiLa.Net.WebSockets | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.Net.WebSockets Classes DefaultWebSocketProvider Interfaces IWebSocketClient Delegates WebSocketProvider"
  },
  "api/KaiHeiLa.Net.WebSockets.IWebSocketClient.html": {
    "href": "api/KaiHeiLa.Net.WebSockets.IWebSocketClient.html",
    "title": "Interface IWebSocketClient | KaiHeiLa.Net 文档",
    "keywords": "Interface IWebSocketClient Namespace : KaiHeiLa.Net.WebSockets Assembly : KaiHeiLa.Net.Core.dll Syntax public interface IWebSocketClient : IDisposable Methods | Improve this Doc View Source ConnectAsync(String) Declaration Task ConnectAsync(string host) Parameters Type Name Description System.String host Returns Type Description Task | Improve this Doc View Source DisconnectAsync(Int32) Declaration Task DisconnectAsync(int closeCode = 1000) Parameters Type Name Description System.Int32 closeCode Returns Type Description Task | Improve this Doc View Source SendAsync(Byte[], Int32, Int32, Boolean) Declaration Task SendAsync(byte[] data, int index, int count, bool isText) Parameters Type Name Description System.Byte [] data System.Int32 index System.Int32 count System.Boolean isText Returns Type Description Task | Improve this Doc View Source SetCancelToken(CancellationToken) Declaration void SetCancelToken(CancellationToken cancelToken) Parameters Type Name Description CancellationToken cancelToken | Improve this Doc View Source SetHeader(String, String) Declaration void SetHeader(string key, string value) Parameters Type Name Description System.String key System.String value Events | Improve this Doc View Source BinaryMessage Declaration event Func<byte[], int, int, Task> BinaryMessage Event Type Type Description Func < System.Byte [], System.Int32 , System.Int32 , Task > | Improve this Doc View Source Closed Declaration event Func<Exception, Task> Closed Event Type Type Description Func < Exception , Task > | Improve this Doc View Source TextMessage Declaration event Func<string, Task> TextMessage Event Type Type Description Func < System.String , Task >"
  },
  "api/KaiHeiLa.Net.WebSockets.WebSocketProvider.html": {
    "href": "api/KaiHeiLa.Net.WebSockets.WebSocketProvider.html",
    "title": "Delegate WebSocketProvider | KaiHeiLa.Net 文档",
    "keywords": "Delegate WebSocketProvider Namespace : KaiHeiLa.Net.WebSockets Assembly : KaiHeiLa.Net.Core.dll Syntax public delegate IWebSocketClient WebSocketProvider(); Returns Type Description IWebSocketClient"
  },
  "api/KaiHeiLa.NotifyType.html": {
    "href": "api/KaiHeiLa.NotifyType.html",
    "title": "Enum NotifyType | KaiHeiLa.Net 文档",
    "keywords": "Enum NotifyType Specifies that how the guild should notify the user. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum NotifyType : int Fields Name Description AcceptAll Notifies the user of all messages. Default Notifies the user as the default behavior of the guild. Muted ]Never notifies the user. OnlyMentioned Notifies the user of the messages which mention the user."
  },
  "api/KaiHeiLa.NotImplementedEmbed.html": {
    "href": "api/KaiHeiLa.NotImplementedEmbed.html",
    "title": "Class NotImplementedEmbed | KaiHeiLa.Net 文档",
    "keywords": "Class NotImplementedEmbed Represents a unimplemented embed. Inheritance System.Object NotImplementedEmbed Implements IEmbed Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class NotImplementedEmbed : object, IEmbed Properties | Improve this Doc View Source JsonNode Gets the raw JSON of the embed. Declaration public JsonNode JsonNode { get; } Property Value Type Description JsonNode A JsonNode representing the raw JSON of the embed. | Improve this Doc View Source RawType Gets the type of the embed. Declaration public string RawType { get; } Property Value Type Description System.String A langword_csharp_string representing the type of the embed. Remarks This value originally came from the type field of the JsonNode . | Improve this Doc View Source Type Gets the type of this embed. Declaration public EmbedType Type { get; } Property Value Type Description EmbedType A EmbedType that represents the type of this embed. | Improve this Doc View Source Url Gets the URL of this embed. Declaration public string Url { get; } Property Value Type Description System.String A langword_csharp_string that represents the URL of this embed. Methods | Improve this Doc View Source Resolve<T>(Func<NotImplementedEmbed, T>) Resolves the embed to a concrete type via delegate. Declaration public T Resolve<T>(Func<NotImplementedEmbed, T> resolvingFunc) where T : IEmbed Parameters Type Name Description Func < NotImplementedEmbed , T> resolvingFunc The resolving function to use when resolves the embed. Returns Type Description T A T representing the resolved embed. Type Parameters Name Description T The concrete type to deserialize the embed to. | Improve this Doc View Source Resolve<T>(JsonSerializerOptions) Resolves the embed to a concrete type via JSON deserialization. Declaration public T Resolve<T>(JsonSerializerOptions options = null) where T : IEmbed Parameters Type Name Description JsonSerializerOptions options The options to use when deserializing the embed. Returns Type Description T A T representing the resolved embed. Type Parameters Name Description T The concrete type to deserialize the embed to. Implements IEmbed"
  },
  "api/KaiHeiLa.Optional.html": {
    "href": "api/KaiHeiLa.Optional.html",
    "title": "Class Optional | KaiHeiLa.Net 文档",
    "keywords": "Class Optional Inheritance System.Object Optional Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public static class Optional : object Methods | Improve this Doc View Source Create<T>() Declaration public static Optional<T> Create<T>() Returns Type Description Optional <T> Type Parameters Name Description T | Improve this Doc View Source Create<T>(T) Declaration public static Optional<T> Create<T>(T value) Parameters Type Name Description T value Returns Type Description Optional <T> Type Parameters Name Description T | Improve this Doc View Source ToNullable<T>(Optional<T>) Declaration public static T? ToNullable<T>(this Optional<T> val) where T : struct Parameters Type Name Description Optional <T> val Returns Type Description System.Nullable <T> Type Parameters Name Description T"
  },
  "api/KaiHeiLa.Optional-1.html": {
    "href": "api/KaiHeiLa.Optional-1.html",
    "title": "Struct Optional<T> | KaiHeiLa.Net 文档",
    "keywords": "Struct Optional<T> Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct Optional<T> Type Parameters Name Description T Constructors | Improve this Doc View Source Optional(T) Creates a new Parameter with the provided value. Declaration public Optional(T value) Parameters Type Name Description T value Properties | Improve this Doc View Source IsSpecified Returns true if this value has been specified. Declaration public bool IsSpecified { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Unspecified Declaration public static Optional<T> Unspecified { get; } Property Value Type Description Optional <T> | Improve this Doc View Source Value Gets the value for this parameter. Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source GetValueOrDefault() Declaration public T GetValueOrDefault() Returns Type Description T | Improve this Doc View Source GetValueOrDefault(T) Declaration public T GetValueOrDefault(T defaultValue) Parameters Type Name Description T defaultValue Returns Type Description T | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Operators | Improve this Doc View Source Explicit(Optional<T> to T) Declaration public static explicit operator T(Optional<T> value) Parameters Type Name Description Optional <T> value Returns Type Description T | Improve this Doc View Source Implicit(T to Optional<T>) Declaration public static implicit operator Optional<T>(T value) Parameters Type Name Description T value Returns Type Description Optional <T>"
  },
  "api/KaiHeiLa.OverwritePermissions.html": {
    "href": "api/KaiHeiLa.OverwritePermissions.html",
    "title": "Struct OverwritePermissions | KaiHeiLa.Net 文档",
    "keywords": "Struct OverwritePermissions Represents a container for a series of overwrite permissions. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct OverwritePermissions Constructors | Improve this Doc View Source OverwritePermissions(PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue, PermValue) Initializes a new ChannelPermissions struct with the provided permissions. Declaration public OverwritePermissions(PermValue createInvites = PermValue.Inherit, PermValue manageChannels = PermValue.Inherit, PermValue manageRoles = PermValue.Inherit, PermValue viewChannel = PermValue.Inherit, PermValue sendMessages = PermValue.Inherit, PermValue manageMessages = PermValue.Inherit, PermValue attachFiles = PermValue.Inherit, PermValue connect = PermValue.Inherit, PermValue manageVoice = PermValue.Inherit, PermValue mentionEveryone = PermValue.Inherit, PermValue addReactions = PermValue.Inherit, PermValue passiveConnect = PermValue.Inherit, PermValue useVoiceActivity = PermValue.Inherit, PermValue speak = PermValue.Inherit, PermValue deafenMembers = PermValue.Inherit, PermValue muteMembers = PermValue.Inherit, PermValue playSoundtrack = PermValue.Inherit) Parameters Type Name Description PermValue createInvites PermValue manageChannels PermValue manageRoles PermValue viewChannel PermValue sendMessages PermValue manageMessages PermValue attachFiles PermValue connect PermValue manageVoice PermValue mentionEveryone PermValue addReactions PermValue passiveConnect PermValue useVoiceActivity PermValue speak PermValue deafenMembers PermValue muteMembers PermValue playSoundtrack | Improve this Doc View Source OverwritePermissions(String, String) Creates a new OverwritePermissions with the provided allow and deny packed values after converting to ulong. Declaration public OverwritePermissions(string allowValue, string denyValue) Parameters Type Name Description System.String allowValue System.String denyValue | Improve this Doc View Source OverwritePermissions(UInt64, UInt64) Creates a new OverwritePermissions with the provided allow and deny packed values. Declaration public OverwritePermissions(ulong allowValue, ulong denyValue) Parameters Type Name Description System.UInt64 allowValue System.UInt64 denyValue Properties | Improve this Doc View Source AddReactions If Allowed, a user may add reactions. Declaration public PermValue AddReactions { get; } Property Value Type Description PermValue | Improve this Doc View Source AllowValue Gets a packed value representing all the allowed permissions in this OverwritePermissions . Declaration public ulong AllowValue { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source AttachFiles If Allowed, a user may send files. Declaration public PermValue AttachFiles { get; } Property Value Type Description PermValue | Improve this Doc View Source Connect If Allowed, a user may connect to a voice channel. Declaration public PermValue Connect { get; } Property Value Type Description PermValue | Improve this Doc View Source CreateInvites If Allowed, a user may create invites. Declaration public PermValue CreateInvites { get; } Property Value Type Description PermValue | Improve this Doc View Source DeafenMembers If Allowed, a user may deafen users. Declaration public PermValue DeafenMembers { get; } Property Value Type Description PermValue | Improve this Doc View Source DenyValue Gets a packed value representing all the denied permissions in this OverwritePermissions . Declaration public ulong DenyValue { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source InheritAll Gets a blank OverwritePermissions that inherits all permissions. Declaration public static OverwritePermissions InheritAll { get; } Property Value Type Description OverwritePermissions | Improve this Doc View Source ManageChannels If Allowed, a user may create, delete and modify channels. Declaration public PermValue ManageChannels { get; } Property Value Type Description PermValue | Improve this Doc View Source ManageMessages If Allowed, a user may delete messages. Declaration public PermValue ManageMessages { get; } Property Value Type Description PermValue | Improve this Doc View Source ManageRoles If Allowed, a user may adjust roles. Declaration public PermValue ManageRoles { get; } Property Value Type Description PermValue | Improve this Doc View Source ManageVoice If Allowed, a user may kick other users from voice channels, and move other users between voice channels. Declaration public PermValue ManageVoice { get; } Property Value Type Description PermValue | Improve this Doc View Source MentionEveryone If Allowed, a user may mention all users. Declaration public PermValue MentionEveryone { get; } Property Value Type Description PermValue | Improve this Doc View Source MuteMembers If Allowed, a user may mute users. Declaration public PermValue MuteMembers { get; } Property Value Type Description PermValue | Improve this Doc View Source PassiveConnect If Allowed, a user may connect to a voice channel only when the user is invited or moved by other users. Declaration public PermValue PassiveConnect { get; } Property Value Type Description PermValue | Improve this Doc View Source PlaySoundtrack If Allowed, a user may play soundtracks in a voice channel. Declaration public PermValue PlaySoundtrack { get; } Property Value Type Description PermValue | Improve this Doc View Source SendMessages If Allowed, a user may send messages. Declaration public PermValue SendMessages { get; } Property Value Type Description PermValue | Improve this Doc View Source Speak If Allowed, a user may speak in a voice channel. Declaration public PermValue Speak { get; } Property Value Type Description PermValue | Improve this Doc View Source UseVoiceActivity If Allowed, a user may use voice activation. Declaration public PermValue UseVoiceActivity { get; } Property Value Type Description PermValue | Improve this Doc View Source ViewChannel If Allowed, a user may view channels. Declaration public PermValue ViewChannel { get; } Property Value Type Description PermValue Methods | Improve this Doc View Source AllowAll(IChannel) Gets a OverwritePermissions that grants all permissions for the given channel. Declaration public static OverwritePermissions AllowAll(IChannel channel) Parameters Type Name Description IChannel channel Returns Type Description OverwritePermissions | Improve this Doc View Source DenyAll(IChannel) Gets a OverwritePermissions that denies all permissions for the given channel. Declaration public static OverwritePermissions DenyAll(IChannel channel) Parameters Type Name Description IChannel channel Returns Type Description OverwritePermissions | Improve this Doc View Source Modify(Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>, Nullable<PermValue>) Initializes a new OverwritePermissions from the current one, changing the provided non-null permissions. Declaration public OverwritePermissions Modify(PermValue? createInvites = null, PermValue? manageChannels = null, PermValue? manageRoles = null, PermValue? viewChannel = null, PermValue? sendMessages = null, PermValue? manageMessages = null, PermValue? attachFiles = null, PermValue? connect = null, PermValue? manageVoice = null, PermValue? mentionEveryone = null, PermValue? addReactions = null, PermValue? passiveConnect = null, PermValue? useVoiceActivity = null, PermValue? speak = null, PermValue? deafenMembers = null, PermValue? muteMembers = null, PermValue? playSoundtrack = null) Parameters Type Name Description System.Nullable < PermValue > createInvites System.Nullable < PermValue > manageChannels System.Nullable < PermValue > manageRoles System.Nullable < PermValue > viewChannel System.Nullable < PermValue > sendMessages System.Nullable < PermValue > manageMessages System.Nullable < PermValue > attachFiles System.Nullable < PermValue > connect System.Nullable < PermValue > manageVoice System.Nullable < PermValue > mentionEveryone System.Nullable < PermValue > addReactions System.Nullable < PermValue > passiveConnect System.Nullable < PermValue > useVoiceActivity System.Nullable < PermValue > speak System.Nullable < PermValue > deafenMembers System.Nullable < PermValue > muteMembers System.Nullable < PermValue > playSoundtrack Returns Type Description OverwritePermissions | Improve this Doc View Source ToAllowList() Creates a of all the ChannelPermission values that are allowed. Declaration public List<ChannelPermission> ToAllowList() Returns Type Description List < ChannelPermission > A of all allowed ChannelPermission flags. If none, the list will be empty. | Improve this Doc View Source ToDenyList() Creates a of all the ChannelPermission values that are denied. Declaration public List<ChannelPermission> ToDenyList() Returns Type Description List < ChannelPermission > A of all denied ChannelPermission flags. If none, the list will be empty. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/KaiHeiLa.ParagraphStruct.html": {
    "href": "api/KaiHeiLa.ParagraphStruct.html",
    "title": "Class ParagraphStruct | KaiHeiLa.Net 文档",
    "keywords": "Class ParagraphStruct A paragraph struct that can be used in modules. Inheritance System.Object ParagraphStruct Implements IElement Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ParagraphStruct : object, IElement Properties | Improve this Doc View Source ColumnCount Gets the number of columns in the paragraph. Declaration public int ColumnCount { get; } Property Value Type Description System.Int32 An int value that represents the number of columns in the paragraph. | Improve this Doc View Source Fields Gets the fields in the paragraph. Declaration public ImmutableArray<IElement> Fields { get; } Property Value Type Description ImmutableArray < IElement > An array that contains the fields in the paragraph. | Improve this Doc View Source Type Gets the type of the element. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType value that represents the theme of the button. Implements IElement"
  },
  "api/KaiHeiLa.ParagraphStructBuilder.html": {
    "href": "api/KaiHeiLa.ParagraphStructBuilder.html",
    "title": "Class ParagraphStructBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class ParagraphStructBuilder An element builder to build a ParagraphStruct . Inheritance System.Object ParagraphStructBuilder Implements IElementBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class ParagraphStructBuilder : object, IElementBuilder Constructors | Improve this Doc View Source ParagraphStructBuilder() Initializes a new ParagraphStructBuilder class. Declaration public ParagraphStructBuilder() Fields | Improve this Doc View Source MaxColumnCount Returns the maximum number of columns allowed by KaiHeiLa. Declaration public const int MaxColumnCount = null Field Value Type Description System.Int32 | Improve this Doc View Source MaxFieldCount Returns the maximum number of fields allowed by KaiHeiLa. Declaration public const int MaxFieldCount = null Field Value Type Description System.Int32 | Improve this Doc View Source MinColumnCount Returns the minimum number of columns allowed by KaiHeiLa. Declaration public const int MinColumnCount = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source ColumnCount Gets or sets the number of columns of the paragraph. Declaration public int ColumnCount { get; set; } Property Value Type Description System.Int32 An int that represents the number of columns of the paragraph. | Improve this Doc View Source Fields Gets or sets the fields of the paragraph. Declaration public List<IElementBuilder> Fields { get; set; } Property Value Type Description List < IElementBuilder > A that represents the fields of the paragraph. | Improve this Doc View Source Type Gets the type of the element that this builder builds. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType that represents the type of element that this builder builds. Methods | Improve this Doc View Source AddField(KMarkdownElementBuilder) Adds a field to the paragraph. Declaration public ParagraphStructBuilder AddField(KMarkdownElementBuilder field) Parameters Type Name Description KMarkdownElementBuilder field A KMarkdownElementBuilder that represents the field to add. Returns Type Description ParagraphStructBuilder The current builder. | Improve this Doc View Source AddField(PlainTextElementBuilder) Adds a field to the paragraph. Declaration public ParagraphStructBuilder AddField(PlainTextElementBuilder field) Parameters Type Name Description PlainTextElementBuilder field A PlainTextElementBuilder that represents the field to add. Returns Type Description ParagraphStructBuilder The current builder. | Improve this Doc View Source AddField<T>(Action<T>) Adds a field to the paragraph. Declaration public ParagraphStructBuilder AddField<T>(Action<T> action = null) where T : IElementBuilder, new() Parameters Type Name Description Action <T> action The action to create a builder of a KMarkdownElement , which will be added to the paragraph. Returns Type Description ParagraphStructBuilder The current builder. Type Parameters Name Description T | Improve this Doc View Source Build() Builds the ParagraphStructBuilder into a ParagraphStruct . Declaration public ParagraphStruct Build() Returns Type Description ParagraphStruct A ParagraphStruct represents the built element object. | Improve this Doc View Source WithColumnCount(Int32) Sets the number of columns of the paragraph. Declaration public ParagraphStructBuilder WithColumnCount(int count) Parameters Type Name Description System.Int32 count An int that represents the number of columns of the paragraph. Returns Type Description ParagraphStructBuilder The current builder. Explicit Interface Implementations | Improve this Doc View Source IElementBuilder.Build() Builds the IElementBuilder into an IElement . Declaration IElement IElementBuilder.Build() Returns Type Description IElement An IElement represents the built element object. Implements IElementBuilder"
  },
  "api/KaiHeiLa.PermValue.html": {
    "href": "api/KaiHeiLa.PermValue.html",
    "title": "Enum PermValue | KaiHeiLa.Net 文档",
    "keywords": "Enum PermValue Specifies the permission value. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum PermValue : int Fields Name Description Allow Allows this permission. Deny Denies this permission. Inherit Inherits the permission settings."
  },
  "api/KaiHeiLa.PlainTextElement.html": {
    "href": "api/KaiHeiLa.PlainTextElement.html",
    "title": "Class PlainTextElement | KaiHeiLa.Net 文档",
    "keywords": "Class PlainTextElement A plain text element that can be used in an IModule . Inheritance System.Object PlainTextElement Implements IElement Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class PlainTextElement : object, IElement Properties | Improve this Doc View Source Content Gets the KMarkdown content of the element. Declaration public string Content { get; } Property Value Type Description System.String A string that represents the KMarkdown content of the element. | Improve this Doc View Source Emoji Gets whether the shortcuts should be translated into emojis. Declaration public bool Emoji { get; } Property Value Type Description System.Boolean A boolean value that indicates whether the shortcuts should be translated into emojis. true if the shortcuts should be translated into emojis; false if the text should be displayed as is. | Improve this Doc View Source Type Gets the type of the element. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType value that represents the theme of the button. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IElement"
  },
  "api/KaiHeiLa.PlainTextElementBuilder.html": {
    "href": "api/KaiHeiLa.PlainTextElementBuilder.html",
    "title": "Class PlainTextElementBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class PlainTextElementBuilder An element builder to build a PlainTextElement . Inheritance System.Object PlainTextElementBuilder Implements IElementBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class PlainTextElementBuilder : object, IElementBuilder Fields | Improve this Doc View Source MaxPlainTextLength Gets the maximum plain text length allowed by KaiHeiLa. Declaration public const int MaxPlainTextLength = null Field Value Type Description System.Int32 An int that represents the maximum plain text length allowed by KaiHeiLa. Properties | Improve this Doc View Source Content Gets or sets the content of a PlainTextElement . Declaration public string Content { get; set; } Property Value Type Description System.String The content of the PlainTextElement . | Improve this Doc View Source Emoji Gets whether the shortcuts should be translated into emojis. Declaration public bool Emoji { get; set; } Property Value Type Description System.Boolean A boolean value that indicates whether the shortcuts should be translated into emojis. true if the shortcuts should be translated into emojis; false if the text should be displayed as is. | Improve this Doc View Source Type Gets the type of the element that this builder builds. Declaration public ElementType Type { get; } Property Value Type Description ElementType An ElementType that represents the type of element that this builder builds. Methods | Improve this Doc View Source Build() Builds the PlainTextElementBuilder into a PlainTextElement . Declaration public PlainTextElement Build() Returns Type Description PlainTextElement A PlainTextElement represents the built element object. | Improve this Doc View Source WithContent(String) Sets the content of a PlainTextElement . Declaration public PlainTextElementBuilder WithContent(string content) Parameters Type Name Description System.String content The text to be set as the content. Returns Type Description PlainTextElementBuilder The current builder. | Improve this Doc View Source WithEmoji(Boolean) Sets whether the shortcuts should be translated into emojis. Declaration public PlainTextElementBuilder WithEmoji(bool emoji) Parameters Type Name Description System.Boolean emoji A boolean value that indicates whether the shortcuts should be translated into emojis. true if the shortcuts should be translated into emojis; false if the text should be displayed as is. Returns Type Description PlainTextElementBuilder The current builder. Operators | Improve this Doc View Source Implicit(String to PlainTextElementBuilder) Initialized a new instance of the PlainTextElementBuilder class with the specified content. Declaration public static implicit operator PlainTextElementBuilder(string content) Parameters Type Name Description System.String content The content of the PlainTextElement . Returns Type Description PlainTextElementBuilder A PlainTextElementBuilder object that is initialized with the specified content. Explicit Interface Implementations | Improve this Doc View Source IElementBuilder.Build() Builds the IElementBuilder into an IElement . Declaration IElement IElementBuilder.Build() Returns Type Description IElement An IElement represents the built element object. Implements IElementBuilder"
  },
  "api/KaiHeiLa.Preconditions.html": {
    "href": "api/KaiHeiLa.Preconditions.html",
    "title": "Class Preconditions | KaiHeiLa.Net 文档",
    "keywords": "Class Preconditions Inheritance System.Object Preconditions Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class Preconditions : object Methods | Improve this Doc View Source AtLeast(Optional<Byte>, Byte, String, String) Declaration public static void AtLeast(Optional<byte> obj, byte value, string name, string msg = null) Parameters Type Name Description Optional < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source AtLeast(Optional<Int16>, Int16, String, String) Declaration public static void AtLeast(Optional<short> obj, short value, string name, string msg = null) Parameters Type Name Description Optional < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source AtLeast(Optional<Int32>, Int32, String, String) Declaration public static void AtLeast(Optional<int> obj, int value, string name, string msg = null) Parameters Type Name Description Optional < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source AtLeast(Optional<Int64>, Int64, String, String) Declaration public static void AtLeast(Optional<long> obj, long value, string name, string msg = null) Parameters Type Name Description Optional < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source AtLeast(Optional<SByte>, SByte, String, String) Declaration public static void AtLeast(Optional<sbyte> obj, sbyte value, string name, string msg = null) Parameters Type Name Description Optional < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source AtLeast(Optional<UInt16>, UInt16, String, String) Declaration public static void AtLeast(Optional<ushort> obj, ushort value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source AtLeast(Optional<UInt32>, UInt32, String, String) Declaration public static void AtLeast(Optional<uint> obj, uint value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source AtLeast(Optional<UInt64>, UInt64, String, String) Declaration public static void AtLeast(Optional<ulong> obj, ulong value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source AtLeast(Byte, Byte, String, String) Declaration public static void AtLeast(byte obj, byte value, string name, string msg = null) Parameters Type Name Description System.Byte obj System.Byte value System.String name System.String msg | Improve this Doc View Source AtLeast(Int16, Int16, String, String) Declaration public static void AtLeast(short obj, short value, string name, string msg = null) Parameters Type Name Description System.Int16 obj System.Int16 value System.String name System.String msg | Improve this Doc View Source AtLeast(Int32, Int32, String, String) Declaration public static void AtLeast(int obj, int value, string name, string msg = null) Parameters Type Name Description System.Int32 obj System.Int32 value System.String name System.String msg | Improve this Doc View Source AtLeast(Int64, Int64, String, String) Declaration public static void AtLeast(long obj, long value, string name, string msg = null) Parameters Type Name Description System.Int64 obj System.Int64 value System.String name System.String msg | Improve this Doc View Source AtLeast(Nullable<Byte>, Byte, String, String) Declaration public static void AtLeast(byte? obj, byte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source AtLeast(Nullable<Int16>, Int16, String, String) Declaration public static void AtLeast(short? obj, short value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source AtLeast(Nullable<Int32>, Int32, String, String) Declaration public static void AtLeast(int? obj, int value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source AtLeast(Nullable<Int64>, Int64, String, String) Declaration public static void AtLeast(long? obj, long value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source AtLeast(Nullable<SByte>, SByte, String, String) Declaration public static void AtLeast(sbyte? obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source AtLeast(Nullable<UInt16>, UInt16, String, String) Declaration public static void AtLeast(ushort? obj, ushort value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source AtLeast(Nullable<UInt32>, UInt32, String, String) Declaration public static void AtLeast(uint? obj, uint value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source AtLeast(Nullable<UInt64>, UInt64, String, String) Declaration public static void AtLeast(ulong? obj, ulong value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source AtLeast(SByte, SByte, String, String) Declaration public static void AtLeast(sbyte obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.SByte obj System.SByte value System.String name System.String msg | Improve this Doc View Source AtLeast(UInt16, UInt16, String, String) Declaration public static void AtLeast(ushort obj, ushort value, string name, string msg = null) Parameters Type Name Description System.UInt16 obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source AtLeast(UInt32, UInt32, String, String) Declaration public static void AtLeast(uint obj, uint value, string name, string msg = null) Parameters Type Name Description System.UInt32 obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source AtLeast(UInt64, UInt64, String, String) Declaration public static void AtLeast(ulong obj, ulong value, string name, string msg = null) Parameters Type Name Description System.UInt64 obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source AtMost(Optional<Byte>, Byte, String, String) Declaration public static void AtMost(Optional<byte> obj, byte value, string name, string msg = null) Parameters Type Name Description Optional < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source AtMost(Optional<Int16>, Int16, String, String) Declaration public static void AtMost(Optional<short> obj, short value, string name, string msg = null) Parameters Type Name Description Optional < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source AtMost(Optional<Int32>, Int32, String, String) Declaration public static void AtMost(Optional<int> obj, int value, string name, string msg = null) Parameters Type Name Description Optional < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source AtMost(Optional<Int64>, Int64, String, String) Declaration public static void AtMost(Optional<long> obj, long value, string name, string msg = null) Parameters Type Name Description Optional < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source AtMost(Optional<SByte>, SByte, String, String) Declaration public static void AtMost(Optional<sbyte> obj, sbyte value, string name, string msg = null) Parameters Type Name Description Optional < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source AtMost(Optional<UInt16>, UInt16, String, String) Declaration public static void AtMost(Optional<ushort> obj, ushort value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source AtMost(Optional<UInt32>, UInt32, String, String) Declaration public static void AtMost(Optional<uint> obj, uint value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source AtMost(Optional<UInt64>, UInt64, String, String) Declaration public static void AtMost(Optional<ulong> obj, ulong value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source AtMost(Byte, Byte, String, String) Declaration public static void AtMost(byte obj, byte value, string name, string msg = null) Parameters Type Name Description System.Byte obj System.Byte value System.String name System.String msg | Improve this Doc View Source AtMost(Int16, Int16, String, String) Declaration public static void AtMost(short obj, short value, string name, string msg = null) Parameters Type Name Description System.Int16 obj System.Int16 value System.String name System.String msg | Improve this Doc View Source AtMost(Int32, Int32, String, String) Declaration public static void AtMost(int obj, int value, string name, string msg = null) Parameters Type Name Description System.Int32 obj System.Int32 value System.String name System.String msg | Improve this Doc View Source AtMost(Int64, Int64, String, String) Declaration public static void AtMost(long obj, long value, string name, string msg = null) Parameters Type Name Description System.Int64 obj System.Int64 value System.String name System.String msg | Improve this Doc View Source AtMost(Nullable<Byte>, Byte, String, String) Declaration public static void AtMost(byte? obj, byte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source AtMost(Nullable<Int16>, Int16, String, String) Declaration public static void AtMost(short? obj, short value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source AtMost(Nullable<Int32>, Int32, String, String) Declaration public static void AtMost(int? obj, int value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source AtMost(Nullable<Int64>, Int64, String, String) Declaration public static void AtMost(long? obj, long value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source AtMost(Nullable<SByte>, SByte, String, String) Declaration public static void AtMost(sbyte? obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source AtMost(Nullable<UInt16>, UInt16, String, String) Declaration public static void AtMost(ushort? obj, ushort value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source AtMost(Nullable<UInt32>, UInt32, String, String) Declaration public static void AtMost(uint? obj, uint value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source AtMost(Nullable<UInt64>, UInt64, String, String) Declaration public static void AtMost(ulong? obj, ulong value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source AtMost(SByte, SByte, String, String) Declaration public static void AtMost(sbyte obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.SByte obj System.SByte value System.String name System.String msg | Improve this Doc View Source AtMost(UInt16, UInt16, String, String) Declaration public static void AtMost(ushort obj, ushort value, string name, string msg = null) Parameters Type Name Description System.UInt16 obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source AtMost(UInt32, UInt32, String, String) Declaration public static void AtMost(uint obj, uint value, string name, string msg = null) Parameters Type Name Description System.UInt32 obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source AtMost(UInt64, UInt64, String, String) Declaration public static void AtMost(ulong obj, ulong value, string name, string msg = null) Parameters Type Name Description System.UInt64 obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Optional<Byte>, Byte, String, String) Declaration public static void GreaterThan(Optional<byte> obj, byte value, string name, string msg = null) Parameters Type Name Description Optional < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source GreaterThan(Optional<Int16>, Int16, String, String) Declaration public static void GreaterThan(Optional<short> obj, short value, string name, string msg = null) Parameters Type Name Description Optional < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Optional<Int32>, Int32, String, String) Declaration public static void GreaterThan(Optional<int> obj, int value, string name, string msg = null) Parameters Type Name Description Optional < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Optional<Int64>, Int64, String, String) Declaration public static void GreaterThan(Optional<long> obj, long value, string name, string msg = null) Parameters Type Name Description Optional < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Optional<SByte>, SByte, String, String) Declaration public static void GreaterThan(Optional<sbyte> obj, sbyte value, string name, string msg = null) Parameters Type Name Description Optional < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source GreaterThan(Optional<UInt16>, UInt16, String, String) Declaration public static void GreaterThan(Optional<ushort> obj, ushort value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Optional<UInt32>, UInt32, String, String) Declaration public static void GreaterThan(Optional<uint> obj, uint value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Optional<UInt64>, UInt64, String, String) Declaration public static void GreaterThan(Optional<ulong> obj, ulong value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Byte, Byte, String, String) Declaration public static void GreaterThan(byte obj, byte value, string name, string msg = null) Parameters Type Name Description System.Byte obj System.Byte value System.String name System.String msg | Improve this Doc View Source GreaterThan(Int16, Int16, String, String) Declaration public static void GreaterThan(short obj, short value, string name, string msg = null) Parameters Type Name Description System.Int16 obj System.Int16 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Int32, Int32, String, String) Declaration public static void GreaterThan(int obj, int value, string name, string msg = null) Parameters Type Name Description System.Int32 obj System.Int32 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Int64, Int64, String, String) Declaration public static void GreaterThan(long obj, long value, string name, string msg = null) Parameters Type Name Description System.Int64 obj System.Int64 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Nullable<Byte>, Byte, String, String) Declaration public static void GreaterThan(byte? obj, byte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source GreaterThan(Nullable<Int16>, Int16, String, String) Declaration public static void GreaterThan(short? obj, short value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Nullable<Int32>, Int32, String, String) Declaration public static void GreaterThan(int? obj, int value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Nullable<Int64>, Int64, String, String) Declaration public static void GreaterThan(long? obj, long value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Nullable<SByte>, SByte, String, String) Declaration public static void GreaterThan(sbyte? obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source GreaterThan(Nullable<UInt16>, UInt16, String, String) Declaration public static void GreaterThan(ushort? obj, ushort value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Nullable<UInt32>, UInt32, String, String) Declaration public static void GreaterThan(uint? obj, uint value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source GreaterThan(Nullable<UInt64>, UInt64, String, String) Declaration public static void GreaterThan(ulong? obj, ulong value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source GreaterThan(SByte, SByte, String, String) Declaration public static void GreaterThan(sbyte obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.SByte obj System.SByte value System.String name System.String msg | Improve this Doc View Source GreaterThan(UInt16, UInt16, String, String) Declaration public static void GreaterThan(ushort obj, ushort value, string name, string msg = null) Parameters Type Name Description System.UInt16 obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source GreaterThan(UInt32, UInt32, String, String) Declaration public static void GreaterThan(uint obj, uint value, string name, string msg = null) Parameters Type Name Description System.UInt32 obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source GreaterThan(UInt64, UInt64, String, String) Declaration public static void GreaterThan(ulong obj, ulong value, string name, string msg = null) Parameters Type Name Description System.UInt64 obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source LessThan(Optional<Byte>, Byte, String, String) Declaration public static void LessThan(Optional<byte> obj, byte value, string name, string msg = null) Parameters Type Name Description Optional < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source LessThan(Optional<Int16>, Int16, String, String) Declaration public static void LessThan(Optional<short> obj, short value, string name, string msg = null) Parameters Type Name Description Optional < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source LessThan(Optional<Int32>, Int32, String, String) Declaration public static void LessThan(Optional<int> obj, int value, string name, string msg = null) Parameters Type Name Description Optional < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source LessThan(Optional<Int64>, Int64, String, String) Declaration public static void LessThan(Optional<long> obj, long value, string name, string msg = null) Parameters Type Name Description Optional < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source LessThan(Optional<SByte>, SByte, String, String) Declaration public static void LessThan(Optional<sbyte> obj, sbyte value, string name, string msg = null) Parameters Type Name Description Optional < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source LessThan(Optional<UInt16>, UInt16, String, String) Declaration public static void LessThan(Optional<ushort> obj, ushort value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source LessThan(Optional<UInt32>, UInt32, String, String) Declaration public static void LessThan(Optional<uint> obj, uint value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source LessThan(Optional<UInt64>, UInt64, String, String) Declaration public static void LessThan(Optional<ulong> obj, ulong value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source LessThan(Byte, Byte, String, String) Declaration public static void LessThan(byte obj, byte value, string name, string msg = null) Parameters Type Name Description System.Byte obj System.Byte value System.String name System.String msg | Improve this Doc View Source LessThan(Int16, Int16, String, String) Declaration public static void LessThan(short obj, short value, string name, string msg = null) Parameters Type Name Description System.Int16 obj System.Int16 value System.String name System.String msg | Improve this Doc View Source LessThan(Int32, Int32, String, String) Declaration public static void LessThan(int obj, int value, string name, string msg = null) Parameters Type Name Description System.Int32 obj System.Int32 value System.String name System.String msg | Improve this Doc View Source LessThan(Int64, Int64, String, String) Declaration public static void LessThan(long obj, long value, string name, string msg = null) Parameters Type Name Description System.Int64 obj System.Int64 value System.String name System.String msg | Improve this Doc View Source LessThan(Nullable<Byte>, Byte, String, String) Declaration public static void LessThan(byte? obj, byte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source LessThan(Nullable<Int16>, Int16, String, String) Declaration public static void LessThan(short? obj, short value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source LessThan(Nullable<Int32>, Int32, String, String) Declaration public static void LessThan(int? obj, int value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source LessThan(Nullable<Int64>, Int64, String, String) Declaration public static void LessThan(long? obj, long value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source LessThan(Nullable<SByte>, SByte, String, String) Declaration public static void LessThan(sbyte? obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source LessThan(Nullable<UInt16>, UInt16, String, String) Declaration public static void LessThan(ushort? obj, ushort value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source LessThan(Nullable<UInt32>, UInt32, String, String) Declaration public static void LessThan(uint? obj, uint value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source LessThan(Nullable<UInt64>, UInt64, String, String) Declaration public static void LessThan(ulong? obj, ulong value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source LessThan(SByte, SByte, String, String) Declaration public static void LessThan(sbyte obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.SByte obj System.SByte value System.String name System.String msg | Improve this Doc View Source LessThan(UInt16, UInt16, String, String) Declaration public static void LessThan(ushort obj, ushort value, string name, string msg = null) Parameters Type Name Description System.UInt16 obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source LessThan(UInt32, UInt32, String, String) Declaration public static void LessThan(uint obj, uint value, string name, string msg = null) Parameters Type Name Description System.UInt32 obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source LessThan(UInt64, UInt64, String, String) Declaration public static void LessThan(ulong obj, ulong value, string name, string msg = null) Parameters Type Name Description System.UInt64 obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source NotEmpty(Optional<String>, String, String) Declaration public static void NotEmpty(Optional<string> obj, string name, string msg = null) Parameters Type Name Description Optional < System.String > obj System.String name System.String msg | Improve this Doc View Source NotEmpty(String, String, String) Declaration public static void NotEmpty(string obj, string name, string msg = null) Parameters Type Name Description System.String obj System.String name System.String msg | Improve this Doc View Source NotEqual(Guid, Guid, String, String) Declaration public static void NotEqual(Guid obj, Guid value, string name, string msg = null) Parameters Type Name Description Guid obj Guid value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Guid>, Guid, String, String) Declaration public static void NotEqual(Optional<Guid> obj, Guid value, string name, string msg = null) Parameters Type Name Description Optional < Guid > obj Guid value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Byte>, Byte, String, String) Declaration public static void NotEqual(Optional<byte> obj, byte value, string name, string msg = null) Parameters Type Name Description Optional < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Int16>, Int16, String, String) Declaration public static void NotEqual(Optional<short> obj, short value, string name, string msg = null) Parameters Type Name Description Optional < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Int32>, Int32, String, String) Declaration public static void NotEqual(Optional<int> obj, int value, string name, string msg = null) Parameters Type Name Description Optional < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Int64>, Int64, String, String) Declaration public static void NotEqual(Optional<long> obj, long value, string name, string msg = null) Parameters Type Name Description Optional < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Nullable<Guid>>, Guid, String, String) Declaration public static void NotEqual(Optional<Guid?> obj, Guid value, string name, string msg = null) Parameters Type Name Description Optional < System.Nullable < Guid >> obj Guid value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Nullable<Byte>>, Byte, String, String) Declaration public static void NotEqual(Optional<byte?> obj, byte value, string name, string msg = null) Parameters Type Name Description Optional < System.Nullable < System.Byte >> obj System.Byte value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Nullable<Int16>>, Int16, String, String) Declaration public static void NotEqual(Optional<short?> obj, short value, string name, string msg = null) Parameters Type Name Description Optional < System.Nullable < System.Int16 >> obj System.Int16 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Nullable<Int32>>, Int32, String, String) Declaration public static void NotEqual(Optional<int?> obj, int value, string name, string msg = null) Parameters Type Name Description Optional < System.Nullable < System.Int32 >> obj System.Int32 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Nullable<Int64>>, Int64, String, String) Declaration public static void NotEqual(Optional<long?> obj, long value, string name, string msg = null) Parameters Type Name Description Optional < System.Nullable < System.Int64 >> obj System.Int64 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Nullable<SByte>>, SByte, String, String) Declaration public static void NotEqual(Optional<sbyte?> obj, sbyte value, string name, string msg = null) Parameters Type Name Description Optional < System.Nullable < System.SByte >> obj System.SByte value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Nullable<UInt16>>, UInt16, String, String) Declaration public static void NotEqual(Optional<ushort?> obj, ushort value, string name, string msg = null) Parameters Type Name Description Optional < System.Nullable < System.UInt16 >> obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Nullable<UInt32>>, UInt32, String, String) Declaration public static void NotEqual(Optional<uint?> obj, uint value, string name, string msg = null) Parameters Type Name Description Optional < System.Nullable < System.UInt32 >> obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<Nullable<UInt64>>, UInt64, String, String) Declaration public static void NotEqual(Optional<ulong?> obj, ulong value, string name, string msg = null) Parameters Type Name Description Optional < System.Nullable < System.UInt64 >> obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<SByte>, SByte, String, String) Declaration public static void NotEqual(Optional<sbyte> obj, sbyte value, string name, string msg = null) Parameters Type Name Description Optional < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<UInt16>, UInt16, String, String) Declaration public static void NotEqual(Optional<ushort> obj, ushort value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<UInt32>, UInt32, String, String) Declaration public static void NotEqual(Optional<uint> obj, uint value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source NotEqual(Optional<UInt64>, UInt64, String, String) Declaration public static void NotEqual(Optional<ulong> obj, ulong value, string name, string msg = null) Parameters Type Name Description Optional < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source NotEqual(Byte, Byte, String, String) Declaration public static void NotEqual(byte obj, byte value, string name, string msg = null) Parameters Type Name Description System.Byte obj System.Byte value System.String name System.String msg | Improve this Doc View Source NotEqual(Int16, Int16, String, String) Declaration public static void NotEqual(short obj, short value, string name, string msg = null) Parameters Type Name Description System.Int16 obj System.Int16 value System.String name System.String msg | Improve this Doc View Source NotEqual(Int32, Int32, String, String) Declaration public static void NotEqual(int obj, int value, string name, string msg = null) Parameters Type Name Description System.Int32 obj System.Int32 value System.String name System.String msg | Improve this Doc View Source NotEqual(Int64, Int64, String, String) Declaration public static void NotEqual(long obj, long value, string name, string msg = null) Parameters Type Name Description System.Int64 obj System.Int64 value System.String name System.String msg | Improve this Doc View Source NotEqual(Nullable<Guid>, Guid, String, String) Declaration public static void NotEqual(Guid? obj, Guid value, string name, string msg = null) Parameters Type Name Description System.Nullable < Guid > obj Guid value System.String name System.String msg | Improve this Doc View Source NotEqual(Nullable<Byte>, Byte, String, String) Declaration public static void NotEqual(byte? obj, byte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Byte > obj System.Byte value System.String name System.String msg | Improve this Doc View Source NotEqual(Nullable<Int16>, Int16, String, String) Declaration public static void NotEqual(short? obj, short value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int16 > obj System.Int16 value System.String name System.String msg | Improve this Doc View Source NotEqual(Nullable<Int32>, Int32, String, String) Declaration public static void NotEqual(int? obj, int value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int32 > obj System.Int32 value System.String name System.String msg | Improve this Doc View Source NotEqual(Nullable<Int64>, Int64, String, String) Declaration public static void NotEqual(long? obj, long value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.Int64 > obj System.Int64 value System.String name System.String msg | Improve this Doc View Source NotEqual(Nullable<SByte>, SByte, String, String) Declaration public static void NotEqual(sbyte? obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.SByte > obj System.SByte value System.String name System.String msg | Improve this Doc View Source NotEqual(Nullable<UInt16>, UInt16, String, String) Declaration public static void NotEqual(ushort? obj, ushort value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt16 > obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source NotEqual(Nullable<UInt32>, UInt32, String, String) Declaration public static void NotEqual(uint? obj, uint value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt32 > obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source NotEqual(Nullable<UInt64>, UInt64, String, String) Declaration public static void NotEqual(ulong? obj, ulong value, string name, string msg = null) Parameters Type Name Description System.Nullable < System.UInt64 > obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source NotEqual(SByte, SByte, String, String) Declaration public static void NotEqual(sbyte obj, sbyte value, string name, string msg = null) Parameters Type Name Description System.SByte obj System.SByte value System.String name System.String msg | Improve this Doc View Source NotEqual(UInt16, UInt16, String, String) Declaration public static void NotEqual(ushort obj, ushort value, string name, string msg = null) Parameters Type Name Description System.UInt16 obj System.UInt16 value System.String name System.String msg | Improve this Doc View Source NotEqual(UInt32, UInt32, String, String) Declaration public static void NotEqual(uint obj, uint value, string name, string msg = null) Parameters Type Name Description System.UInt32 obj System.UInt32 value System.String name System.String msg | Improve this Doc View Source NotEqual(UInt64, UInt64, String, String) Declaration public static void NotEqual(ulong obj, ulong value, string name, string msg = null) Parameters Type Name Description System.UInt64 obj System.UInt64 value System.String name System.String msg | Improve this Doc View Source NotNull<T>(T, String, String) Declaration public static void NotNull<T>(T obj, string name, string msg = null) where T : class Parameters Type Name Description T obj System.String name System.String msg Type Parameters Name Description T | Improve this Doc View Source NotNull<T>(Optional<T>, String, String) Declaration public static void NotNull<T>(Optional<T> obj, string name, string msg = null) where T : class Parameters Type Name Description Optional <T> obj System.String name System.String msg Type Parameters Name Description T | Improve this Doc View Source NotNullOrEmpty(Optional<String>, String, String) Declaration public static void NotNullOrEmpty(Optional<string> obj, string name, string msg = null) Parameters Type Name Description Optional < System.String > obj System.String name System.String msg | Improve this Doc View Source NotNullOrEmpty(String, String, String) Declaration public static void NotNullOrEmpty(string obj, string name, string msg = null) Parameters Type Name Description System.String obj System.String name System.String msg | Improve this Doc View Source NotNullOrWhitespace(Optional<String>, String, String) Declaration public static void NotNullOrWhitespace(Optional<string> obj, string name, string msg = null) Parameters Type Name Description Optional < System.String > obj System.String name System.String msg | Improve this Doc View Source NotNullOrWhitespace(String, String, String) Declaration public static void NotNullOrWhitespace(string obj, string name, string msg = null) Parameters Type Name Description System.String obj System.String name System.String msg"
  },
  "api/KaiHeiLa.Quote.html": {
    "href": "api/KaiHeiLa.Quote.html",
    "title": "Class Quote | KaiHeiLa.Net 文档",
    "keywords": "Class Quote Represents a generic message quote. Inheritance System.Object Quote Implements IQuote IEntity < System.String > Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class Quote : object, IQuote, IEntity<string> Constructors | Improve this Doc View Source Quote(Guid) Initializes a new instance of the Quote class. Declaration public Quote(Guid quotedMessageId) Parameters Type Name Description Guid quotedMessageId The quoted message identifier. Properties | Improve this Doc View Source Author Gets the author of this message. Declaration public IUser Author { get; } Property Value Type Description IUser | Improve this Doc View Source Content Gets the content of the message this quote refers to. Declaration public string Content { get; } Property Value Type Description System.String A string that contains the body of the message; note that this field may be empty or the original code if the message is not a text based message. | Improve this Doc View Source CreateAt Gets the time this message was sent. Declaration public DateTimeOffset CreateAt { get; } Property Value Type Description DateTimeOffset Time of when the message was sent. | Improve this Doc View Source Empty Gets an empty quote whose quoted message is null. Declaration public Quote Empty { get; } Property Value Type Description Quote Remarks Used to delete a quote when modifying a message. | Improve this Doc View Source Id Gets the unique identifier for this object. Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source QuotedMessageId Gets the identifier of the message this quote refers to. Declaration public Guid QuotedMessageId { get; } Property Value Type Description Guid | Improve this Doc View Source Type Gets the type of the message this quote refers to. Declaration public MessageType Type { get; } Property Value Type Description MessageType Implements IQuote IEntity<TId>"
  },
  "api/KaiHeiLa.ReactionMetadata.html": {
    "href": "api/KaiHeiLa.ReactionMetadata.html",
    "title": "Struct ReactionMetadata | KaiHeiLa.Net 文档",
    "keywords": "Struct ReactionMetadata A metadata containing reaction information. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public struct ReactionMetadata Properties | Improve this Doc View Source IsMe Gets a value that indicates whether the current user has reacted to this. Declaration public bool IsMe { get; } Property Value Type Description System.Boolean true if the user has reacted to the message; otherwise false . | Improve this Doc View Source ReactionCount Gets the number of reactions. Declaration public int ReactionCount { get; } Property Value Type Description System.Int32 An int representing the number of this reactions that has been added to this message."
  },
  "api/KaiHeiLa.RequestOptions.html": {
    "href": "api/KaiHeiLa.RequestOptions.html",
    "title": "Class RequestOptions | KaiHeiLa.Net 文档",
    "keywords": "Class RequestOptions Represents options that should be used when sending a request. Inheritance System.Object RequestOptions Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class RequestOptions : object Constructors | Improve this Doc View Source RequestOptions() Initializes a new RequestOptions class with the default request timeout set in KaiHeiLaConfig . Declaration public RequestOptions() Properties | Improve this Doc View Source AuditLogReason Gets or sets the reason for this action in the guild's audit log. Declaration public string AuditLogReason { get; set; } Property Value Type Description System.String Remarks Gets or sets the reason that will be written to the guild's audit log if applicable. This may not apply to all actions. | Improve this Doc View Source CancelToken Gets or sets the cancellation token for this request. Declaration public CancellationToken CancelToken { get; set; } Property Value Type Description CancellationToken A for this request. | Improve this Doc View Source Default Creates a new RequestOptions class with its default settings. Declaration public static RequestOptions Default { get; } Property Value Type Description RequestOptions | Improve this Doc View Source HeaderOnly Declaration public bool HeaderOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RatelimitCallback Gets or sets the callback to execute regarding ratelimits for this request. Declaration public Func<IRateLimitInfo, Task> RatelimitCallback { get; set; } Property Value Type Description Func < IRateLimitInfo , Task > | Improve this Doc View Source RetryMode Gets or sets the retry behavior when the request fails. Declaration public RetryMode? RetryMode { get; set; } Property Value Type Description System.Nullable < RetryMode > | Improve this Doc View Source Timeout Gets or sets the maximum time to wait for this request to complete. Declaration public int? Timeout { get; set; } Property Value Type Description System.Nullable < System.Int32 > An int in milliseconds for when the request times out. Remarks Gets or set the max time, in milliseconds, to wait for this request to complete. If null , a request will not time out. If a rate limit has been triggered for this request's bucket and will not be unpaused in time, this request will fail immediately. Methods | Improve this Doc View Source Clone() Declaration public RequestOptions Clone() Returns Type Description RequestOptions"
  },
  "api/KaiHeiLa.Rest.BaseKaiHeiLaClient.html": {
    "href": "api/KaiHeiLa.Rest.BaseKaiHeiLaClient.html",
    "title": "Class BaseKaiHeiLaClient | KaiHeiLa.Net 文档",
    "keywords": "Class BaseKaiHeiLaClient Inheritance System.Object BaseKaiHeiLaClient KaiHeiLaRestClient BaseSocketClient Implements IKaiHeiLaClient IDisposable Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public abstract class BaseKaiHeiLaClient : object, IKaiHeiLaClient, IDisposable Properties | Improve this Doc View Source CurrentUser Gets the logged-in user. Declaration public ISelfUser CurrentUser { get; protected set; } Property Value Type Description ISelfUser | Improve this Doc View Source LoginState Gets the login state of the client. Declaration public LoginState LoginState { get; } Property Value Type Description LoginState | Improve this Doc View Source TokenType Gets the token type of the logged-in user. Declaration public TokenType TokenType { get; } Property Value Type Description TokenType Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetChannelAsync(UInt64, CacheMode, RequestOptions) Declaration public Task<IChannel> GetChannelAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description System.UInt64 id CacheMode mode RequestOptions options Returns Type Description Task < IChannel > | Improve this Doc View Source GetDMChannelAsync(Guid, CacheMode, RequestOptions) Declaration public Task<IDMChannel> GetDMChannelAsync(Guid chatCode, CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description Guid chatCode CacheMode mode RequestOptions options Returns Type Description Task < IDMChannel > | Improve this Doc View Source GetDMChannelsAsync(CacheMode, RequestOptions) Declaration public Task<IReadOnlyCollection<IDMChannel>> GetDMChannelsAsync(CacheMode mode = CacheMode.AllowDownload, RequestOptions options = null) Parameters Type Name Description CacheMode mode RequestOptions options Returns Type Description Task < IReadOnlyCollection < IDMChannel >> | Improve this Doc View Source LoginAsync(TokenType, String, Boolean) Declaration public Task LoginAsync(TokenType tokenType, string token, bool validateToken = true) Parameters Type Name Description TokenType tokenType System.String token System.Boolean validateToken Returns Type Description Task | Improve this Doc View Source LogoutAsync() Declaration public Task LogoutAsync() Returns Type Description Task Events | Improve this Doc View Source Log Declaration public event Func<LogMessage, Task> Log Event Type Type Description Func < LogMessage , Task > | Improve this Doc View Source LoggedIn Declaration public event Func<Task> LoggedIn Event Type Type Description Func < Task > | Improve this Doc View Source LoggedOut Declaration public event Func<Task> LoggedOut Event Type Type Description Func < Task > Explicit Interface Implementations | Improve this Doc View Source IKaiHeiLaClient.ConnectionState Gets the current state of connection. Declaration ConnectionState IKaiHeiLaClient.ConnectionState { get; } Returns Type Description ConnectionState | Improve this Doc View Source IKaiHeiLaClient.CurrentUser Gets the currently logged-in user. Declaration ISelfUser IKaiHeiLaClient.CurrentUser { get; } Returns Type Description ISelfUser Implements IKaiHeiLaClient IDisposable"
  },
  "api/KaiHeiLa.Rest.html": {
    "href": "api/KaiHeiLa.Rest.html",
    "title": "Namespace KaiHeiLa.Rest | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.Rest Classes BaseKaiHeiLaClient KaiHeiLaRestClient KaiHeiLaRestConfig RecommendInfo Represents a recommendation information for a guild. RestBan Represents a REST-based ban object. RestCategoryChannel Represents a REST-based category channel. RestChannel Represents a generic REST-based channel. RestDMChannel Represents a REST-based direct-message channel. RestEntity<T> RestGame Represents a game object. RestGuild Represents a REST-based guild/server. RestGuildChannel RestGuildUser Represents a REST-based guild user. RestIntimacy Gets the intimacy information associated with the specified user. RestInvite RestMessage Represents a REST-based message. RestReaction RestRole Represents a REST-based role. RestSelfUser Represents the logged-in REST-based user. RestSystemMessage Represents a REST-based system message. RestTextChannel Represents a REST-based channel in a guild that can send and receive messages. RestUser Represents a REST-based user. RestUserMessage Represents a REST-based message sent by a user. RestVoiceChannel Represents a REST-based voice channel in a guild. Interfaces IRestAudioChannel IRestMessageChannel Represents a REST-based channel that can send and receive messages. IRestPrivateChannel Represents a REST-based channel that is private to select recipients."
  },
  "api/KaiHeiLa.Rest.IRestAudioChannel.html": {
    "href": "api/KaiHeiLa.Rest.IRestAudioChannel.html",
    "title": "Interface IRestAudioChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IRestAudioChannel Inherited Members IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public interface IRestAudioChannel : IAudioChannel, IChannel, IEntity<ulong>"
  },
  "api/KaiHeiLa.Rest.IRestMessageChannel.html": {
    "href": "api/KaiHeiLa.Rest.IRestMessageChannel.html",
    "title": "Interface IRestMessageChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IRestMessageChannel Represents a REST-based channel that can send and receive messages. Inherited Members IMessageChannel.SendTextMessageAsync(String, IQuote, IUser, RequestOptions) IMessageChannel.SendImageMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendImageMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendVideoMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendVideoMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendFileMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendFileMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendKMarkdownMessageAsync(String, IQuote, IUser, RequestOptions) KaiHeiLa.IMessageChannel.SendCardMessageAsync(IEnumerable<>, KaiHeiLa.IQuote, KaiHeiLa.IUser, KaiHeiLa.RequestOptions) IMessageChannel.GetMessageAsync(Guid, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(Int32, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(Guid, Direction, Int32, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(IMessage, Direction, Int32, CacheMode, RequestOptions) IMessageChannel.DeleteMessageAsync(Guid, RequestOptions) IMessageChannel.DeleteMessageAsync(IMessage, RequestOptions) KaiHeiLa.IMessageChannel.ModifyMessageAsync(Guid, Action<>, KaiHeiLa.RequestOptions) IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public interface IRestMessageChannel : IMessageChannel, IChannel, IEntity<ulong> Methods | Improve this Doc View Source GetMessageAsync(Guid, RequestOptions) Gets a message from this message channel. Declaration Task<RestMessage> GetMessageAsync(Guid id, RequestOptions options = null) Parameters Type Name Description Guid id The identifier of the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestMessage > A task that represents an asynchronous get operation for retrieving the message. The task result contains the retrieved message; null if no message is found with the specified identifier. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(Guid, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration IAsyncEnumerable<IReadOnlyCollection<RestMessage>> GetMessagesAsync(Guid referenceMessageId, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description Guid referenceMessageId The ID of the starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(IMessage, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration IAsyncEnumerable<IReadOnlyCollection<RestMessage>> GetMessagesAsync(IMessage referenceMessage, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description IMessage referenceMessage The starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(Int32, RequestOptions) Gets the last N messages from this message channel. Declaration IAsyncEnumerable<IReadOnlyCollection<RestMessage>> GetMessagesAsync(int limit = null, RequestOptions options = null) Parameters Type Name Description System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method."
  },
  "api/KaiHeiLa.Rest.IRestPrivateChannel.html": {
    "href": "api/KaiHeiLa.Rest.IRestPrivateChannel.html",
    "title": "Interface IRestPrivateChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface IRestPrivateChannel Represents a REST-based channel that is private to select recipients. Inherited Members IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public interface IRestPrivateChannel : IPrivateChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source Recipients Users that can access this channel. Declaration IReadOnlyCollection<RestUser> Recipients { get; } Property Value Type Description IReadOnlyCollection < RestUser >"
  },
  "api/KaiHeiLa.Rest.KaiHeiLaRestClient.html": {
    "href": "api/KaiHeiLa.Rest.KaiHeiLaRestClient.html",
    "title": "Class KaiHeiLaRestClient | KaiHeiLa.Net 文档",
    "keywords": "Class KaiHeiLaRestClient Inheritance System.Object BaseKaiHeiLaClient KaiHeiLaRestClient KaiHeiLaSocketRestClient Implements IKaiHeiLaClient IDisposable Inherited Members BaseKaiHeiLaClient.Log BaseKaiHeiLaClient.LoggedIn BaseKaiHeiLaClient.LoggedOut BaseKaiHeiLaClient.LoginState BaseKaiHeiLaClient.TokenType BaseKaiHeiLaClient.Dispose() BaseKaiHeiLaClient.LoginAsync(TokenType, String, Boolean) BaseKaiHeiLaClient.LogoutAsync() BaseKaiHeiLaClient.IKaiHeiLaClient.ConnectionState BaseKaiHeiLaClient.IKaiHeiLaClient.CurrentUser BaseKaiHeiLaClient.GetChannelAsync(UInt64, CacheMode, RequestOptions) BaseKaiHeiLaClient.GetDMChannelAsync(Guid, CacheMode, RequestOptions) BaseKaiHeiLaClient.GetDMChannelsAsync(CacheMode, RequestOptions) Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class KaiHeiLaRestClient : BaseKaiHeiLaClient, IKaiHeiLaClient, IDisposable Constructors | Improve this Doc View Source KaiHeiLaRestClient() Declaration public KaiHeiLaRestClient() | Improve this Doc View Source KaiHeiLaRestClient(KaiHeiLaRestConfig) Declaration public KaiHeiLaRestClient(KaiHeiLaRestConfig config) Parameters Type Name Description KaiHeiLaRestConfig config Properties | Improve this Doc View Source CurrentUser Gets the logged-in user. Declaration public RestSelfUser CurrentUser { get; } Property Value Type Description RestSelfUser Methods | Improve this Doc View Source AddDirectMessageReactionAsync(Guid, IEmote, RequestOptions) Declaration public Task AddDirectMessageReactionAsync(Guid messageId, IEmote emote, RequestOptions options = null) Parameters Type Name Description Guid messageId IEmote emote RequestOptions options Returns Type Description Task | Improve this Doc View Source AddReactionAsync(Guid, IEmote, RequestOptions) Declaration public Task AddReactionAsync(Guid messageId, IEmote emote, RequestOptions options = null) Parameters Type Name Description Guid messageId IEmote emote RequestOptions options Returns Type Description Task | Improve this Doc View Source AddRoleAsync(UInt64, UInt64, UInt32) Declaration public Task AddRoleAsync(ulong guildId, ulong userId, uint roleId) Parameters Type Name Description System.UInt64 guildId System.UInt64 userId System.UInt32 roleId Returns Type Description Task | Improve this Doc View Source CreateAssetAsync(Stream, String, RequestOptions) Declaration public Task<string> CreateAssetAsync(Stream stream, string fileName, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName RequestOptions options Returns Type Description Task < System.String > | Improve this Doc View Source CreateAssetAsync(String, String, RequestOptions) Declaration public Task<string> CreateAssetAsync(string path, string fileName, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName RequestOptions options Returns Type Description Task < System.String > | Improve this Doc View Source CreateGameAsync(String, String, String, RequestOptions) Declaration public Task<RestGame> CreateGameAsync(string name, string processName, string iconUrl, RequestOptions options = null) Parameters Type Name Description System.String name System.String processName System.String iconUrl RequestOptions options Returns Type Description Task < RestGame > | Improve this Doc View Source GetChannelAsync(UInt64, RequestOptions) Declaration public Task<RestChannel> GetChannelAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id RequestOptions options Returns Type Description Task < RestChannel > | Improve this Doc View Source GetDMChannelAsync(Guid, RequestOptions) Declaration public Task<RestDMChannel> GetDMChannelAsync(Guid chatCode, RequestOptions options = null) Parameters Type Name Description Guid chatCode RequestOptions options Returns Type Description Task < RestDMChannel > | Improve this Doc View Source GetDMChannelsAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<RestDMChannel>> GetDMChannelsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < RestDMChannel >> | Improve this Doc View Source GetGamesAsync(RequestOptions) Declaration public IAsyncEnumerable<IReadOnlyCollection<RestGame>> GetGamesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestGame >> | Improve this Doc View Source GetGuildAsync(UInt64, RequestOptions) Declaration public Task<RestGuild> GetGuildAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id RequestOptions options Returns Type Description Task < RestGuild > | Improve this Doc View Source GetGuildsAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<RestGuild>> GetGuildsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < RestGuild >> | Improve this Doc View Source GetGuildUserAsync(UInt64, UInt64, RequestOptions) Declaration public Task<RestGuildUser> GetGuildUserAsync(ulong guildId, ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 guildId System.UInt64 id RequestOptions options Returns Type Description Task < RestGuildUser > | Improve this Doc View Source GetUserAsync(UInt64, RequestOptions) Declaration public Task<RestUser> GetUserAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id RequestOptions options Returns Type Description Task < RestUser > | Improve this Doc View Source RemoveDirectMessageReactionAsync(Guid, UInt64, IEmote, RequestOptions) Declaration public Task RemoveDirectMessageReactionAsync(Guid messageId, ulong userId, IEmote emote, RequestOptions options = null) Parameters Type Name Description Guid messageId System.UInt64 userId IEmote emote RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveReactionAsync(Guid, UInt64, IEmote, RequestOptions) Declaration public Task RemoveReactionAsync(Guid messageId, ulong userId, IEmote emote, RequestOptions options = null) Parameters Type Name Description Guid messageId System.UInt64 userId IEmote emote RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveRoleAsync(UInt64, UInt64, UInt32) Declaration public Task RemoveRoleAsync(ulong guildId, ulong userId, uint roleId) Parameters Type Name Description System.UInt64 guildId System.UInt64 userId System.UInt32 roleId Returns Type Description Task Implements IKaiHeiLaClient IDisposable"
  },
  "api/KaiHeiLa.Rest.KaiHeiLaRestConfig.html": {
    "href": "api/KaiHeiLa.Rest.KaiHeiLaRestConfig.html",
    "title": "Class KaiHeiLaRestConfig | KaiHeiLa.Net 文档",
    "keywords": "Class KaiHeiLaRestConfig Inheritance System.Object KaiHeiLaConfig KaiHeiLaRestConfig KaiHeiLaSocketConfig Inherited Members KaiHeiLaConfig.APIVersion KaiHeiLaConfig.Version KaiHeiLaConfig.UserAgent KaiHeiLaConfig.APIUrl KaiHeiLaConfig.DefaultRequestTimeout KaiHeiLaConfig.MaxMessageSize KaiHeiLaConfig.MaxUsersPerBatch KaiHeiLaConfig.MaxMessagesPerBatch KaiHeiLaConfig.MaxItemsPerBatchByDefault KaiHeiLaConfig.MinNicknameSize KaiHeiLaConfig.MaxNicknameSize KaiHeiLaConfig.MinIntimacyScore KaiHeiLaConfig.MaxIntimacyScore KaiHeiLaConfig.DefaultRetryMode KaiHeiLaConfig.DefaultRatelimitCallback KaiHeiLaConfig.LogLevel Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class KaiHeiLaRestConfig : KaiHeiLaConfig Properties | Improve this Doc View Source RestClientProvider Declaration public RestClientProvider RestClientProvider { get; set; } Property Value Type Description RestClientProvider"
  },
  "api/KaiHeiLa.Rest.RecommendInfo.html": {
    "href": "api/KaiHeiLa.Rest.RecommendInfo.html",
    "title": "Class RecommendInfo | KaiHeiLa.Net 文档",
    "keywords": "Class RecommendInfo Represents a recommendation information for a guild. Inheritance System.Object RecommendInfo Implements IRecommendInfo Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RecommendInfo : object, IRecommendInfo Properties | Improve this Doc View Source AuditStatus Declaration public int AuditStatus { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Banner Declaration public string Banner { get; } Property Value Type Description System.String | Improve this Doc View Source BoostLevel Gets the boost level of the recommended guild. Declaration public BoostLevel BoostLevel { get; } Property Value Type Description BoostLevel A BoostLevel representing the boost level of the recommended guild. | Improve this Doc View Source CustomId Declaration public string CustomId { get; } Property Value Type Description System.String | Improve this Doc View Source DaysBeforeModify Declaration public int DaysBeforeModify { get; } Property Value Type Description System.Int32 | Improve this Doc View Source DefaultChannelId Declaration public ulong DefaultChannelId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Features Declaration public object[] Features { get; } Property Value Type Description System.Object [] | Improve this Doc View Source GuildId Declaration public ulong GuildId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source Icon Declaration public string Icon { get; } Property Value Type Description System.String | Improve this Doc View Source IsOfficialPartner Declaration public bool IsOfficialPartner { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source OpenId Declaration public uint OpenId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Sort Declaration public int Sort { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Status Declaration public int Status { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Tag Declaration public string Tag { get; } Property Value Type Description System.String Implements IRecommendInfo"
  },
  "api/KaiHeiLa.Rest.RestBan.html": {
    "href": "api/KaiHeiLa.Rest.RestBan.html",
    "title": "Class RestBan | KaiHeiLa.Net 文档",
    "keywords": "Class RestBan Represents a REST-based ban object. Inheritance System.Object RestBan Implements IBan Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestBan : object, IBan Properties | Improve this Doc View Source CreatedAt Declaration public DateTimeOffset CreatedAt { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Reason Declaration public string Reason { get; } Property Value Type Description System.String | Improve this Doc View Source User Gets the banned user. Declaration public RestUser User { get; } Property Value Type Description RestUser A generic RestUser object that was banned. Methods | Improve this Doc View Source ToString() Gets the name of the banned user. Declaration public override string ToString() Returns Type Description System.String A string containing the name of the user that was banned. Explicit Interface Implementations | Improve this Doc View Source IBan.User Gets the banned user. Declaration IUser IBan.User { get; } Returns Type Description IUser A user that was banned. Implements IBan"
  },
  "api/KaiHeiLa.Rest.RestCategoryChannel.html": {
    "href": "api/KaiHeiLa.Rest.RestCategoryChannel.html",
    "title": "Class RestCategoryChannel | KaiHeiLa.Net 文档",
    "keywords": "Class RestCategoryChannel Represents a REST-based category channel. Inheritance System.Object RestEntity < System.UInt64 > RestChannel RestGuildChannel RestCategoryChannel Implements IEntity < System.UInt64 > IUpdateable ICategoryChannel IGuildChannel IChannel IEntity < System.UInt64 > IDeletable Inherited Members RestGuildChannel.RolePermissionOverwrites RestGuildChannel.UserPermissionOverwrites RestGuildChannel.Type RestGuildChannel.Name RestGuildChannel.Position RestGuildChannel.GuildId RestGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) RestGuildChannel.DeleteAsync(RequestOptions) RestGuildChannel.UpdateAsync(RequestOptions) RestGuildChannel.GetPermissionOverwrite(IUser) RestGuildChannel.GetPermissionOverwrite(IRole) RestGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) RestGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) RestGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) RestGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) RestGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) RestGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) RestGuildChannel.ToString() RestGuildChannel.IGuildChannel.Guild RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestCategoryChannel : RestGuildChannel, IEntity<ulong>, IUpdateable, ICategoryChannel, IGuildChannel, IChannel, IEntity<ulong>, IDeletable Implements IEntity<TId> IUpdateable ICategoryChannel IGuildChannel IChannel IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.Rest.RestChannel.html": {
    "href": "api/KaiHeiLa.Rest.RestChannel.html",
    "title": "Class RestChannel | KaiHeiLa.Net 文档",
    "keywords": "Class RestChannel Represents a generic REST-based channel. Inheritance System.Object RestEntity < System.UInt64 > RestChannel RestDMChannel RestGuildChannel Implements IEntity < System.UInt64 > IChannel IEntity < System.UInt64 > IUpdateable Inherited Members RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestChannel : RestEntity<ulong>, IEntity<ulong>, IChannel, IEntity<ulong>, IUpdateable Methods | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public virtual Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Implements IEntity<TId> IChannel IEntity<TId> IUpdateable"
  },
  "api/KaiHeiLa.Rest.RestDMChannel.html": {
    "href": "api/KaiHeiLa.Rest.RestDMChannel.html",
    "title": "Class RestDMChannel | KaiHeiLa.Net 文档",
    "keywords": "Class RestDMChannel Represents a REST-based direct-message channel. Inheritance System.Object RestEntity < System.UInt64 > RestChannel RestDMChannel Implements IEntity < System.UInt64 > IUpdateable IDMChannel IEntity < Guid > IRestPrivateChannel IPrivateChannel IRestMessageChannel IMessageChannel IChannel IEntity < System.UInt64 > Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestDMChannel : RestChannel, IEntity<ulong>, IUpdateable, IDMChannel, IEntity<Guid>, IRestPrivateChannel, IPrivateChannel, IRestMessageChannel, IMessageChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source ChatCode Declaration public Guid ChatCode { get; } Property Value Type Description Guid Remarks This property is the same as Id . | Improve this Doc View Source CurrentUser Gets the current logged-in user. Declaration public RestUser CurrentUser { get; } Property Value Type Description RestUser | Improve this Doc View Source Id Get the identifier of the DM channel. Declaration public Guid Id { get; } Property Value Type Description Guid Remarks This property is the same as ChatCode . | Improve this Doc View Source Recipient Gets the recipient of the channel. Declaration public RestUser Recipient { get; } Property Value Type Description RestUser | Improve this Doc View Source Users Gets a collection that is the current logged-in user and the recipient. Declaration public IReadOnlyCollection<RestUser> Users { get; } Property Value Type Description IReadOnlyCollection < RestUser > Methods | Improve this Doc View Source CloseAsync(RequestOptions) Declaration public Task CloseAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source DeleteMessageAsync(Guid, RequestOptions) Declaration public Task DeleteMessageAsync(Guid messageId, RequestOptions options = null) Parameters Type Name Description Guid messageId RequestOptions options Returns Type Description Task | Improve this Doc View Source DeleteMessageAsync(IMessage, RequestOptions) Declaration public Task DeleteMessageAsync(IMessage message, RequestOptions options = null) Parameters Type Name Description IMessage message RequestOptions options Returns Type Description Task | Improve this Doc View Source GetMessageAsync(Guid, RequestOptions) Gets a message from this message channel. Declaration public Task<RestMessage> GetMessageAsync(Guid id, RequestOptions options = null) Parameters Type Name Description Guid id The identifier of the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestMessage > A task that represents an asynchronous get operation for retrieving the message. The task result contains the retrieved message; null if no message is found with the specified identifier. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(Guid, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<RestMessage>> GetMessagesAsync(Guid referenceMessageId, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description Guid referenceMessageId The ID of the starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(IMessage, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<RestMessage>> GetMessagesAsync(IMessage referenceMessage, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description IMessage referenceMessage The starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(Int32, RequestOptions) Gets the last N messages from this message channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<RestMessage>> GetMessagesAsync(int limit = null, RequestOptions options = null) Parameters Type Name Description System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetUser(UInt64) Gets a user in this channel from the provided id . Declaration public RestUser GetUser(ulong id) Parameters Type Name Description System.UInt64 id The identifier of the user. Returns Type Description RestUser A RestUser object that is a recipient of this channel; otherwise null . | Improve this Doc View Source ModifyMessageAsync(Guid, Action<MessageProperties>, RequestOptions) Declaration public Task ModifyMessageAsync(Guid messageId, Action<MessageProperties> func, RequestOptions options = null) Parameters Type Name Description Guid messageId Action < MessageProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source SendCardMessageAsync(IEnumerable<ICard>, IQuote, RequestOptions) Sends a card message to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(IEnumerable<ICard> cards, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IEnumerable < ICard > cards The cards to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendCardMessageAsync(ICard, Quote, RequestOptions) Sends a card message to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(ICard card, Quote quote = null, RequestOptions options = null) Parameters Type Name Description ICard card The card to be sent. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendFileMessageAsync(Stream, String, IQuote, RequestOptions) Sends a file to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(Stream stream, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description Stream stream The stream of the audio. System.String fileName The name of the audio. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends a file as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendFileMessageAsync(String, String, IQuote, RequestOptions) Sends a file to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(string path, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the audio. System.String fileName The name of the audio. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends a file as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendImageMessageAsync(Stream, String, IQuote, RequestOptions) Sends an image to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(Stream stream, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description Stream stream The stream of the image. System.String fileName The name of the image. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an image as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendImageMessageAsync(String, String, IQuote, RequestOptions) Sends an image to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(string path, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the image. System.String fileName The name of the image. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an image as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendKMarkdownMessageAsync(String, IQuote, RequestOptions) Sends a KMarkdown message to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendKMarkdownMessageAsync(string text, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String text The message to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendTextMessageAsync(String, IQuote, RequestOptions) Sends a plain text to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendTextMessageAsync(string text, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String text The message to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendVideoMessageAsync(Stream, String, IQuote, RequestOptions) Sends a video to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(Stream stream, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description Stream stream The stream of the video. System.String fileName The name of the video. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an video as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendVideoMessageAsync(String, String, IQuote, RequestOptions) Sends a video to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(string path, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the video. System.String fileName The name of the video. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an video as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source ToString() Gets a string that represents the Username#IdentifyNumber of the recipient. Declaration public override string ToString() Returns Type Description System.String A string that resolves to the Recipient of this channel. | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public override Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Overrides RestChannel.UpdateAsync(RequestOptions) Explicit Interface Implementations | Improve this Doc View Source IDMChannel.Recipient Gets the recipient of all messages in this channel. Declaration IUser IDMChannel.Recipient { get; } Returns Type Description IUser A user object that represents the other user in this channel. | Improve this Doc View Source IRestPrivateChannel.Recipients Users that can access this channel. Declaration IReadOnlyCollection<RestUser> IRestPrivateChannel.Recipients { get; } Returns Type Description IReadOnlyCollection < RestUser > Implements IEntity<TId> IUpdateable IDMChannel IEntity<TId> IRestPrivateChannel IPrivateChannel IRestMessageChannel IMessageChannel IChannel IEntity<TId>"
  },
  "api/KaiHeiLa.Rest.RestEntity-1.html": {
    "href": "api/KaiHeiLa.Rest.RestEntity-1.html",
    "title": "Class RestEntity<T> | KaiHeiLa.Net 文档",
    "keywords": "Class RestEntity<T> Inheritance System.Object RestEntity<T> RestChannel RestGame RestGuild RestIntimacy RestInvite RestMessage RestRole RestUser Implements IEntity <T> Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public abstract class RestEntity<T> : object, IEntity<T> where T : IEquatable<T> Type Parameters Name Description T Properties | Improve this Doc View Source Id Gets the unique identifier for this object. Declaration public T Id { get; } Property Value Type Description T Implements IEntity<TId>"
  },
  "api/KaiHeiLa.Rest.RestGame.html": {
    "href": "api/KaiHeiLa.Rest.RestGame.html",
    "title": "Class RestGame | KaiHeiLa.Net 文档",
    "keywords": "Class RestGame Represents a game object. Inheritance System.Object RestEntity < System.Int32 > RestGame Implements IEntity < System.Int32 > IGame IActivity IEntity < System.Int32 > IDeletable Inherited Members RestEntity<Int32>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestGame : RestEntity<int>, IEntity<int>, IGame, IActivity, IEntity<int>, IDeletable Properties | Improve this Doc View Source GameType Gets the type of the game. Declaration public GameType GameType { get; } Property Value Type Description GameType The type of the game. | Improve this Doc View Source Icon Declaration public string Icon { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Options Declaration public string Options { get; } Property Value Type Description System.String | Improve this Doc View Source ProcessNames Declaration public IReadOnlyCollection<string> ProcessNames { get; } Property Value Type Description IReadOnlyCollection < System.String > | Improve this Doc View Source ProductNames Declaration public IReadOnlyCollection<string> ProductNames { get; } Property Value Type Description IReadOnlyCollection < System.String > | Improve this Doc View Source RequireAdminPrivilege Declaration public bool RequireAdminPrivilege { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DeleteAsync(RequestOptions) Declaration public Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source ModifyAsync(Action<GameProperties>, RequestOptions) Declaration public Task<RestGame> ModifyAsync(Action<GameProperties> func, RequestOptions options = null) Parameters Type Name Description Action < GameProperties > func RequestOptions options Returns Type Description Task < RestGame > Implements IEntity<TId> IGame IActivity IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.Rest.RestGuild.html": {
    "href": "api/KaiHeiLa.Rest.RestGuild.html",
    "title": "Class RestGuild | KaiHeiLa.Net 文档",
    "keywords": "Class RestGuild Represents a REST-based guild/server. Inheritance System.Object RestEntity < System.UInt64 > RestGuild Implements IEntity < System.UInt64 > IGuild IEntity < System.UInt64 > IUpdateable Inherited Members RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestGuild : RestEntity<ulong>, IEntity<ulong>, IGuild, IEntity<ulong>, IUpdateable Properties | Improve this Doc View Source AutoDeleteTime TODO: To be documented. Declaration public string AutoDeleteTime { get; } Property Value Type Description System.String | Improve this Doc View Source BoostLevel Gets the level of guild boosting in this guild. Declaration public BoostLevel BoostLevel { get; } Property Value Type Description BoostLevel The level of guild boosting in this guild. | Improve this Doc View Source BoostNumber Declaration public int BoostNumber { get; } Property Value Type Description System.Int32 | Improve this Doc View Source BufferBoostNumber Declaration public int BufferBoostNumber { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Channels Gets a collection of all channels in this guild. Declaration public IReadOnlyCollection<RestChannel> Channels { get; } Property Value Type Description IReadOnlyCollection < RestChannel > | Improve this Doc View Source DefaultChannelId Declaration public ulong DefaultChannelId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source EveryoneRole Gets the built-in role containing all users in this guild. Declaration public RestRole EveryoneRole { get; } Property Value Type Description RestRole | Improve this Doc View Source Features Gets the features of this guild. Declaration public object[] Features { get; } Property Value Type Description System.Object [] An array of objects representing the features of this guild. Remarks important What this property represents is not well investigated. | Improve this Doc View Source Icon Declaration public string Icon { get; } Property Value Type Description System.String | Improve this Doc View Source IsOpenEnabled Declaration public bool IsOpenEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxBitrate Declaration public int MaxBitrate { get; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxUploadLimit Declaration public ulong MaxUploadLimit { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source NotifyType Gets the default notification type for this guild. Declaration public NotifyType NotifyType { get; } Property Value Type Description NotifyType A NotifyType representing the default notification type for this guild. | Improve this Doc View Source OpenId Declaration public uint OpenId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source OwnerId Declaration public ulong OwnerId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source RecommendInfo Gets the recommendation information for this guild. Declaration public RecommendInfo RecommendInfo { get; } Property Value Type Description RecommendInfo A recommendation object that represents the recommendation information for this guild; null if the guild does not have a recommendation. | Improve this Doc View Source Region Declaration public string Region { get; } Property Value Type Description System.String | Improve this Doc View Source Roles Gets a collection of all roles in this guild. Declaration public IReadOnlyCollection<RestRole> Roles { get; } Property Value Type Description IReadOnlyCollection < RestRole > | Improve this Doc View Source Status TODO: To be documented. Declaration public int Status { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Topic Declaration public string Topic { get; } Property Value Type Description System.String | Improve this Doc View Source WelcomeChannelId Declaration public ulong WelcomeChannelId { get; } Property Value Type Description System.UInt64 Methods | Improve this Doc View Source AddBanAsync(IUser, Int32, String, RequestOptions) Declaration public Task AddBanAsync(IUser user, int pruneDays = 0, string reason = null, RequestOptions options = null) Parameters Type Name Description IUser user System.Int32 pruneDays System.String reason RequestOptions options Returns Type Description Task | Improve this Doc View Source AddBanAsync(UInt64, Int32, String, RequestOptions) Declaration public Task AddBanAsync(ulong userId, int pruneDays = 0, string reason = null, RequestOptions options = null) Parameters Type Name Description System.UInt64 userId System.Int32 pruneDays System.String reason RequestOptions options Returns Type Description Task | Improve this Doc View Source CreateCategoryChannelAsync(String, Action<CreateCategoryChannelProperties>, RequestOptions) Creates a category channel with the provided name. Declaration public Task<RestCategoryChannel> CreateCategoryChannelAsync(string name, Action<CreateCategoryChannelProperties> func = null, RequestOptions options = null) Parameters Type Name Description System.String name The name of the new channel. Action < CreateCategoryChannelProperties > func The delegate containing the properties to be applied to the channel upon its creation. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestCategoryChannel > The created category channel. | Improve this Doc View Source CreateEmoteAsync(String, Image, RequestOptions) Declaration public Task<GuildEmote> CreateEmoteAsync(string name, Image image, RequestOptions options = null) Parameters Type Name Description System.String name Image image RequestOptions options Returns Type Description Task < GuildEmote > | Improve this Doc View Source CreateInviteAsync(InviteMaxAge, InviteMaxUses, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(InviteMaxAge maxAge = default(InviteMaxAge), InviteMaxUses maxUses = default(InviteMaxUses), RequestOptions options = null) Parameters Type Name Description InviteMaxAge maxAge InviteMaxUses maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(int? maxAge, int? maxUses = null, RequestOptions options = null) Parameters Type Name Description System.Nullable < System.Int32 > maxAge System.Nullable < System.Int32 > maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source CreateRoleAsync(String, RequestOptions) Creates a new role with the provided name. Declaration public Task<RestRole> CreateRoleAsync(string name, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the role. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestRole > A task that represents the asynchronous creation operation. The task result contains the newly created role. | Improve this Doc View Source CreateTextChannelAsync(String, Action<CreateTextChannelProperties>, RequestOptions) Creates a new text channel in this guild. Declaration public Task<RestTextChannel> CreateTextChannelAsync(string name, Action<CreateTextChannelProperties> func = null, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the text channel. Action < CreateTextChannelProperties > func The delegate containing the properties to be applied to the channel upon its creation. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestTextChannel > A task that represents the asynchronous creation operation. The task result contains the newly created text channel. | Improve this Doc View Source CreateVoiceChannelAsync(String, Action<CreateVoiceChannelProperties>, RequestOptions) Creates a voice channel with the provided name. Declaration public Task<RestVoiceChannel> CreateVoiceChannelAsync(string name, Action<CreateVoiceChannelProperties> func = null, RequestOptions options = null) Parameters Type Name Description System.String name The name of the new channel. Action < CreateVoiceChannelProperties > func The delegate containing the properties to be applied to the channel upon its creation. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestVoiceChannel > The created voice channel. | Improve this Doc View Source DeleteEmoteAsync(GuildEmote, RequestOptions) Declaration public Task DeleteEmoteAsync(GuildEmote emote, RequestOptions options = null) Parameters Type Name Description GuildEmote emote RequestOptions options Returns Type Description Task | Improve this Doc View Source GetBadgeAsync(BadgeStyle, RequestOptions) Declaration public Task<Stream> GetBadgeAsync(BadgeStyle style = default(BadgeStyle), RequestOptions options = null) Parameters Type Name Description BadgeStyle style RequestOptions options Returns Type Description Task < Stream > | Improve this Doc View Source GetBanAsync(IUser, RequestOptions) Gets a ban object for a banned user. Declaration public Task<RestBan> GetBanAsync(IUser user, RequestOptions options = null) Parameters Type Name Description IUser user The banned user. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestBan > A task that represents the asynchronous get operation. The task result contains a ban object, which contains the user information and the reason for the ban; null if the ban entry cannot be found. | Improve this Doc View Source GetBanAsync(UInt64, RequestOptions) Gets a ban object for a banned user. Declaration public Task<RestBan> GetBanAsync(ulong userId, RequestOptions options = null) Parameters Type Name Description System.UInt64 userId The identifier for the banned user. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestBan > A task that represents the asynchronous get operation. The task result contains a ban object, which contains the user information and the reason for the ban; null if the ban entry cannot be found. | Improve this Doc View Source GetBansAsync(RequestOptions) Gets a collection of all users banned in this guild. Declaration public Task<IReadOnlyCollection<RestBan>> GetBansAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < RestBan >> A task that represents the asynchronous get operation. The task result contains a read-only collection of ban objects that this guild currently possesses, with each object containing the user banned and reason behind the ban. | Improve this Doc View Source GetCategoryChannelsAsync(RequestOptions) Gets a collection of all category channels in this guild. Declaration public Task<IReadOnlyCollection<RestCategoryChannel>> GetCategoryChannelsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < RestCategoryChannel >> A task that represents the asynchronous get operation. The task result contains a read-only collection of category channels found within this guild. | Improve this Doc View Source GetChannelAsync(UInt64, RequestOptions) Gets a channel in this guild. Declaration public Task<RestGuildChannel> GetChannelAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier for the channel. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestGuildChannel > A task that represents the asynchronous get operation. The task result contains the generic channel associated with the specified id ; null if none is found. | Improve this Doc View Source GetChannelsAsync(RequestOptions) Gets a collection of all channels in this guild. Declaration public Task<IReadOnlyCollection<RestGuildChannel>> GetChannelsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < RestGuildChannel >> A task that represents the asynchronous get operation. The task result contains a read-only collection of generic channels found within this guild. | Improve this Doc View Source GetCurrentUserAsync(RequestOptions) Gets the current user for this guild. Declaration public Task<RestGuildUser> GetCurrentUserAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestGuildUser > A task that represents the asynchronous get operation. The task result contains the currently logged-in user within this guild. | Improve this Doc View Source GetDefaultChannelAsync(RequestOptions) Gets the default text channel in this guild. Declaration public Task<RestTextChannel> GetDefaultChannelAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestTextChannel > A task that represents the asynchronous get operation. The task result contains the default text channel of this guild; null if none is found. | Improve this Doc View Source GetEmoteAsync(String, RequestOptions) Declaration public Task<GuildEmote> GetEmoteAsync(string id, RequestOptions options = null) Parameters Type Name Description System.String id RequestOptions options Returns Type Description Task < GuildEmote > | Improve this Doc View Source GetEmotesAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<GuildEmote>> GetEmotesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < GuildEmote >> | Improve this Doc View Source GetInvitesAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<IInvite>> GetInvitesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < IInvite >> | Improve this Doc View Source GetMutedDeafenedUsersAsync(RequestOptions) Gets the users who are muted or deafened in this guild. Declaration public Task<(IReadOnlyCollection<Cacheable<RestUser, ulong>> Muted, IReadOnlyCollection<Cacheable<RestUser, ulong>> Deafened)> GetMutedDeafenedUsersAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < IReadOnlyCollection < Cacheable < RestUser , System.UInt64 >>, IReadOnlyCollection < Cacheable < RestUser , System.UInt64 >>>> A task that represents the asynchronous get operation. The task result contains the collection of muted or deafened users in this guild. | Improve this Doc View Source GetOwnerAsync(RequestOptions) Gets the owner of this guild. Declaration public Task<RestGuildUser> GetOwnerAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestGuildUser > A task that represents the asynchronous get operation. The task result contains the owner of this guild. | Improve this Doc View Source GetRole(UInt32) Gets a role in this guild. Declaration public RestRole GetRole(uint id) Parameters Type Name Description System.UInt32 id The identifier for the role. Returns Type Description RestRole A role that is associated with the specified id ; null if none is found. | Improve this Doc View Source GetTextChannelAsync(UInt64, RequestOptions) Gets a text channel in this guild. Declaration public Task<RestTextChannel> GetTextChannelAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier for the text channel. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestTextChannel > A task that represents the asynchronous get operation. The task result contains the text channel associated with the specified id ; null if none is found. | Improve this Doc View Source GetTextChannelsAsync(RequestOptions) Gets a collection of all text channels in this guild. Declaration public Task<IReadOnlyCollection<RestTextChannel>> GetTextChannelsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < RestTextChannel >> A task that represents the asynchronous get operation. The task result contains a read-only collection of message channels found within this guild. | Improve this Doc View Source GetUserAsync(UInt64, RequestOptions) Gets a user from this guild. Declaration public Task<RestGuildUser> GetUserAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier of the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestGuildUser > A task that represents the asynchronous get operation. The task result contains the guild user associated with the specified id ; null if none is found. Remarks This method retrieves a user found within this guild. | Improve this Doc View Source GetUsersAsync(RequestOptions) Gets a collection of all users in this guild. Declaration public IAsyncEnumerable<IReadOnlyCollection<RestGuildUser>> GetUsersAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestGuildUser >> A task that represents the asynchronous get operation. The task result contains a collection of guild users found within this guild. Remarks This method retrieves all users found within this guild. | Improve this Doc View Source GetVoiceChannelAsync(UInt64, RequestOptions) Gets a voice channel in this guild. Declaration public Task<RestVoiceChannel> GetVoiceChannelAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier for the voice channel. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestVoiceChannel > A task that represents the asynchronous get operation. The task result contains the voice channel associated with the specified id ; null if none is found. | Improve this Doc View Source GetVoiceChannelsAsync(RequestOptions) Gets a collection of all voice channels in this guild. Declaration public Task<IReadOnlyCollection<RestVoiceChannel>> GetVoiceChannelsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < RestVoiceChannel >> A task that represents the asynchronous get operation. The task result contains a read-only collection of voice channels found within this guild. | Improve this Doc View Source LeaveAsync(RequestOptions) Declaration public Task LeaveAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source ModifyEmoteNameAsync(GuildEmote, Action<String>, RequestOptions) Declaration public Task ModifyEmoteNameAsync(GuildEmote emote, Action<string> func, RequestOptions options = null) Parameters Type Name Description GuildEmote emote Action < System.String > func RequestOptions options Returns Type Description Task | Improve this Doc View Source MoveUsersAsync(IEnumerable<IGuildUser>, IVoiceChannel, RequestOptions) Declaration public Task MoveUsersAsync(IEnumerable<IGuildUser> users, IVoiceChannel targetChannel, RequestOptions options) Parameters Type Name Description IEnumerable < IGuildUser > users IVoiceChannel targetChannel RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveBanAsync(IUser, RequestOptions) Declaration public Task RemoveBanAsync(IUser user, RequestOptions options = null) Parameters Type Name Description IUser user RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveBanAsync(UInt64, RequestOptions) Declaration public Task RemoveBanAsync(ulong userId, RequestOptions options = null) Parameters Type Name Description System.UInt64 userId RequestOptions options Returns Type Description Task | Improve this Doc View Source SearchUsersAsync(Action<SearchGuildMemberProperties>, Int32, RequestOptions) Gets a collection of users in this guild that the name or nickname contains the provided langword_csharp_string at func . Declaration public IAsyncEnumerable<IReadOnlyCollection<RestGuildUser>> SearchUsersAsync(Action<SearchGuildMemberProperties> func, int limit = null, RequestOptions options = null) Parameters Type Name Description Action < SearchGuildMemberProperties > func A delegate containing the properties to search users with. System.Int32 limit The maximum number of users to be gotten. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestGuildUser >> A task that represents the asynchronous get operation. The task result contains a collection of guild users that matches the properties with the provided at func . Remarks The limit can not be higher than MaxUsersPerBatch . | Improve this Doc View Source ToString() Returns the name of the guild. Declaration public override string ToString() Returns Type Description System.String The name of the guild. | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Explicit Interface Implementations | Improve this Doc View Source IGuild.EveryoneRole Gets the built-in role containing all users in this guild. Declaration IRole IGuild.EveryoneRole { get; } Returns Type Description IRole A role object that represents an @everyone role in this guild. | Improve this Doc View Source IGuild.RecommendInfo Gets the recommendation information for this guild. Declaration IRecommendInfo IGuild.RecommendInfo { get; } Returns Type Description IRecommendInfo A recommendation object that represents the recommendation information for this guild; null if the guild does not have a recommendation. Implements IEntity<TId> IGuild IEntity<TId> IUpdateable"
  },
  "api/KaiHeiLa.Rest.RestGuildChannel.html": {
    "href": "api/KaiHeiLa.Rest.RestGuildChannel.html",
    "title": "Class RestGuildChannel | KaiHeiLa.Net 文档",
    "keywords": "Class RestGuildChannel Inheritance System.Object RestEntity < System.UInt64 > RestChannel RestGuildChannel RestCategoryChannel RestTextChannel RestVoiceChannel Implements IEntity < System.UInt64 > IUpdateable IGuildChannel IChannel IEntity < System.UInt64 > IDeletable Inherited Members RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestGuildChannel : RestChannel, IEntity<ulong>, IUpdateable, IGuildChannel, IChannel, IEntity<ulong>, IDeletable Properties | Improve this Doc View Source GuildId Declaration public ulong GuildId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Position Declaration public int? Position { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source RolePermissionOverwrites Declaration public virtual IReadOnlyCollection<RolePermissionOverwrite> RolePermissionOverwrites { get; } Property Value Type Description IReadOnlyCollection < RolePermissionOverwrite > | Improve this Doc View Source Type Gets the type of this channel. Declaration public ChannelType Type { get; } Property Value Type Description ChannelType A ChannelType representing the type of this channel. | Improve this Doc View Source UserPermissionOverwrites Declaration public virtual IReadOnlyCollection<UserPermissionOverwrite> UserPermissionOverwrites { get; } Property Value Type Description IReadOnlyCollection < UserPermissionOverwrite > Methods | Improve this Doc View Source AddPermissionOverwriteAsync(IGuildUser, RequestOptions) Adds the permission overwrite for the given user. Declaration public Task AddPermissionOverwriteAsync(IGuildUser user, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to add the overwrite to. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous permission operation for adding the specified permissions to the channel. | Improve this Doc View Source AddPermissionOverwriteAsync(IRole, RequestOptions) Adds the permission overwrite for the given role. Declaration public Task AddPermissionOverwriteAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role The role to add the overwrite to. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous permission operation for adding the specified permissions to the channel. | Improve this Doc View Source DeleteAsync(RequestOptions) Declaration public Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source GetPermissionOverwrite(IRole) Gets the permission overwrite for a specific role. Declaration public OverwritePermissions? GetPermissionOverwrite(IRole role) Parameters Type Name Description IRole role The role to get the overwrite from. Returns Type Description System.Nullable < OverwritePermissions > An overwrite object for the targeted role; null if none is set. | Improve this Doc View Source GetPermissionOverwrite(IUser) Gets the permission overwrite for a specific user. Declaration public OverwritePermissions? GetPermissionOverwrite(IUser user) Parameters Type Name Description IUser user The user to get the overwrite from. Returns Type Description System.Nullable < OverwritePermissions > An overwrite object for the targeted user; null if none is set. | Improve this Doc View Source ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) Declaration public Task ModifyAsync(Action<ModifyGuildChannelProperties> func, RequestOptions options = null) Parameters Type Name Description Action < ModifyGuildChannelProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) Updates the permission overwrite for the given user, if one exists. Declaration public Task ModifyPermissionOverwriteAsync(IGuildUser user, Func<OverwritePermissions, OverwritePermissions> func, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to modify the overwrite for. Func < OverwritePermissions , OverwritePermissions > func A delegate containing the values to modify the permission overwrite with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. | Improve this Doc View Source ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) Updates the permission overwrite for the given role, if one exists. Declaration public Task ModifyPermissionOverwriteAsync(IRole role, Func<OverwritePermissions, OverwritePermissions> func, RequestOptions options = null) Parameters Type Name Description IRole role The role to remove the overwrite for. Func < OverwritePermissions , OverwritePermissions > func A delegate containing the values to modify the permission overwrite with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. | Improve this Doc View Source RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) Removes the permission overwrite for the given user, if one exists. Declaration public Task RemovePermissionOverwriteAsync(IGuildUser user, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to remove the overwrite from. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. | Improve this Doc View Source RemovePermissionOverwriteAsync(IRole, RequestOptions) Removes the permission overwrite for the given role, if one exists. Declaration public Task RemovePermissionOverwriteAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role The role to remove the overwrite from. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. | Improve this Doc View Source ToString() Gets the name of this channel. Declaration public override string ToString() Returns Type Description System.String A string that is the name of this channel. | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public override Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Overrides RestChannel.UpdateAsync(RequestOptions) Explicit Interface Implementations | Improve this Doc View Source IGuildChannel.Guild Gets the guild associated with this channel. Declaration IGuild IGuildChannel.Guild { get; } Returns Type Description IGuild A guild object that this channel belongs to. Implements IEntity<TId> IUpdateable IGuildChannel IChannel IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.Rest.RestGuildUser.html": {
    "href": "api/KaiHeiLa.Rest.RestGuildUser.html",
    "title": "Class RestGuildUser | KaiHeiLa.Net 文档",
    "keywords": "Class RestGuildUser Represents a REST-based guild user. Inheritance System.Object RestEntity < System.UInt64 > RestUser RestGuildUser Implements IEntity < System.UInt64 > IUpdateable IGuildUser IUser IEntity < System.UInt64 > IMentionable IPresence Inherited Members RestUser.Username RestUser.IdentifyNumberValue RestUser.IsBot RestUser.IsBanned RestUser.IsVIP RestUser.Avatar RestUser.VIPAvatar RestUser.IsDenoiseEnabled RestUser.UserTag RestUser.IdentifyNumber RestUser.KMarkdownMention RestUser.IsOnline RestUser.ActiveClient RestUser.CreateDMChannelAsync(RequestOptions) RestUser.GetIntimacyAsync(RequestOptions) RestUser.UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) RestUser.ToString() RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestGuildUser : RestUser, IEntity<ulong>, IUpdateable, IGuildUser, IUser, IEntity<ulong>, IMentionable, IPresence Properties | Improve this Doc View Source ActiveAt Declaration public DateTimeOffset ActiveAt { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Color Gets the color the user's displayed name is being displayed in. Declaration public Color Color { get; } Property Value Type Description Color A Color struct representing the color the user's display name is being displayed in. | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source GuildId Declaration public ulong GuildId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source GuildPermissions Gets the guild-level permissions for this user. Declaration public GuildPermissions GuildPermissions { get; } Property Value Type Description GuildPermissions A GuildPermissions structure for this user, representing what permissions this user has in the guild. | Improve this Doc View Source IsMobileVerified Declaration public bool IsMobileVerified { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOwner Declaration public bool? IsOwner { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source JoinedAt Declaration public DateTimeOffset JoinedAt { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Nickname Declaration public string Nickname { get; } Property Value Type Description System.String | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source RoleIds Declaration public IReadOnlyCollection<uint> RoleIds { get; } Property Value Type Description IReadOnlyCollection < System.UInt32 > Methods | Improve this Doc View Source AddRoleAsync(IRole, RequestOptions) Declaration public Task AddRoleAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role RequestOptions options Returns Type Description Task | Improve this Doc View Source AddRoleAsync(UInt32, RequestOptions) Declaration public Task AddRoleAsync(uint roleId, RequestOptions options = null) Parameters Type Name Description System.UInt32 roleId RequestOptions options Returns Type Description Task | Improve this Doc View Source AddRolesAsync(IEnumerable<IRole>, RequestOptions) Declaration public Task AddRolesAsync(IEnumerable<IRole> roles, RequestOptions options = null) Parameters Type Name Description IEnumerable < IRole > roles RequestOptions options Returns Type Description Task | Improve this Doc View Source AddRolesAsync(IEnumerable<UInt32>, RequestOptions) Declaration public Task AddRolesAsync(IEnumerable<uint> roleIds, RequestOptions options = null) Parameters Type Name Description IEnumerable < System.UInt32 > roleIds RequestOptions options Returns Type Description Task | Improve this Doc View Source DeafenAsync(RequestOptions) Declaration public Task DeafenAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source GetConnectedVoiceChannelsAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<IVoiceChannel>> GetConnectedVoiceChannelsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < IVoiceChannel >> | Improve this Doc View Source GetPermissions(IGuildChannel) Gets the level permissions granted to this user to a given channel. Declaration public ChannelPermissions GetPermissions(IGuildChannel channel) Parameters Type Name Description IGuildChannel channel The channel to get the permission from. Returns Type Description ChannelPermissions A ChannelPermissions structure representing the permissions that a user has in the specified channel. | Improve this Doc View Source KickAsync(RequestOptions) Declaration public Task KickAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source ModifyNicknameAsync(Action<String>, RequestOptions) Declaration public Task ModifyNicknameAsync(Action<string> func, RequestOptions options = null) Parameters Type Name Description Action < System.String > func RequestOptions options Returns Type Description Task | Improve this Doc View Source MuteAsync(RequestOptions) Declaration public Task MuteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveRoleAsync(IRole, RequestOptions) Declaration public Task RemoveRoleAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveRoleAsync(UInt32, RequestOptions) Declaration public Task RemoveRoleAsync(uint roleId, RequestOptions options = null) Parameters Type Name Description System.UInt32 roleId RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveRolesAsync(IEnumerable<IRole>, RequestOptions) Declaration public Task RemoveRolesAsync(IEnumerable<IRole> roles, RequestOptions options = null) Parameters Type Name Description IEnumerable < IRole > roles RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveRolesAsync(IEnumerable<UInt32>, RequestOptions) Declaration public Task RemoveRolesAsync(IEnumerable<uint> roleIds, RequestOptions options = null) Parameters Type Name Description IEnumerable < System.UInt32 > roleIds RequestOptions options Returns Type Description Task | Improve this Doc View Source UndeafenAsync(RequestOptions) Declaration public Task UndeafenAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source UnmuteAsync(RequestOptions) Declaration public Task UnmuteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public override Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Overrides RestUser.UpdateAsync(RequestOptions) Explicit Interface Implementations | Improve this Doc View Source IGuildUser.Guild Gets the guild for this user. Declaration IGuild IGuildUser.Guild { get; } Returns Type Description IGuild A guild object that this user belongs to. Implements IEntity<TId> IUpdateable IGuildUser IUser IEntity<TId> IMentionable IPresence"
  },
  "api/KaiHeiLa.Rest.RestIntimacy.html": {
    "href": "api/KaiHeiLa.Rest.RestIntimacy.html",
    "title": "Class RestIntimacy | KaiHeiLa.Net 文档",
    "keywords": "Class RestIntimacy Gets the intimacy information associated with the specified user. Inheritance System.Object RestEntity < System.UInt64 > RestIntimacy Implements IEntity < System.UInt64 > IIntimacy IEntity < System.UInt64 > Inherited Members RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestIntimacy : RestEntity<ulong>, IEntity<ulong>, IIntimacy, IEntity<ulong> Properties | Improve this Doc View Source Images Declaration public IReadOnlyCollection<IntimacyImage> Images { get; } Property Value Type Description IReadOnlyCollection < IntimacyImage > | Improve this Doc View Source LastModifyAt Declaration public DateTimeOffset LastModifyAt { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source LastReadAt Declaration public DateTimeOffset LastReadAt { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Score Declaration public int Score { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SocialInfo Declaration public string SocialInfo { get; } Property Value Type Description System.String | Improve this Doc View Source User Gets the user associated with this intimacy. Declaration public IUser User { get; } Property Value Type Description IUser An IUser representing the user associated with this intimacy. Methods | Improve this Doc View Source UpdateAsync(Action<IntimacyProperties>, RequestOptions) Declaration public Task UpdateAsync(Action<IntimacyProperties> func, RequestOptions options = null) Parameters Type Name Description Action < IntimacyProperties > func RequestOptions options Returns Type Description Task Implements IEntity<TId> IIntimacy IEntity<TId>"
  },
  "api/KaiHeiLa.Rest.RestInvite.html": {
    "href": "api/KaiHeiLa.Rest.RestInvite.html",
    "title": "Class RestInvite | KaiHeiLa.Net 文档",
    "keywords": "Class RestInvite Inheritance System.Object RestEntity < System.UInt32 > RestInvite Implements IEntity < System.UInt32 > IInvite IEntity < System.UInt32 > IDeletable IUpdateable Inherited Members RestEntity<UInt32>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestInvite : RestEntity<uint>, IEntity<uint>, IInvite, IEntity<uint>, IDeletable, IUpdateable Properties | Improve this Doc View Source ChannelId Declaration public ulong? ChannelId { get; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source ChannelName Declaration public string ChannelName { get; } Property Value Type Description System.String | Improve this Doc View Source ChannelType Gets the type of the channel this invite is linked to. Declaration public ChannelType ChannelType { get; } Property Value Type Description ChannelType | Improve this Doc View Source Code Declaration public string Code { get; } Property Value Type Description System.String | Improve this Doc View Source ExpiresAt Declaration public DateTimeOffset? ExpiresAt { get; } Property Value Type Description System.Nullable < DateTimeOffset > | Improve this Doc View Source GuildId Declaration public ulong? GuildId { get; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source GuildName Declaration public string GuildName { get; } Property Value Type Description System.String | Improve this Doc View Source Inviter Gets the user that created this invite. Declaration public IUser Inviter { get; } Property Value Type Description IUser A user that created this invite. | Improve this Doc View Source MaxAge Declaration public TimeSpan? MaxAge { get; } Property Value Type Description System.Nullable < TimeSpan > | Improve this Doc View Source MaxUses Declaration public int? MaxUses { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source RemainingUses Declaration public int? RemainingUses { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Url Declaration public string Url { get; } Property Value Type Description System.String | Improve this Doc View Source Uses Declaration public int? Uses { get; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source DeleteAsync(RequestOptions) Declaration public Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source ToString() Gets the URL of the invite. Declaration public override string ToString() Returns Type Description System.String A string that resolves to the Url of the invite. | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Explicit Interface Implementations | Improve this Doc View Source IInvite.Channel Gets the channel this invite is linked to. Declaration IChannel IInvite.Channel { get; } Returns Type Description IChannel A generic channel that the invite points to. | Improve this Doc View Source IInvite.Guild Gets the guild this invite is linked to. Declaration IGuild IInvite.Guild { get; } Returns Type Description IGuild A guild object representing the guild that the invite points to. Implements IEntity<TId> IInvite IEntity<TId> IDeletable IUpdateable"
  },
  "api/KaiHeiLa.Rest.RestMessage.html": {
    "href": "api/KaiHeiLa.Rest.RestMessage.html",
    "title": "Class RestMessage | KaiHeiLa.Net 文档",
    "keywords": "Class RestMessage Represents a REST-based message. Inheritance System.Object RestEntity < Guid > RestMessage RestSystemMessage RestUserMessage Implements IEntity < Guid > IMessage IEntity < Guid > IDeletable IUpdateable Inherited Members RestEntity<Guid>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public abstract class RestMessage : RestEntity<Guid>, IEntity<Guid>, IMessage, IEntity<Guid>, IDeletable, IUpdateable Properties | Improve this Doc View Source Attachment Declaration public virtual Attachment Attachment { get; } Property Value Type Description Attachment | Improve this Doc View Source Author Gets the Author of the message. Declaration public IUser Author { get; } Property Value Type Description IUser | Improve this Doc View Source Cards Gets a collection of the ICard 's on the message. Declaration public virtual IReadOnlyCollection<ICard> Cards { get; } Property Value Type Description IReadOnlyCollection < ICard > | Improve this Doc View Source Channel Gets the source channel of the message. Declaration public IMessageChannel Channel { get; } Property Value Type Description IMessageChannel | Improve this Doc View Source CleanContent Declaration public string CleanContent { get; } Property Value Type Description System.String | Improve this Doc View Source Content Declaration public string Content { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source EditedTimestamp Declaration public DateTimeOffset? EditedTimestamp { get; } Property Value Type Description System.Nullable < DateTimeOffset > | Improve this Doc View Source Embeds Gets a collection of the IEmbed 's on the message. Declaration public virtual IReadOnlyCollection<IEmbed> Embeds { get; } Property Value Type Description IReadOnlyCollection < IEmbed > | Improve this Doc View Source IsPinned Declaration public virtual bool? IsPinned { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source MentionedEveryone Declaration public virtual bool? MentionedEveryone { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source MentionedHere Declaration public virtual bool? MentionedHere { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source MentionedRoleIds Declaration public virtual IReadOnlyCollection<uint> MentionedRoleIds { get; } Property Value Type Description IReadOnlyCollection < System.UInt32 > | Improve this Doc View Source MentionedUsers Gets a collection of the mentioned users in the message. Declaration public IReadOnlyCollection<RestUser> MentionedUsers { get; } Property Value Type Description IReadOnlyCollection < RestUser > | Improve this Doc View Source Reactions Declaration public IReadOnlyDictionary<IEmote, ReactionMetadata> Reactions { get; } Property Value Type Description IReadOnlyDictionary < IEmote , ReactionMetadata > | Improve this Doc View Source Source Gets the source type of this message. Declaration public MessageSource Source { get; } Property Value Type Description MessageSource | Improve this Doc View Source Tags Declaration public virtual IReadOnlyCollection<ITag> Tags { get; } Property Value Type Description IReadOnlyCollection < ITag > | Improve this Doc View Source Timestamp Declaration public DateTimeOffset Timestamp { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Type Gets the type of this message. Declaration public MessageType Type { get; } Property Value Type Description MessageType Methods | Improve this Doc View Source AddReactionAsync(IEmote, RequestOptions) Declaration public Task AddReactionAsync(IEmote emote, RequestOptions options = null) Parameters Type Name Description IEmote emote RequestOptions options Returns Type Description Task | Improve this Doc View Source DeleteAsync(RequestOptions) Declaration public Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source GetReactionUsersAsync(IEmote, RequestOptions) Declaration public Task<IReadOnlyCollection<IUser>> GetReactionUsersAsync(IEmote emote, RequestOptions options = null) Parameters Type Name Description IEmote emote RequestOptions options Returns Type Description Task < IReadOnlyCollection < IUser >> | Improve this Doc View Source RemoveReactionAsync(IEmote, IUser, RequestOptions) Declaration public Task RemoveReactionAsync(IEmote emote, IUser user, RequestOptions options = null) Parameters Type Name Description IEmote emote IUser user RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveReactionAsync(IEmote, UInt64, RequestOptions) Declaration public Task RemoveReactionAsync(IEmote emote, ulong userId, RequestOptions options = null) Parameters Type Name Description IEmote emote System.UInt64 userId RequestOptions options Returns Type Description Task | Improve this Doc View Source ToString() Gets the Content of the message. Declaration public override string ToString() Returns Type Description System.String A string that is the Content of the message. | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Explicit Interface Implementations | Improve this Doc View Source IMessage.Attachment Gets the attachment included in this message. Declaration IAttachment IMessage.Attachment { get; } Returns Type Description IAttachment The attachment included in this message; | Improve this Doc View Source IMessage.Author Declaration IUser IMessage.Author { get; } Returns Type Description IUser Implements IEntity<TId> IMessage IEntity<TId> IDeletable IUpdateable"
  },
  "api/KaiHeiLa.Rest.RestReaction.html": {
    "href": "api/KaiHeiLa.Rest.RestReaction.html",
    "title": "Class RestReaction | KaiHeiLa.Net 文档",
    "keywords": "Class RestReaction Inheritance System.Object RestReaction Implements IReaction Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestReaction : object, IReaction Properties | Improve this Doc View Source Count Gets the number of reactions added. Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Emote The IEmote used in the reaction. Declaration public IEmote Emote { get; } Property Value Type Description IEmote | Improve this Doc View Source Me Gets whether the reactions is added by the user. Declaration public bool Me { get; } Property Value Type Description System.Boolean Implements IReaction"
  },
  "api/KaiHeiLa.Rest.RestRole.html": {
    "href": "api/KaiHeiLa.Rest.RestRole.html",
    "title": "Class RestRole | KaiHeiLa.Net 文档",
    "keywords": "Class RestRole Represents a REST-based role. Inheritance System.Object RestEntity < System.UInt32 > RestRole Implements IEntity < System.UInt32 > IRole IEntity < System.UInt32 > IDeletable IMentionable IComparable < IRole > Inherited Members RestEntity<UInt32>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestRole : RestEntity<uint>, IEntity<uint>, IRole, IEntity<uint>, IDeletable, IMentionable, IComparable<IRole> Properties | Improve this Doc View Source Color Gets the color given to users of this role. Declaration public Color Color { get; } Property Value Type Description Color A Color struct representing the color of this role. | Improve this Doc View Source IsEveryone Returns a value that determines if the role is an @everyone role. Declaration public bool IsEveryone { get; } Property Value Type Description System.Boolean true if the role is @everyone; otherwise false . | Improve this Doc View Source IsHoisted Declaration public bool IsHoisted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMentionable Declaration public bool IsMentionable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KMarkdownMention Declaration public string KMarkdownMention { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Permissions Gets the permissions granted to members of this role. Declaration public GuildPermissions Permissions { get; } Property Value Type Description GuildPermissions A GuildPermissions struct that this role possesses. | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source Position Declaration public int Position { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public RoleType? Type { get; set; } Property Value Type Description System.Nullable < RoleType > Methods | Improve this Doc View Source CompareTo(IRole) Declaration public int CompareTo(IRole role) Parameters Type Name Description IRole role Returns Type Description System.Int32 | Improve this Doc View Source DeleteAsync(RequestOptions) Declaration public Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source GetUsersAsync(RequestOptions) Gets a collection of users with this role. Declaration public IAsyncEnumerable<IReadOnlyCollection<IGuildUser>> GetUsersAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IGuildUser >> Paged collection of users with this role. | Improve this Doc View Source ModifyAsync(Action<RoleProperties>, RequestOptions) Declaration public Task ModifyAsync(Action<RoleProperties> func, RequestOptions options = null) Parameters Type Name Description Action < RoleProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source ToString() Gets the name of the role. Declaration public override string ToString() Returns Type Description System.String A string that is the name of the role. Explicit Interface Implementations | Improve this Doc View Source IRole.Guild Gets the guild that owns this role. Declaration IGuild IRole.Guild { get; } Returns Type Description IGuild A guild representing the parent guild of this role. Implements IEntity<TId> IRole IEntity<TId> IDeletable IMentionable IComparable<>"
  },
  "api/KaiHeiLa.Rest.RestSelfUser.html": {
    "href": "api/KaiHeiLa.Rest.RestSelfUser.html",
    "title": "Class RestSelfUser | KaiHeiLa.Net 文档",
    "keywords": "Class RestSelfUser Represents the logged-in REST-based user. Inheritance System.Object RestEntity < System.UInt64 > RestUser RestSelfUser Implements IEntity < System.UInt64 > IUpdateable ISelfUser IUser IEntity < System.UInt64 > IMentionable IPresence Inherited Members RestUser.Username RestUser.IdentifyNumberValue RestUser.IsBot RestUser.IsBanned RestUser.IsVIP RestUser.Avatar RestUser.VIPAvatar RestUser.IsDenoiseEnabled RestUser.UserTag RestUser.IdentifyNumber RestUser.KMarkdownMention RestUser.PlainTextMention RestUser.IsOnline RestUser.ActiveClient RestUser.CreateDMChannelAsync(RequestOptions) RestUser.GetIntimacyAsync(RequestOptions) RestUser.UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) RestUser.ToString() RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestSelfUser : RestUser, IEntity<ulong>, IUpdateable, ISelfUser, IUser, IEntity<ulong>, IMentionable, IPresence Properties | Improve this Doc View Source InvitedCount Declaration public int InvitedCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsMobileVerified Declaration public bool IsMobileVerified { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Mobile Declaration public string Mobile { get; } Property Value Type Description System.String | Improve this Doc View Source MobilePrefix Declaration public string MobilePrefix { get; } Property Value Type Description System.String Methods | Improve this Doc View Source StartPlayingAsync(IGame, RequestOptions) Declaration public Task StartPlayingAsync(IGame game, RequestOptions options = null) Parameters Type Name Description IGame game RequestOptions options Returns Type Description Task | Improve this Doc View Source StartPlayingAsync(Music, RequestOptions) Declaration public Task StartPlayingAsync(Music music, RequestOptions options = null) Parameters Type Name Description Music music RequestOptions options Returns Type Description Task | Improve this Doc View Source StopPlayingAsync(ActivityType, RequestOptions) Declaration public Task StopPlayingAsync(ActivityType type, RequestOptions options = null) Parameters Type Name Description ActivityType type RequestOptions options Returns Type Description Task | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public override Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Overrides RestUser.UpdateAsync(RequestOptions) Implements IEntity<TId> IUpdateable ISelfUser IUser IEntity<TId> IMentionable IPresence"
  },
  "api/KaiHeiLa.Rest.RestSystemMessage.html": {
    "href": "api/KaiHeiLa.Rest.RestSystemMessage.html",
    "title": "Class RestSystemMessage | KaiHeiLa.Net 文档",
    "keywords": "Class RestSystemMessage Represents a REST-based system message. Inheritance System.Object RestEntity < Guid > RestMessage RestSystemMessage Implements IEntity < Guid > IUpdateable ISystemMessage IMessage IEntity < Guid > IDeletable Inherited Members RestMessage.Type RestMessage.Channel RestMessage.Author RestMessage.Source RestMessage.Content RestMessage.CleanContent RestMessage.Attachment RestMessage.Timestamp RestMessage.EditedTimestamp RestMessage.MentionedEveryone RestMessage.MentionedHere RestMessage.Cards RestMessage.Embeds RestMessage.MentionedRoleIds RestMessage.MentionedUsers RestMessage.Tags RestMessage.IsPinned RestMessage.ToString() RestMessage.Reactions RestMessage.DeleteAsync(RequestOptions) RestMessage.UpdateAsync(RequestOptions) RestMessage.AddReactionAsync(IEmote, RequestOptions) RestMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions) RestMessage.RemoveReactionAsync(IEmote, UInt64, RequestOptions) RestMessage.GetReactionUsersAsync(IEmote, RequestOptions) RestMessage.IMessage.Author RestMessage.IMessage.Attachment RestEntity<Guid>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestSystemMessage : RestMessage, IEntity<Guid>, IUpdateable, ISystemMessage, IMessage, IEntity<Guid>, IDeletable Properties | Improve this Doc View Source SystemMessageType Gets the type of the system message. Declaration public SystemMessageType SystemMessageType { get; set; } Property Value Type Description SystemMessageType Remarks warning Because the data from KaiHeiLa does not describe the type of the message in detail, this property is not implemented yet. Accessing this property will always result in an exception at present. Implements IEntity<TId> IUpdateable ISystemMessage IMessage IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.Rest.RestTextChannel.html": {
    "href": "api/KaiHeiLa.Rest.RestTextChannel.html",
    "title": "Class RestTextChannel | KaiHeiLa.Net 文档",
    "keywords": "Class RestTextChannel Represents a REST-based channel in a guild that can send and receive messages. Inheritance System.Object RestEntity < System.UInt64 > RestChannel RestGuildChannel RestTextChannel Implements IEntity < System.UInt64 > IUpdateable IRestMessageChannel ITextChannel INestedChannel IGuildChannel IDeletable IMentionable IMessageChannel IChannel IEntity < System.UInt64 > Inherited Members RestGuildChannel.RolePermissionOverwrites RestGuildChannel.UserPermissionOverwrites RestGuildChannel.Type RestGuildChannel.Name RestGuildChannel.Position RestGuildChannel.GuildId RestGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) RestGuildChannel.DeleteAsync(RequestOptions) RestGuildChannel.UpdateAsync(RequestOptions) RestGuildChannel.GetPermissionOverwrite(IUser) RestGuildChannel.GetPermissionOverwrite(IRole) RestGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) RestGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) RestGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) RestGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) RestGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) RestGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) RestGuildChannel.ToString() RestGuildChannel.IGuildChannel.Guild RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestTextChannel : RestGuildChannel, IEntity<ulong>, IUpdateable, IRestMessageChannel, ITextChannel, INestedChannel, IGuildChannel, IDeletable, IMentionable, IMessageChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source CategoryId Declaration public ulong? CategoryId { get; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source CreatorId Declaration public ulong CreatorId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source IsPermissionSynced Declaration public bool IsPermissionSynced { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KMarkdownMention Declaration public string KMarkdownMention { get; } Property Value Type Description System.String | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source SlowModeInterval Declaration public virtual int SlowModeInterval { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Topic Declaration public string Topic { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CreateInviteAsync(InviteMaxAge, InviteMaxUses, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(InviteMaxAge maxAge = default(InviteMaxAge), InviteMaxUses maxUses = default(InviteMaxUses), RequestOptions options = null) Parameters Type Name Description InviteMaxAge maxAge InviteMaxUses maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(int? maxAge, int? maxUses = null, RequestOptions options = null) Parameters Type Name Description System.Nullable < System.Int32 > maxAge System.Nullable < System.Int32 > maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source DeleteMessageAsync(Guid, RequestOptions) Declaration public Task DeleteMessageAsync(Guid messageId, RequestOptions options = null) Parameters Type Name Description Guid messageId RequestOptions options Returns Type Description Task | Improve this Doc View Source DeleteMessageAsync(IMessage, RequestOptions) Declaration public Task DeleteMessageAsync(IMessage message, RequestOptions options = null) Parameters Type Name Description IMessage message RequestOptions options Returns Type Description Task | Improve this Doc View Source GetCategoryAsync(RequestOptions) Gets the parent (category) channel of this channel. Declaration public Task<ICategoryChannel> GetCategoryAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < ICategoryChannel > A task that represents the asynchronous get operation. The task result contains the category channel representing the parent of this channel; null if none is set. | Improve this Doc View Source GetCreatorAsync(RequestOptions) Gets the creator of this channel. Declaration public Task<RestUser> GetCreatorAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestUser > A task that represents the asynchronous get operation. The task result contains the creator of this channel. Remarks This method will try to get the user as a global user. To get the creator as a guild member, you will need to get the user through .\"/> | Improve this Doc View Source GetInvitesAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<IInvite>> GetInvitesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < IInvite >> | Improve this Doc View Source GetMessageAsync(Guid, RequestOptions) Gets a message from this message channel. Declaration public Task<RestMessage> GetMessageAsync(Guid id, RequestOptions options = null) Parameters Type Name Description Guid id The identifier of the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestMessage > A task that represents an asynchronous get operation for retrieving the message. The task result contains the retrieved message; null if no message is found with the specified identifier. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(Guid, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<RestMessage>> GetMessagesAsync(Guid referenceMessageId, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description Guid referenceMessageId The ID of the starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(IMessage, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<RestMessage>> GetMessagesAsync(IMessage referenceMessage, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description IMessage referenceMessage The starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(Int32, RequestOptions) Gets the last N messages from this message channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<RestMessage>> GetMessagesAsync(int limit = null, RequestOptions options = null) Parameters Type Name Description System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetPinnedMessagesAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<RestMessage>> GetPinnedMessagesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < RestMessage >> | Improve this Doc View Source GetUserAsync(UInt64, RequestOptions) Gets a user in this channel. Declaration public Task<RestGuildUser> GetUserAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier of the user. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestGuildUser > A task representing the asynchronous get operation. The task result contains a guild user object that represents the user; null if none is found. | Improve this Doc View Source GetUsersAsync(RequestOptions) Gets a collection of users that are able to view the channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<RestGuildUser>> GetUsersAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < RestGuildUser >> A paged collection containing a collection of guild users that can access this channel. Flattening the paginated response into a collection of users with KaiHeiLa.AsyncEnumerableExtensions.FlattenAsync``1(IAsyncEnumerable{`0}) is required if you wish to access the users. | Improve this Doc View Source ModifyAsync(Action<ModifyTextChannelProperties>, RequestOptions) Declaration public virtual Task ModifyAsync(Action<ModifyTextChannelProperties> func, RequestOptions options = null) Parameters Type Name Description Action < ModifyTextChannelProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source ModifyMessageAsync(Guid, Action<MessageProperties>, RequestOptions) Declaration public Task ModifyMessageAsync(Guid messageId, Action<MessageProperties> func, RequestOptions options = null) Parameters Type Name Description Guid messageId Action < MessageProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source SendCardMessageAsync(IEnumerable<ICard>, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(IEnumerable<ICard> cards, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description IEnumerable < ICard > cards Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendCardMessageAsync(ICard, Quote, IUser, RequestOptions) Sends a card message to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(ICard card, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description ICard card The card to be sent. Quote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendFileMessageAsync(Stream, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(Stream stream, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendFileMessageAsync(String, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(string path, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendImageMessageAsync(Stream, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(Stream stream, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendImageMessageAsync(String, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(string path, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendKMarkdownMessageAsync(String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendKMarkdownMessageAsync(string text, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String text Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendTextMessageAsync(String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendTextMessageAsync(string text, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String text Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendVideoMessageAsync(Stream, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(Stream stream, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendVideoMessageAsync(String, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(string path, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> Implements IEntity<TId> IUpdateable IRestMessageChannel ITextChannel INestedChannel IGuildChannel IDeletable IMentionable IMessageChannel IChannel IEntity<TId>"
  },
  "api/KaiHeiLa.Rest.RestUser.html": {
    "href": "api/KaiHeiLa.Rest.RestUser.html",
    "title": "Class RestUser | KaiHeiLa.Net 文档",
    "keywords": "Class RestUser Represents a REST-based user. Inheritance System.Object RestEntity < System.UInt64 > RestUser RestGuildUser RestSelfUser Implements IEntity < System.UInt64 > IUser IEntity < System.UInt64 > IMentionable IPresence IUpdateable Inherited Members RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestUser : RestEntity<ulong>, IEntity<ulong>, IUser, IEntity<ulong>, IMentionable, IPresence, IUpdateable Properties | Improve this Doc View Source ActiveClient Declaration public ClientType? ActiveClient { get; } Property Value Type Description System.Nullable < ClientType > | Improve this Doc View Source Avatar Declaration public string Avatar { get; } Property Value Type Description System.String | Improve this Doc View Source IdentifyNumber Declaration public string IdentifyNumber { get; } Property Value Type Description System.String | Improve this Doc View Source IdentifyNumberValue Declaration public ushort? IdentifyNumberValue { get; } Property Value Type Description System.Nullable < System.UInt16 > | Improve this Doc View Source IsBanned Declaration public bool? IsBanned { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsBot Declaration public bool? IsBot { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsDenoiseEnabled Declaration public bool? IsDenoiseEnabled { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsOnline Declaration public bool? IsOnline { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsVIP Declaration public bool? IsVIP { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source KMarkdownMention Declaration public string KMarkdownMention { get; } Property Value Type Description System.String | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source Username Declaration public string Username { get; } Property Value Type Description System.String | Improve this Doc View Source UserTag Get the tag this user has. Declaration public UserTag UserTag { get; } Property Value Type Description UserTag | Improve this Doc View Source VIPAvatar Declaration public string VIPAvatar { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CreateDMChannelAsync(RequestOptions) Creates a direct message channel to this user. Declaration public Task<RestDMChannel> CreateDMChannelAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestDMChannel > A task that represents the asynchronous get operation. The task result contains a rest DM channel where the user is the recipient. | Improve this Doc View Source GetIntimacyAsync(RequestOptions) Gets the intimacy information with this user. Declaration public Task<RestIntimacy> GetIntimacyAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestIntimacy > A task that represents the asynchronous operation for getting the intimacy information. The task result contains the intimacy information associated with this user. | Improve this Doc View Source ToString() Gets the Username#IdentifyNumber of the user. Declaration public override string ToString() Returns Type Description System.String A string that resolves to Username#IdentifyNumber of the user. | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public virtual Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) Declaration public Task UpdateIntimacyAsync(Action<IntimacyProperties> func, RequestOptions options = null) Parameters Type Name Description Action < IntimacyProperties > func RequestOptions options Returns Type Description Task Implements IEntity<TId> IUser IEntity<TId> IMentionable IPresence IUpdateable"
  },
  "api/KaiHeiLa.Rest.RestUserMessage.html": {
    "href": "api/KaiHeiLa.Rest.RestUserMessage.html",
    "title": "Class RestUserMessage | KaiHeiLa.Net 文档",
    "keywords": "Class RestUserMessage Represents a REST-based message sent by a user. Inheritance System.Object RestEntity < Guid > RestMessage RestUserMessage Implements IEntity < Guid > IUpdateable IUserMessage IMessage IEntity < Guid > IDeletable Inherited Members RestMessage.Type RestMessage.Channel RestMessage.Author RestMessage.Source RestMessage.Content RestMessage.CleanContent RestMessage.Timestamp RestMessage.EditedTimestamp RestMessage.MentionedUsers RestMessage.ToString() RestMessage.Reactions RestMessage.DeleteAsync(RequestOptions) RestMessage.UpdateAsync(RequestOptions) RestMessage.AddReactionAsync(IEmote, RequestOptions) RestMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions) RestMessage.RemoveReactionAsync(IEmote, UInt64, RequestOptions) RestMessage.GetReactionUsersAsync(IEmote, RequestOptions) RestMessage.IMessage.Author RestMessage.IMessage.Attachment RestEntity<Guid>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestUserMessage : RestMessage, IEntity<Guid>, IUpdateable, IUserMessage, IMessage, IEntity<Guid>, IDeletable Properties | Improve this Doc View Source Attachment Declaration public override Attachment Attachment { get; } Property Value Type Description Attachment Overrides RestMessage.Attachment | Improve this Doc View Source Cards Gets a collection of the ICard 's on the message. Declaration public override IReadOnlyCollection<ICard> Cards { get; } Property Value Type Description IReadOnlyCollection < ICard > Overrides RestMessage.Cards | Improve this Doc View Source Embeds Gets a collection of the IEmbed 's on the message. Declaration public override IReadOnlyCollection<IEmbed> Embeds { get; } Property Value Type Description IReadOnlyCollection < IEmbed > Overrides RestMessage.Embeds | Improve this Doc View Source IsPinned Gets the value that indicates whether this message is pinned. Declaration public bool? IsPinned { get; } Property Value Type Description System.Nullable < System.Boolean > true if this message was added to its channel's pinned messages; otherwise false . | Improve this Doc View Source MentionedEveryone Declaration public override bool? MentionedEveryone { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides RestMessage.MentionedEveryone | Improve this Doc View Source MentionedHere Declaration public override bool? MentionedHere { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides RestMessage.MentionedHere | Improve this Doc View Source MentionedRoleIds Declaration public override IReadOnlyCollection<uint> MentionedRoleIds { get; } Property Value Type Description IReadOnlyCollection < System.UInt32 > Overrides RestMessage.MentionedRoleIds | Improve this Doc View Source Quote Gets the message quote. Declaration public Quote Quote { get; } Property Value Type Description Quote The message quote. | Improve this Doc View Source Tags Declaration public override IReadOnlyCollection<ITag> Tags { get; } Property Value Type Description IReadOnlyCollection < ITag > Overrides RestMessage.Tags Methods | Improve this Doc View Source ModifyAsync(Action<MessageProperties>, RequestOptions) Declaration public Task ModifyAsync(Action<MessageProperties> func, RequestOptions options = null) Parameters Type Name Description Action < MessageProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling) Declaration public string Resolve(TagHandling userHandling = default(TagHandling), TagHandling channelHandling = default(TagHandling), TagHandling roleHandling = default(TagHandling), TagHandling everyoneHandling = default(TagHandling), TagHandling emojiHandling = default(TagHandling)) Parameters Type Name Description TagHandling userHandling TagHandling channelHandling TagHandling roleHandling TagHandling everyoneHandling TagHandling emojiHandling Returns Type Description System.String | Improve this Doc View Source Resolve(Int32, TagHandling, TagHandling, TagHandling, TagHandling, TagHandling) Transforms this message's text into a human-readable form by resolving its tags. Declaration public string Resolve(int startIndex, TagHandling userHandling = default(TagHandling), TagHandling channelHandling = default(TagHandling), TagHandling roleHandling = default(TagHandling), TagHandling everyoneHandling = default(TagHandling), TagHandling emojiHandling = default(TagHandling)) Parameters Type Name Description System.Int32 startIndex The zero-based index at which to begin the resolving for the specified value. TagHandling userHandling TagHandling channelHandling TagHandling roleHandling TagHandling everyoneHandling TagHandling emojiHandling Returns Type Description System.String Explicit Interface Implementations | Improve this Doc View Source IUserMessage.Quote Gets the message quote. Declaration IQuote IUserMessage.Quote { get; } Returns Type Description IQuote The message quote. Implements IEntity<TId> IUpdateable IUserMessage IMessage IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.Rest.RestVoiceChannel.html": {
    "href": "api/KaiHeiLa.Rest.RestVoiceChannel.html",
    "title": "Class RestVoiceChannel | KaiHeiLa.Net 文档",
    "keywords": "Class RestVoiceChannel Represents a REST-based voice channel in a guild. Inheritance System.Object RestEntity < System.UInt64 > RestChannel RestGuildChannel RestVoiceChannel Implements IEntity < System.UInt64 > IUpdateable IVoiceChannel INestedChannel IGuildChannel IDeletable IMentionable IRestAudioChannel IAudioChannel IChannel IEntity < System.UInt64 > Inherited Members RestGuildChannel.RolePermissionOverwrites RestGuildChannel.UserPermissionOverwrites RestGuildChannel.Type RestGuildChannel.Name RestGuildChannel.Position RestGuildChannel.GuildId RestGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) RestGuildChannel.DeleteAsync(RequestOptions) RestGuildChannel.UpdateAsync(RequestOptions) RestGuildChannel.GetPermissionOverwrite(IUser) RestGuildChannel.GetPermissionOverwrite(IRole) RestGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) RestGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) RestGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) RestGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) RestGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) RestGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) RestGuildChannel.ToString() RestGuildChannel.IGuildChannel.Guild RestEntity<UInt64>.Id Namespace : KaiHeiLa.Rest Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestVoiceChannel : RestGuildChannel, IEntity<ulong>, IUpdateable, IVoiceChannel, INestedChannel, IGuildChannel, IDeletable, IMentionable, IRestAudioChannel, IAudioChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source CategoryId Declaration public ulong? CategoryId { get; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source CreatorId Declaration public ulong CreatorId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source HasPassword Declaration public bool HasPassword { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPermissionSynced Declaration public bool IsPermissionSynced { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KMarkdownMention Declaration public string KMarkdownMention { get; } Property Value Type Description System.String | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source ServerUrl Declaration public string ServerUrl { get; } Property Value Type Description System.String | Improve this Doc View Source UserLimit Declaration public int? UserLimit { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source VoiceQuality Declaration public VoiceQuality? VoiceQuality { get; } Property Value Type Description System.Nullable < VoiceQuality > Methods | Improve this Doc View Source CreateInviteAsync(InviteMaxAge, InviteMaxUses, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(InviteMaxAge maxAge = default(InviteMaxAge), InviteMaxUses maxUses = default(InviteMaxUses), RequestOptions options = null) Parameters Type Name Description InviteMaxAge maxAge InviteMaxUses maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(int? maxAge, int? maxUses = null, RequestOptions options = null) Parameters Type Name Description System.Nullable < System.Int32 > maxAge System.Nullable < System.Int32 > maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source GetCategoryAsync(RequestOptions) Gets the parent (category) channel of this channel. Declaration public Task<ICategoryChannel> GetCategoryAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < ICategoryChannel > A task that represents the asynchronous get operation. The task result contains the category channel representing the parent of this channel; null if none is set. | Improve this Doc View Source GetCreatorAsync(RequestOptions) Gets the owner of this guild. Declaration public Task<RestUser> GetCreatorAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestUser > A task that represents the asynchronous get operation. The task result contains the owner of this guild. | Improve this Doc View Source GetInvitesAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<IInvite>> GetInvitesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < IInvite >> | Improve this Doc View Source ModifyAsync(Action<ModifyVoiceChannelProperties>, RequestOptions) Declaration public Task ModifyAsync(Action<ModifyVoiceChannelProperties> func, RequestOptions options = null) Parameters Type Name Description Action < ModifyVoiceChannelProperties > func RequestOptions options Returns Type Description Task Implements IEntity<TId> IUpdateable IVoiceChannel INestedChannel IGuildChannel IDeletable IMentionable IRestAudioChannel IAudioChannel IChannel IEntity<TId>"
  },
  "api/KaiHeiLa.RetryMode.html": {
    "href": "api/KaiHeiLa.RetryMode.html",
    "title": "Enum RetryMode | KaiHeiLa.Net 文档",
    "keywords": "Enum RetryMode Specifies how a request should act in the case of an error. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum RetryMode : int Fields Name Description AlwaysFail If a request fails, an exception is thrown immediately. AlwaysRetry Continuously retry a request until it times out, its cancel token is triggered, or the server responds with a non-502 error. Retry502 Retry if a request failed due to an HTTP error 502. RetryRatelimit Retry if a request failed due to a rate-limit. RetryTimeouts Retry if a request timed out."
  },
  "api/KaiHeiLa.RolePermissionOverwrite.html": {
    "href": "api/KaiHeiLa.RolePermissionOverwrite.html",
    "title": "Class RolePermissionOverwrite | KaiHeiLa.Net 文档",
    "keywords": "Class RolePermissionOverwrite Represent a permission object for a role. Inheritance System.Object RolePermissionOverwrite Implements IPermissionOverwrite < System.UInt32 > Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class RolePermissionOverwrite : object, IPermissionOverwrite<uint> Constructors | Improve this Doc View Source RolePermissionOverwrite(UInt32, OverwritePermissions) Initializes a new RolePermissionOverwrite with provided ID of the role and modified permissions. Declaration public RolePermissionOverwrite(uint targetId, OverwritePermissions permissions) Parameters Type Name Description System.UInt32 targetId OverwritePermissions permissions Properties | Improve this Doc View Source Permissions Gets the permissions associated with this overwrite entry for a role. Declaration public OverwritePermissions Permissions { get; } Property Value Type Description OverwritePermissions | Improve this Doc View Source Target Gets the identifier for the role this overwrite is targeting. Declaration public uint Target { get; } Property Value Type Description System.UInt32 Implements IPermissionOverwrite<TTarget>"
  },
  "api/KaiHeiLa.RoleProperties.html": {
    "href": "api/KaiHeiLa.RoleProperties.html",
    "title": "Class RoleProperties | KaiHeiLa.Net 文档",
    "keywords": "Class RoleProperties Properties that are used to modify an IRole with the specified changes. Inheritance System.Object RoleProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class RoleProperties : object Properties | Improve this Doc View Source Color Gets or sets the color of the role. Declaration public Color? Color { get; set; } Property Value Type Description System.Nullable < Color > Remarks This value may not be set if the role is an @everyone role. | Improve this Doc View Source Hoist Gets or sets whether or not this role should be displayed independently in the user list. Declaration public bool? Hoist { get; set; } Property Value Type Description System.Nullable < System.Boolean > Remarks This value may not be set if the role is an @everyone role. | Improve this Doc View Source Mentionable Gets or sets whether or not this role can be mentioned. Declaration public bool? Mentionable { get; set; } Property Value Type Description System.Nullable < System.Boolean > Remarks This value may not be set if the role is an @everyone role. | Improve this Doc View Source Name Gets or sets the name of the role. Declaration public string Name { get; set; } Property Value Type Description System.String Remarks This value may not be set if the role is an @everyone role. | Improve this Doc View Source Permissions Gets or sets the role's GuildPermission . Declaration public GuildPermissions Permissions { get; set; } Property Value Type Description GuildPermissions See Also ModifyAsync(Action<RoleProperties>, RequestOptions)"
  },
  "api/KaiHeiLa.RoleType.html": {
    "href": "api/KaiHeiLa.RoleType.html",
    "title": "Enum RoleType | KaiHeiLa.Net 文档",
    "keywords": "Enum RoleType Represents the type of a role. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum RoleType : ushort Fields Name Description Booster Represents the role representing a booster. BotSpecified Represents the role was created by system when a bot joined the guild. Everyone Represents tht role is the default everyone role. UserCreated Represents the role was created by a user."
  },
  "api/KaiHeiLa.SearchGuildMemberProperties.html": {
    "href": "api/KaiHeiLa.SearchGuildMemberProperties.html",
    "title": "Class SearchGuildMemberProperties | KaiHeiLa.Net 文档",
    "keywords": "Class SearchGuildMemberProperties Properties that are used to search for a IGuildUser in a IGuild . Inheritance System.Object SearchGuildMemberProperties Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class SearchGuildMemberProperties : object Properties | Improve this Doc View Source IsMobileVerified Gets or sets whether the user must have his/her mobile verified to be searched for; null to not search via a verified status. Declaration public bool? IsMobileVerified { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source RoleId Gets or sets the ID of the role the user must have to be searched for; null to not search via a role. Declaration public uint? RoleId { get; set; } Property Value Type Description System.Nullable < System.UInt32 > | Improve this Doc View Source SearchName Gets or sets the name of the user to be searched for; null to not search via a name. Declaration public string SearchName { get; set; } Property Value Type Description System.String | Improve this Doc View Source SortedByActiveTime Gets or sets whether and how the searching results should be sorted by the activating time of the user; null to not sort by active time. Declaration public SortMode? SortedByActiveTime { get; set; } Property Value Type Description System.Nullable < SortMode > | Improve this Doc View Source SortedByJoinTime Gets or sets whether and how the searching results should be sorted by the joining time of the user; null to not sort by joining time. Declaration public SortMode? SortedByJoinTime { get; set; } Property Value Type Description System.Nullable < SortMode > See Also SearchUsersAsync(Action<SearchGuildMemberProperties>, Int32, CacheMode, RequestOptions)"
  },
  "api/KaiHeiLa.SectionAccessoryMode.html": {
    "href": "api/KaiHeiLa.SectionAccessoryMode.html",
    "title": "Enum SectionAccessoryMode | KaiHeiLa.Net 文档",
    "keywords": "Enum SectionAccessoryMode Specifies the accessory position relative to the text element. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum SectionAccessoryMode : int Fields Name Description Left The accessory is positioned to the left of the text element. Right The accessory is positioned to the right of the text element. Unspecified How the accessory is positioned relative to the text element is not specified."
  },
  "api/KaiHeiLa.SectionModule.html": {
    "href": "api/KaiHeiLa.SectionModule.html",
    "title": "Class SectionModule | KaiHeiLa.Net 文档",
    "keywords": "Class SectionModule Represents a section module in card. Inheritance System.Object SectionModule Implements IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class SectionModule : object, IModule Properties | Improve this Doc View Source Accessory Gets the accessory of the section. Declaration public IElement Accessory { get; } Property Value Type Description IElement An IElement representing the accessory of the section. | Improve this Doc View Source Mode Specifies that the Accessory is to the left or right of Text . Declaration public SectionAccessoryMode Mode { get; } Property Value Type Description SectionAccessoryMode Left if the Accessory is to the left of Text , Right if the Accessory is to the right of Text , Unspecified if how the Accessory is positioned is not specified. | Improve this Doc View Source Text Gets the text of the section. Declaration public IElement Text { get; } Property Value Type Description IElement An IElement representing the text of the section. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IModule"
  },
  "api/KaiHeiLa.SectionModuleBuilder.html": {
    "href": "api/KaiHeiLa.SectionModuleBuilder.html",
    "title": "Class SectionModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class SectionModuleBuilder Represents a section module builder for creating a SectionModule . Inheritance System.Object SectionModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class SectionModuleBuilder : object, IModuleBuilder Properties | Improve this Doc View Source Accessory Gets or sets the accessory of the section. Declaration public IElementBuilder Accessory { get; set; } Property Value Type Description IElementBuilder An IElementBuilder representing the accessory of the section. | Improve this Doc View Source Mode Gets or sets how the Accessory is positioned relative to the Text . Declaration public SectionAccessoryMode Mode { get; set; } Property Value Type Description SectionAccessoryMode A SectionAccessoryMode representing how the Accessory is positioned relative to the Text . | Improve this Doc View Source Text Gets or sets the text of the section. Declaration public IElementBuilder Text { get; set; } Property Value Type Description IElementBuilder An IElementBuilder representing the text of the section. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source Build() Builds this builder into a SectionModule . Declaration public SectionModule Build() Returns Type Description SectionModule A SectionModule representing the built section module object. | Improve this Doc View Source WithAccessory(ButtonElementBuilder) Sets the accessory of the section. Declaration public SectionModuleBuilder WithAccessory(ButtonElementBuilder accessory) Parameters Type Name Description ButtonElementBuilder accessory The accessory to be set for the section. Returns Type Description SectionModuleBuilder The current builder. | Improve this Doc View Source WithAccessory(ImageElementBuilder) Sets the accessory of the section. Declaration public SectionModuleBuilder WithAccessory(ImageElementBuilder accessory) Parameters Type Name Description ImageElementBuilder accessory The accessory to be set for the section. Returns Type Description SectionModuleBuilder The current builder. | Improve this Doc View Source WithAccessory<T>(Action<T>) Sets the accessory of the section. Declaration public SectionModuleBuilder WithAccessory<T>(Action<T> action = null) where T : IElementBuilder, new() Parameters Type Name Description Action <T> action The action to set the accessory of the section. Returns Type Description SectionModuleBuilder The current builder. Type Parameters Name Description T | Improve this Doc View Source WithMode(SectionAccessoryMode) Sets how the Accessory is positioned relative to the Text . Declaration public SectionModuleBuilder WithMode(SectionAccessoryMode mode) Parameters Type Name Description SectionAccessoryMode mode How the Accessory is positioned relative to the Text . Returns Type Description SectionModuleBuilder The current builder. | Improve this Doc View Source WithText(KMarkdownElementBuilder) Sets the text of the section. Declaration public SectionModuleBuilder WithText(KMarkdownElementBuilder text) Parameters Type Name Description KMarkdownElementBuilder text The text to be set for the section. Returns Type Description SectionModuleBuilder The current builder. | Improve this Doc View Source WithText(ParagraphStructBuilder) Sets the text of the section. Declaration public SectionModuleBuilder WithText(ParagraphStructBuilder text) Parameters Type Name Description ParagraphStructBuilder text The text to be set for the section. Returns Type Description SectionModuleBuilder The current builder. | Improve this Doc View Source WithText(PlainTextElementBuilder) Sets the text of the section. Declaration public SectionModuleBuilder WithText(PlainTextElementBuilder text) Parameters Type Name Description PlainTextElementBuilder text The text to be set for the section. Returns Type Description SectionModuleBuilder The current builder. | Improve this Doc View Source WithText(String, Boolean) Sets the text of the section. Declaration public SectionModuleBuilder WithText(string text, bool isKMarkdown = false) Parameters Type Name Description System.String text The text to be set for the section. System.Boolean isKMarkdown A bool indicating whether the text is in KMarkdown format; if true , the text will be set as a KMarkdownElement ; if false , the text will be set as a PlainTextElement . Returns Type Description SectionModuleBuilder The current builder. | Improve this Doc View Source WithText<T>(Action<T>) Sets the text of the section. Declaration public SectionModuleBuilder WithText<T>(Action<T> action = null) where T : IElementBuilder, new() Parameters Type Name Description Action <T> action The action to set the text of the section. Returns Type Description SectionModuleBuilder The current builder. Type Parameters Name Description T Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.SortMode.html": {
    "href": "api/KaiHeiLa.SortMode.html",
    "title": "Enum SortMode | KaiHeiLa.Net 文档",
    "keywords": "Enum SortMode Specifies the sorting mode. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum SortMode : int Fields Name Description Ascending The items are sorted in ascending order. Descending The items are sorted in descending order."
  },
  "api/KaiHeiLa.SystemMessageType.html": {
    "href": "api/KaiHeiLa.SystemMessageType.html",
    "title": "Enum SystemMessageType | KaiHeiLa.Net 文档",
    "keywords": "Enum SystemMessageType Gets the type of a ISystemMessage Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum SystemMessageType : int"
  },
  "api/KaiHeiLa.Tag-1.html": {
    "href": "api/KaiHeiLa.Tag-1.html",
    "title": "Class Tag<T> | KaiHeiLa.Net 文档",
    "keywords": "Class Tag<T> Represents a tag found in IMessage . Inheritance System.Object Tag<T> Implements ITag Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class Tag<T> : object, ITag Type Parameters Name Description T Properties | Improve this Doc View Source Index Gets position of the tag in the message. Declaration public int Index { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Key Gets the key of the tag. Declaration public dynamic Key { get; } Property Value Type Description System.Object | Improve this Doc View Source Length Gets the length of the tag. Declaration public int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Gets the type of the tag. Declaration public TagType Type { get; } Property Value Type Description TagType | Improve this Doc View Source Value Gets the value of the tag. Declaration public T Value { get; } Property Value Type Description T Remarks When Type is HereMention , this property returns the same entity as EveryoneRole for convenience. because there is no actual entities representing a group of online users. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Explicit Interface Implementations | Improve this Doc View Source ITag.Value Gets the value of the tag. Declaration object ITag.Value { get; } Returns Type Description System.Object Implements ITag"
  },
  "api/KaiHeiLa.TagHandling.html": {
    "href": "api/KaiHeiLa.TagHandling.html",
    "title": "Enum TagHandling | KaiHeiLa.Net 文档",
    "keywords": "Enum TagHandling Specifies the handling type the tag should use. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum TagHandling : int Fields Name Description FullName Resolves to username with identify number value. (e.g. &lt;@53905483156684800> -> @Voltana#8252). FullNameNoPrefix Resolves to username with identify number value without mention prefix. (e.g. &lt;@53905483156684800> -> Voltana#8252). Ignore Tag handling is ignored (e.g. &lt;@53905483156684800> -> &lt;@53905483156684800>). Name Resolves to username (e.g. &lt;@53905483156684800> -> @Voltana). NameNoPrefix Resolves to username without mention prefix (e.g. &lt;@53905483156684800> -> Voltana). Remove Removes the tag entirely. Sanitize Sanitizes the tag (e.g. &lt;@53905483156684800> -> &lt;@53905483156684800> (w/ nbsp)). See Also MentionUtils Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling)"
  },
  "api/KaiHeiLa.TagMode.html": {
    "href": "api/KaiHeiLa.TagMode.html",
    "title": "Enum TagMode | KaiHeiLa.Net 文档",
    "keywords": "Enum TagMode Represents the mode to parse tags. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum TagMode : int Fields Name Description KMarkdown Parse tags as KMarkdown. PlainText Parse tags as plain text."
  },
  "api/KaiHeiLa.TagType.html": {
    "href": "api/KaiHeiLa.TagType.html",
    "title": "Enum TagType | KaiHeiLa.Net 文档",
    "keywords": "Enum TagType Specifies the type of KaiHeiLa tag. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum TagType : int Fields Name Description ChannelMention The object is a channel mention. Emoji The object is an emoji. EveryoneMention The object is an everyone mention. HereMention The object is a here mention. RoleMention The object is a role mention. UserMention The object is an user mention."
  },
  "api/KaiHeiLa.TokenType.html": {
    "href": "api/KaiHeiLa.TokenType.html",
    "title": "Enum TokenType | KaiHeiLa.Net 文档",
    "keywords": "Enum TokenType Specifies the type of token to use with the client. Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum TokenType : int Fields Name Description Bearer An OAuth2 token type. Bot A bot token type."
  },
  "api/KaiHeiLa.TokenUtils.html": {
    "href": "api/KaiHeiLa.TokenUtils.html",
    "title": "Class TokenUtils | KaiHeiLa.Net 文档",
    "keywords": "Class TokenUtils Provides a series of helper methods for handling KaiHeiLa login tokens. Inheritance System.Object TokenUtils Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public static class TokenUtils : object Methods | Improve this Doc View Source ValidateToken(TokenType, String) Checks the validity of the supplied token of a specific type. Declaration public static void ValidateToken(TokenType tokenType, string token) Parameters Type Name Description TokenType tokenType The type of token to validate. System.String token The token value to validate."
  },
  "api/KaiHeiLa.UserExtensions.html": {
    "href": "api/KaiHeiLa.UserExtensions.html",
    "title": "Class UserExtensions | KaiHeiLa.Net 文档",
    "keywords": "Class UserExtensions An extension class for various Discord user objects. Inheritance System.Object UserExtensions Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public static class UserExtensions : object Methods | Improve this Doc View Source BanAsync(IGuildUser, Int32, String, RequestOptions) Bans the user from the guild and optionally prunes their recent messages. Declaration public static Task BanAsync(this IGuildUser user, int pruneDays = 0, string reason = null, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to ban. System.Int32 pruneDays The number of days to remove messages from this user for - must be between [0, 7] System.String reason The reason of the ban to be written in the audit log. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous operation for banning a user. | Improve this Doc View Source ReplyCardsAsync(IUser, IEnumerable<ICard>, IQuote, RequestOptions) Sends a card message message via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyCardsAsync(this IUser user, IEnumerable<ICard> cards, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. IEnumerable < ICard > cards The cards to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source ReplyCardsAsync(IUser, ICard, IQuote, RequestOptions) Sends a card message message via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> ReplyCardsAsync(this IUser user, ICard card, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. ICard card The card to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The request options for this async request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendFileMessageAsync(IUser, Stream, String, IQuote, RequestOptions) Sends a file via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(this IUser user, Stream stream, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. Stream stream The stream of the file. System.String fileName The name of the file. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendFileMessageAsync(IUser, String, String, IQuote, RequestOptions) Sends a file via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(this IUser user, string path, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. System.String path The file path of the file. System.String fileName The name of the file. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendImageMessageAsync(IUser, Stream, String, IQuote, RequestOptions) Sends an image via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(this IUser user, Stream stream, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. Stream stream The stream of the image. System.String fileName The name of the image. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendImageMessageAsync(IUser, String, String, IQuote, RequestOptions) Sends an image via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(this IUser user, string path, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. System.String path The file path of the image. System.String fileName The name of the image. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendKMarkdownMessageAsync(IUser, String, IQuote, RequestOptions) Sends a KMarkdown message via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendKMarkdownMessageAsync(this IUser user, string content, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. System.String content The KMarkdown content to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendTextMessageAsync(IUser, String, IQuote, RequestOptions) Sends a message via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendTextMessageAsync(this IUser user, string text, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. System.String text The message to be sent. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendVideoMessageAsync(IUser, Stream, String, IQuote, RequestOptions) Sends a video via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(this IUser user, Stream stream, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. Stream stream The stream of the video. System.String fileName The name of the video. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendVideoMessageAsync(IUser, String, String, IQuote, RequestOptions) Sends a video via DM. Declaration public static Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(this IUser user, string path, string fileName = null, IQuote quote = null, RequestOptions options = null) Parameters Type Name Description IUser user The user to send the DM to. System.String path The file path of the video. System.String fileName The name of the video. IQuote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >>"
  },
  "api/KaiHeiLa.UserPermissionOverwrite.html": {
    "href": "api/KaiHeiLa.UserPermissionOverwrite.html",
    "title": "Class UserPermissionOverwrite | KaiHeiLa.Net 文档",
    "keywords": "Class UserPermissionOverwrite Represent a permission object for a user. Inheritance System.Object UserPermissionOverwrite Implements IPermissionOverwrite < IUser > Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class UserPermissionOverwrite : object, IPermissionOverwrite<IUser> Constructors | Improve this Doc View Source UserPermissionOverwrite(IUser, OverwritePermissions) Initializes a new UserPermissionOverwrite with provided user information and modified permissions. Declaration public UserPermissionOverwrite(IUser target, OverwritePermissions permissions) Parameters Type Name Description IUser target OverwritePermissions permissions Properties | Improve this Doc View Source Permissions Gets the permissions associated with this overwrite entry for a user. Declaration public OverwritePermissions Permissions { get; } Property Value Type Description OverwritePermissions | Improve this Doc View Source Target Gets the user this overwrite is targeting. Declaration public IUser Target { get; } Property Value Type Description IUser Implements IPermissionOverwrite<TTarget>"
  },
  "api/KaiHeiLa.UserTag.html": {
    "href": "api/KaiHeiLa.UserTag.html",
    "title": "Class UserTag | KaiHeiLa.Net 文档",
    "keywords": "Class UserTag Representing a tag an IUser can have. Inheritance System.Object UserTag Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class UserTag : IEquatable<UserTag> Properties | Improve this Doc View Source Color Gets the color of the tag given to user. Declaration public Color Color { get; } Property Value Type Description Color A Color struct representing the color of this tag. | Improve this Doc View Source Text Gets the text of the tag given to user. Declaration public string Text { get; } Property Value Type Description System.String A langword_csharp_string representing the text of this tag. Methods | Improve this Doc View Source Create(Color, String) Initializes a new instance of the UserTag class. Declaration public static UserTag Create(Color color, string text) Parameters Type Name Description Color color The color of the tag given to user. System.String text The text of the tag given to user. Returns Type Description UserTag A UserTag representing the given parameters. | Improve this Doc View Source Equals(UserTag) Declaration public bool Equals(UserTag other) Parameters Type Name Description UserTag other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32"
  },
  "api/KaiHeiLa.VideoModule.html": {
    "href": "api/KaiHeiLa.VideoModule.html",
    "title": "Class VideoModule | KaiHeiLa.Net 文档",
    "keywords": "Class VideoModule Represents a video module in an ICard . Inheritance System.Object VideoModule Implements IMediaModule IModule Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class VideoModule : object, IMediaModule, IModule Properties | Improve this Doc View Source Source Gets the source of the media associated with this module. Declaration public string Source { get; } Property Value Type Description System.String A langword_csharp_string representing the source of the audio associated with this module. | Improve this Doc View Source Title Gets the title of the media associated with this module. Declaration public string Title { get; } Property Value Type Description System.String A langword_csharp_string representing the title of the media associated with this module. | Improve this Doc View Source Type Declaration public ModuleType Type { get; } Property Value Type Description ModuleType Implements IMediaModule IModule"
  },
  "api/KaiHeiLa.VideoModuleBuilder.html": {
    "href": "api/KaiHeiLa.VideoModuleBuilder.html",
    "title": "Class VideoModuleBuilder | KaiHeiLa.Net 文档",
    "keywords": "Class VideoModuleBuilder Represents a video module builder for creating a VideoModule . Inheritance System.Object VideoModuleBuilder Implements IModuleBuilder Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public class VideoModuleBuilder : object, IModuleBuilder Properties | Improve this Doc View Source Source Gets or sets the source URL of the video. Declaration public string Source { get; set; } Property Value Type Description System.String The source URL of the video. | Improve this Doc View Source Title Gets or sets the title of the video. Declaration public string Title { get; set; } Property Value Type Description System.String The title of the video. | Improve this Doc View Source Type Specifies the module type of the IModule this builder creates. Declaration public ModuleType Type { get; } Property Value Type Description ModuleType A ModuleType representing the module type of the IModule this builder creates. Methods | Improve this Doc View Source Build() Builds this builder into a VideoModule . Declaration public VideoModule Build() Returns Type Description VideoModule A VideoModule representing the built video module object. | Improve this Doc View Source WithSource(String) Sets the source URL of the video. Declaration public VideoModuleBuilder WithSource(string source) Parameters Type Name Description System.String source The source URL of the video to be set. Returns Type Description VideoModuleBuilder The current builder. | Improve this Doc View Source WithTitle(String) Sets the title of the video. Declaration public VideoModuleBuilder WithTitle(string title) Parameters Type Name Description System.String title The title of the video to be set. Returns Type Description VideoModuleBuilder The current builder. Explicit Interface Implementations | Improve this Doc View Source IModuleBuilder.Build() Builds the IModuleBuilder into an IModule . Declaration IModule IModuleBuilder.Build() Returns Type Description IModule An IModule representing the built module object. Implements IModuleBuilder"
  },
  "api/KaiHeiLa.VoiceQuality.html": {
    "href": "api/KaiHeiLa.VoiceQuality.html",
    "title": "Enum VoiceQuality | KaiHeiLa.Net 文档",
    "keywords": "Enum VoiceQuality Specifies the voice quality of an IVoiceChannel . Namespace : KaiHeiLa Assembly : KaiHeiLa.Net.Core.dll Syntax public enum VoiceQuality : int Fields Name Description _128kbps Equivalent to approximately 128 kbps. _18kbps Equivalent to approximately 18 kbps. _192kbps Equivalent to approximately 192 kbps. _256kbps Equivalent to approximately 256 kbps. _320kbps Equivalent to approximately 320 kbps. _48kbps Equivalent to approximately is 48 kbps. _96kbps Equivalent to approximately is 96 kbps."
  },
  "api/KaiHeiLa.WebSocket.BaseSocketClient.html": {
    "href": "api/KaiHeiLa.WebSocket.BaseSocketClient.html",
    "title": "Class BaseSocketClient | KaiHeiLa.Net 文档",
    "keywords": "Class BaseSocketClient Inheritance System.Object BaseKaiHeiLaClient BaseSocketClient KaiHeiLaSocketClient Implements IKaiHeiLaClient IDisposable Inherited Members BaseKaiHeiLaClient.Log BaseKaiHeiLaClient.LoggedIn BaseKaiHeiLaClient.LoggedOut BaseKaiHeiLaClient.LoginState BaseKaiHeiLaClient.TokenType BaseKaiHeiLaClient.Dispose() BaseKaiHeiLaClient.LoginAsync(TokenType, String, Boolean) BaseKaiHeiLaClient.LogoutAsync() BaseKaiHeiLaClient.IKaiHeiLaClient.ConnectionState BaseKaiHeiLaClient.IKaiHeiLaClient.CurrentUser BaseKaiHeiLaClient.GetChannelAsync(UInt64, CacheMode, RequestOptions) BaseKaiHeiLaClient.GetDMChannelAsync(Guid, CacheMode, RequestOptions) BaseKaiHeiLaClient.GetDMChannelsAsync(CacheMode, RequestOptions) Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public abstract class BaseSocketClient : BaseKaiHeiLaClient, IKaiHeiLaClient, IDisposable Fields | Improve this Doc View Source BaseConfig Declaration protected readonly KaiHeiLaSocketConfig BaseConfig Field Value Type Description KaiHeiLaSocketConfig Properties | Improve this Doc View Source CurrentUser Gets the current logged-in user. Declaration public virtual SocketSelfUser CurrentUser { get; protected set; } Property Value Type Description SocketSelfUser | Improve this Doc View Source Guilds Gets a collection of guilds that the user is currently in. Declaration public abstract IReadOnlyCollection<SocketGuild> Guilds { get; } Property Value Type Description IReadOnlyCollection < SocketGuild > A read-only collection of guilds that the current user is in. | Improve this Doc View Source Latency Gets the estimated round-trip latency, in milliseconds, to the gateway server. Declaration public abstract int Latency { get; protected set; } Property Value Type Description System.Int32 An int that represents the round-trip latency to the WebSocket server. Please note that this value does not represent a \"true\" latency for operations such as sending a message. | Improve this Doc View Source Rest Provides access to a REST-only client with a shared state from this client. Declaration public abstract KaiHeiLaSocketRestClient Rest { get; } Property Value Type Description KaiHeiLaSocketRestClient Methods | Improve this Doc View Source GetChannel(UInt64) Declaration public abstract SocketChannel GetChannel(ulong id) Parameters Type Name Description System.UInt64 id Returns Type Description SocketChannel | Improve this Doc View Source GetGuild(UInt64) Gets a guild. Declaration public abstract SocketGuild GetGuild(ulong id) Parameters Type Name Description System.UInt64 id The guild identifier. Returns Type Description SocketGuild A WebSocket-based guild associated with the identifier; null when the guild cannot be found. | Improve this Doc View Source GetUser(String, String) Gets a user. Declaration public abstract SocketUser GetUser(string username, string identifyNumber) Parameters Type Name Description System.String username The name of the user. System.String identifyNumber The identify value of the user. Returns Type Description SocketUser A generic WebSocket-based user; null when the user cannot be found. Remarks This method gets the user present in the WebSocket cache with the given condition. warning Sometimes a user may return null due to KaiHeiLa not sending offline users in large guilds (i.e. guild with 100+ members) actively. To download users on startup and to see more information about this subject, see AlwaysDownloadUsers . note This method does not attempt to fetch users that the logged-in user does not have access to (i.e. users who don't share mutual guild(s) with the current user). If you wish to get a user that you do not have access to, consider using the REST implementation of . | Improve this Doc View Source GetUser(UInt64) Gets a generic user. Declaration public abstract SocketUser GetUser(ulong id) Parameters Type Name Description System.UInt64 id The user ID. Returns Type Description SocketUser A generic WebSocket-based user; null when the user cannot be found. Remarks This method gets the user present in the WebSocket cache with the given condition. warning Sometimes a user may return null due to KaiHeiLa not sending offline users in large guilds (i.e. guild with 100+ members) actively. To download users on startup and to see more information about this subject, see AlwaysDownloadUsers . note This method does not attempt to fetch users that the logged-in user does not have access to (i.e. users who don't share mutual guild(s) with the current user). If you wish to get a user that you do not have access to, consider using the REST implementation of . | Improve this Doc View Source StartAsync() Declaration public abstract Task StartAsync() Returns Type Description Task | Improve this Doc View Source StopAsync() Declaration public abstract Task StopAsync() Returns Type Description Task Events | Improve this Doc View Source ChannelCreated Fired when a channel is created. Declaration public event Func<SocketChannel, Task> ChannelCreated Event Type Type Description Func < SocketChannel , Task > Remarks This event is fired when a generic channel has been created. The event handler must return a and accept a SocketChannel as its parameter. The newly created channel is passed into the event handler parameter. The given channel type may include, but not limited to, Private Channels (DM, Group), Guild Channels (Text, Voice, Category); see the derived classes of SocketChannel for more details. | Improve this Doc View Source ChannelDestroyed Fired when a channel is destroyed. Declaration public event Func<SocketChannel, Task> ChannelDestroyed Event Type Type Description Func < SocketChannel , Task > Remarks This event is fired when a generic channel has been destroyed. The event handler must return a and accept a SocketChannel as its parameter. The destroyed channel is passed into the event handler parameter. The given channel type may include, but not limited to, Private Channels (DM, Group), Guild Channels (Text, Voice, Category); see the derived classes of SocketChannel for more details. | Improve this Doc View Source ChannelUpdated Fired when a channel is updated. Declaration public event Func<SocketChannel, SocketChannel, Task> ChannelUpdated Event Type Type Description Func < SocketChannel , SocketChannel , Task > Remarks This event is fired when a generic channel has been updated. The event handler must return a and accept 2 SocketChannel as its parameters. The original (prior to update) channel is passed into the first SocketChannel , while the updated channel is passed into the second. The given channel type may include, but not limited to, Private Channels (DM, Group), Guild Channels (Text, Voice, Category); see the derived classes of SocketChannel for more details. | Improve this Doc View Source CurrentUserUpdated Fired when the connected account is updated. Declaration public event Func<SocketSelfUser, SocketSelfUser, Task> CurrentUserUpdated Event Type Type Description Func < SocketSelfUser , SocketSelfUser , Task > | Improve this Doc View Source DirectMessageDeleted Fired when a message is deleted. Declaration public event Func<Cacheable<IMessage, Guid>, Cacheable<IDMChannel, Guid>, Task> DirectMessageDeleted Event Type Type Description Func < Cacheable < IMessage , Guid >, Cacheable < IDMChannel , Guid >, Task > Remarks This event is fired when a message is deleted. The event handler must return a and accept a Cacheable<TEntity, TId> and IDMChannel as its parameters. important It is not possible to retrieve the message via DownloadAsync() ; the message cannot be retrieved by KaiHeiLa after the message has been deleted. If caching is enabled via KaiHeiLaSocketConfig , the Cacheable<TEntity, TId> entity will contain the deleted message; otherwise, in event that the message cannot be retrieved, the ID of the message is preserved in the . The source channel of the removed message will be passed into the IDMChannel parameter. | Improve this Doc View Source DirectMessageReceived Fired when a message is received. Declaration public event Func<SocketMessage, Task> DirectMessageReceived Event Type Type Description Func < SocketMessage , Task > Remarks This event is fired when a message is received. The event handler must return a and accept a SocketMessage as its parameter. The message that is sent to the client is passed into the event handler parameter as SocketMessage . This message may be a system message (i.e. SocketSystemMessage ) or a user message (i.e. SocketUserMessage . See the derived classes of SocketMessage for more details. | Improve this Doc View Source DirectMessageUpdated Fired when a message is updated. Declaration public event Func<Cacheable<IMessage, Guid>, SocketMessage, IDMChannel, Task> DirectMessageUpdated Event Type Type Description Func < Cacheable < IMessage , Guid >, SocketMessage , IDMChannel , Task > Remarks This event is fired when a message is updated. The event handler must return a and accept a Cacheable<TEntity, TId> , SocketMessage , and IDMChannel as its parameters. If caching is enabled via KaiHeiLaSocketConfig , the Cacheable<TEntity, TId> entity will contain the original message; otherwise, in event that the message cannot be retrieved, the ID of the message is preserved in the . The updated message will be passed into the SocketMessage parameter. The source channel of the updated message will be passed into the IDMChannel parameter. warning Due to the lack of REST API for direct message info getting, this event may fire but the message entity will be null. | Improve this Doc View Source GuildMemberOffline Fired when a guild member is offline. Declaration public event Func<IReadOnlyCollection<SocketGuildUser>, DateTimeOffset, Task> GuildMemberOffline Event Type Type Description Func < IReadOnlyCollection < SocketGuildUser >, DateTimeOffset , Task > | Improve this Doc View Source GuildMemberOnline Fired when a guild member is online. Declaration public event Func<IReadOnlyCollection<SocketGuildUser>, DateTimeOffset, Task> GuildMemberOnline Event Type Type Description Func < IReadOnlyCollection < SocketGuildUser >, DateTimeOffset , Task > | Improve this Doc View Source GuildMemberUpdated Fired when a guild member is updated. Declaration public event Func<Cacheable<SocketGuildUser, ulong>, SocketGuildUser, Task> GuildMemberUpdated Event Type Type Description Func < Cacheable < SocketGuildUser , System.UInt64 >, SocketGuildUser , Task > | Improve this Doc View Source GuildUpdated Fired when a guild is updated. Declaration public event Func<SocketGuild, SocketGuild, Task> GuildUpdated Event Type Type Description Func < SocketGuild , SocketGuild , Task > | Improve this Doc View Source JoinedGuild Fired when the connected account joins a guild. Declaration public event Func<SocketGuild, Task> JoinedGuild Event Type Type Description Func < SocketGuild , Task > | Improve this Doc View Source LeftGuild Fired when the connected account leaves a guild. Declaration public event Func<SocketGuild, Task> LeftGuild Event Type Type Description Func < SocketGuild , Task > | Improve this Doc View Source MessageDeleted Fired when a message is deleted. Declaration public event Func<Cacheable<IMessage, Guid>, Cacheable<IMessageChannel, ulong>, Task> MessageDeleted Event Type Type Description Func < Cacheable < IMessage , Guid >, Cacheable < IMessageChannel , System.UInt64 >, Task > Remarks This event is fired when a message is deleted. The event handler must return a and accept a Cacheable<TEntity, TId> and ISocketMessageChannel as its parameters. important It is not possible to retrieve the message via DownloadAsync() ; the message cannot be retrieved by KaiHeiLa after the message has been deleted. If caching is enabled via KaiHeiLaSocketConfig , the Cacheable<TEntity, TId> entity will contain the deleted message; otherwise, in event that the message cannot be retrieved, the ID of the message is preserved in the . The source channel of the removed message will be passed into the ISocketMessageChannel parameter. | Improve this Doc View Source MessagePinned Fired when a message is pinned. Declaration public event Func<Cacheable<IMessage, Guid>, SocketMessage, ISocketMessageChannel, SocketGuildUser, Task> MessagePinned Event Type Type Description Func < Cacheable < IMessage , Guid >, SocketMessage , ISocketMessageChannel , SocketGuildUser , Task > Remarks This event is fired when a message is pinned. The event handler must return a and accept a Cacheable<TEntity, TId> , SocketMessage , and ISocketMessageChannel as its parameters. If caching is enabled via KaiHeiLaSocketConfig , the Cacheable<TEntity, TId> entity will contain the original message; otherwise, in event that the message cannot be retrieved, the ID of the message is preserved in the . The updated message will be passed into the SocketMessage parameter. The source channel of the updated message will be passed into the ISocketMessageChannel parameter. The operator who pinned the message will be passed into the SocketGuildUser parameter. | Improve this Doc View Source MessageReceived Fired when a message is received. Declaration public event Func<SocketMessage, Task> MessageReceived Event Type Type Description Func < SocketMessage , Task > Remarks This event is fired when a message is received. The event handler must return a and accept a SocketMessage as its parameter. The message that is sent to the client is passed into the event handler parameter as SocketMessage . This message may be a system message (i.e. SocketSystemMessage ) or a user message (i.e. SocketUserMessage . See the derived classes of SocketMessage for more details. | Improve this Doc View Source MessageUnpinned Fired when a message is unpinned. Declaration public event Func<Cacheable<IMessage, Guid>, SocketMessage, ISocketMessageChannel, SocketGuildUser, Task> MessageUnpinned Event Type Type Description Func < Cacheable < IMessage , Guid >, SocketMessage , ISocketMessageChannel , SocketGuildUser , Task > Remarks This event is fired when a message is unpinned. The event handler must return a and accept a Cacheable<TEntity, TId> , SocketMessage , and ISocketMessageChannel as its parameters. If caching is enabled via KaiHeiLaSocketConfig , the Cacheable<TEntity, TId> entity will contain the original message; otherwise, in event that the message cannot be retrieved, the ID of the message is preserved in the . The updated message will be passed into the SocketMessage parameter. The source channel of the updated message will be passed into the ISocketMessageChannel parameter. The operator who unpinned the message will be passed into the SocketGuildUser parameter. | Improve this Doc View Source MessageUpdated Fired when a message is updated. Declaration public event Func<Cacheable<IMessage, Guid>, SocketMessage, ISocketMessageChannel, Task> MessageUpdated Event Type Type Description Func < Cacheable < IMessage , Guid >, SocketMessage , ISocketMessageChannel , Task > Remarks This event is fired when a message is updated. The event handler must return a and accept a Cacheable<TEntity, TId> , SocketMessage , and ISocketMessageChannel as its parameters. If caching is enabled via KaiHeiLaSocketConfig , the Cacheable<TEntity, TId> entity will contain the original message; otherwise, in event that the message cannot be retrieved, the ID of the message is preserved in the . The updated message will be passed into the SocketMessage parameter. The source channel of the updated message will be passed into the ISocketMessageChannel parameter. | Improve this Doc View Source RoleCreated Declaration public event Func<SocketRole, Task> RoleCreated Event Type Type Description Func < SocketRole , Task > | Improve this Doc View Source RoleDeleted Fired when a role is deleted. Declaration public event Func<SocketRole, Task> RoleDeleted Event Type Type Description Func < SocketRole , Task > | Improve this Doc View Source RoleUpdated Fired when a role is updated. Declaration public event Func<SocketRole, SocketRole, Task> RoleUpdated Event Type Type Description Func < SocketRole , SocketRole , Task > | Improve this Doc View Source UserBanned Fired when a user is banned from a guild. Declaration public event Func<IReadOnlyCollection<SocketUser>, SocketUser, SocketGuild, Task> UserBanned Event Type Type Description Func < IReadOnlyCollection < SocketUser >, SocketUser , SocketGuild , Task > Remarks This event is fired when a user is banned. The event handler must return a and accept an , a SocketMessage and a SocketGuild as its parameter. The users that are banned are passed into the event handler parameter as . The user who operated the bans is passed into the event handler parameter as SocketUser . The guild where the banning action takes place is passed in the event handler parameter as SocketGuild . | Improve this Doc View Source UserConnected Fired when a user connected to a voice channel. Declaration public event Func<SocketUser, SocketVoiceChannel, SocketGuild, DateTimeOffset, Task> UserConnected Event Type Type Description Func < SocketUser , SocketVoiceChannel , SocketGuild , DateTimeOffset , Task > | Improve this Doc View Source UserDisconnected Fired when a user disconnected to a voice channel. Declaration public event Func<SocketUser, SocketVoiceChannel, SocketGuild, DateTimeOffset, Task> UserDisconnected Event Type Type Description Func < SocketUser , SocketVoiceChannel , SocketGuild , DateTimeOffset , Task > | Improve this Doc View Source UserJoined Fired when a user joins a guild. Declaration public event Func<SocketGuildUser, DateTimeOffset, Task> UserJoined Event Type Type Description Func < SocketGuildUser , DateTimeOffset , Task > Remarks warning It is reported that this event will not be fired if a guild contains more than 2000 members. | Improve this Doc View Source UserLeft Fired when a user leaves a guild. Declaration public event Func<SocketGuild, SocketUser, DateTimeOffset, Task> UserLeft Event Type Type Description Func < SocketGuild , SocketUser , DateTimeOffset , Task > | Improve this Doc View Source UserUnbanned Fired when a user is unbanned from a guild. Declaration public event Func<SocketUser, SocketGuild, Task> UserUnbanned Event Type Type Description Func < SocketUser , SocketGuild , Task > Remarks This event is fired when a user is banned. The event handler must return a and accept an , a SocketMessage and a SocketGuild as its parameter. The users that are unbanned are passed into the event handler parameter as . The user who operated the bans is passed into the event handler parameter as SocketUser . The guild where the unbanning action takes place is passed in the event handler parameter as SocketGuild . | Improve this Doc View Source UserUpdated Fired when a user is updated. Declaration public event Func<SocketUser, SocketUser, Task> UserUpdated Event Type Type Description Func < SocketUser , SocketUser , Task > Implements IKaiHeiLaClient IDisposable"
  },
  "api/KaiHeiLa.WebSocket.GatewayReconnectException.html": {
    "href": "api/KaiHeiLa.WebSocket.GatewayReconnectException.html",
    "title": "Class GatewayReconnectException | KaiHeiLa.Net 文档",
    "keywords": "Class GatewayReconnectException The exception thrown when the gateway client has been requested to reconnect. Inheritance System.Object GatewayReconnectException Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class GatewayReconnectException : Exception Constructors | Improve this Doc View Source GatewayReconnectException(String) Initializes a new instance of the GatewayReconnectException class with the reconnection message. Declaration public GatewayReconnectException(string message) Parameters Type Name Description System.String message The reason why the gateway has been requested to reconnect."
  },
  "api/KaiHeiLa.WebSocket.html": {
    "href": "api/KaiHeiLa.WebSocket.html",
    "title": "Namespace KaiHeiLa.WebSocket | KaiHeiLa.Net 文档",
    "keywords": "Namespace KaiHeiLa.WebSocket Classes BaseSocketClient GatewayReconnectException The exception thrown when the gateway client has been requested to reconnect. KaiHeiLaSocketClient KaiHeiLaSocketConfig KaiHeiLaSocketRestClient RestPresence Represents the REST user's presence status. This may include their online status and their activity. SocketCategoryChannel Represents a WebSocket-based category channel. SocketChannel Represents a WebSocket-based channel. SocketDMChannel Represents a WebSocket-based direct-message channel. SocketEntity<T> SocketGuild Represents a WebSocket-based guild object. SocketGuildChannel SocketGuildHelper SocketGuildUser Represents a WebSocket-based guild user. SocketInvite Represents a WebSocket-based invite to a guild. SocketMessage Represents a WebSocket-based message. SocketPresence Represents the WebSocket user's presence status. This may include their online status and their activity. SocketReaction SocketRole Represents a WebSocket-based role to be given to a guild user. SocketSelfUser Represents the logged-in WebSocket-based user. SocketSystemMessage Represents a WebSocket-based message sent by the system. SocketTextChannel Represents a WebSocket-based channel in a guild that can send and receive messages. SocketUnknownUser Represents a WebSocket-based user that is yet to be recognized by the client. SocketUser Represents a WebSocket-based user. SocketUserMessage Represents a WebSocket-based message sent by a user. SocketVoiceChannel Represents a WebSocket-based voice channel in a guild. Interfaces ISocketAudioChannel Represents a generic WebSocket-based audio channel. ISocketMessageChannel Represents a generic WebSocket-based channel that can send and receive messages. ISocketPrivateChannel Represents a generic WebSocket-based channel that is private to select recipients."
  },
  "api/KaiHeiLa.WebSocket.ISocketAudioChannel.html": {
    "href": "api/KaiHeiLa.WebSocket.ISocketAudioChannel.html",
    "title": "Interface ISocketAudioChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface ISocketAudioChannel Represents a generic WebSocket-based audio channel. Inherited Members IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public interface ISocketAudioChannel : IAudioChannel, IChannel, IEntity<ulong>"
  },
  "api/KaiHeiLa.WebSocket.ISocketMessageChannel.html": {
    "href": "api/KaiHeiLa.WebSocket.ISocketMessageChannel.html",
    "title": "Interface ISocketMessageChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface ISocketMessageChannel Represents a generic WebSocket-based channel that can send and receive messages. Inherited Members IMessageChannel.SendTextMessageAsync(String, IQuote, IUser, RequestOptions) IMessageChannel.SendImageMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendImageMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendVideoMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendVideoMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendFileMessageAsync(String, String, IQuote, IUser, RequestOptions) IMessageChannel.SendFileMessageAsync(Stream, String, IQuote, IUser, RequestOptions) IMessageChannel.SendKMarkdownMessageAsync(String, IQuote, IUser, RequestOptions) KaiHeiLa.IMessageChannel.SendCardMessageAsync(IEnumerable<>, KaiHeiLa.IQuote, KaiHeiLa.IUser, KaiHeiLa.RequestOptions) IMessageChannel.GetMessageAsync(Guid, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(Int32, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(Guid, Direction, Int32, CacheMode, RequestOptions) IMessageChannel.GetMessagesAsync(IMessage, Direction, Int32, CacheMode, RequestOptions) IMessageChannel.DeleteMessageAsync(Guid, RequestOptions) IMessageChannel.DeleteMessageAsync(IMessage, RequestOptions) KaiHeiLa.IMessageChannel.ModifyMessageAsync(Guid, Action<>, KaiHeiLa.RequestOptions) IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public interface ISocketMessageChannel : IMessageChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source CachedMessages Gets all messages in this channel's cache. Declaration IReadOnlyCollection<SocketMessage> CachedMessages { get; } Property Value Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Methods | Improve this Doc View Source GetCachedMessage(Guid) Gets a cached message from this channel. Declaration SocketMessage GetCachedMessage(Guid id) Parameters Type Name Description Guid id The Guid of the message. Returns Type Description SocketMessage A WebSocket-based message object; null if it does not exist in the cache or if caching is not enabled. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return null . Please refer to MessageCacheSize for more details. This method retrieves the message from the local WebSocket cache and does not send any additional request to KaiHeiLa. This message may be a message that has been deleted. | Improve this Doc View Source GetCachedMessages(Guid, Direction, Int32) Gets the last N cached messages starting from a certain message in this message channel. Declaration IReadOnlyCollection<SocketMessage> GetCachedMessages(Guid fromMessageId, Direction dir, int limit = null) Parameters Type Name Description Guid fromMessageId The message ID to start the fetching from. Direction dir The direction of which the message should be gotten from. System.Int32 limit The number of messages to get. Returns Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return an empty collection. Please refer to MessageCacheSize for more details. This method retrieves the message(s) from the local WebSocket cache and does not send any additional request to KaiHeiLa. This read-only collection may include messages that have been deleted. The maximum number of messages that can be retrieved from this method depends on the MessageCacheSize set. | Improve this Doc View Source GetCachedMessages(IMessage, Direction, Int32) Gets the last N cached messages starting from a certain message in this message channel. Declaration IReadOnlyCollection<SocketMessage> GetCachedMessages(IMessage fromMessage, Direction dir, int limit = null) Parameters Type Name Description IMessage fromMessage The message to start the fetching from. Direction dir The direction of which the message should be gotten from. System.Int32 limit The number of messages to get. Returns Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return an empty collection. Please refer to MessageCacheSize for more details. This method retrieves the message(s) from the local WebSocket cache and does not send any additional request to KaiHeiLa. This read-only collection may include messages that have been deleted. The maximum number of messages that can be retrieved from this method depends on the MessageCacheSize set. | Improve this Doc View Source GetCachedMessages(Int32) Gets the last N cached messages from this message channel. Declaration IReadOnlyCollection<SocketMessage> GetCachedMessages(int limit = null) Parameters Type Name Description System.Int32 limit The number of messages to get. Returns Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return an empty collection. Please refer to MessageCacheSize for more details. This method retrieves the message(s) from the local WebSocket cache and does not send any additional request to KaiHeiLa. This read-only collection may include messages that have been deleted. The maximum number of messages that can be retrieved from this method depends on the MessageCacheSize set."
  },
  "api/KaiHeiLa.WebSocket.ISocketPrivateChannel.html": {
    "href": "api/KaiHeiLa.WebSocket.ISocketPrivateChannel.html",
    "title": "Interface ISocketPrivateChannel | KaiHeiLa.Net 文档",
    "keywords": "Interface ISocketPrivateChannel Represents a generic WebSocket-based channel that is private to select recipients. Inherited Members IChannel.Name IChannel.GetUsersAsync(CacheMode, RequestOptions) IChannel.GetUserAsync(UInt64, CacheMode, RequestOptions) IEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public interface ISocketPrivateChannel : IPrivateChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source Recipients Gets the users that can access this channel. Declaration IReadOnlyCollection<SocketUser> Recipients { get; } Property Value Type Description IReadOnlyCollection < SocketUser > A read-only collection of users that can access this channel."
  },
  "api/KaiHeiLa.WebSocket.KaiHeiLaSocketClient.html": {
    "href": "api/KaiHeiLa.WebSocket.KaiHeiLaSocketClient.html",
    "title": "Class KaiHeiLaSocketClient | KaiHeiLa.Net 文档",
    "keywords": "Class KaiHeiLaSocketClient Inheritance System.Object BaseKaiHeiLaClient BaseSocketClient KaiHeiLaSocketClient Implements IKaiHeiLaClient IDisposable Inherited Members BaseSocketClient.BaseConfig BaseSocketClient.CurrentUser BaseSocketClient.StartAsync() BaseSocketClient.StopAsync() BaseSocketClient.ChannelCreated BaseSocketClient.ChannelDestroyed BaseSocketClient.ChannelUpdated BaseSocketClient.MessageReceived BaseSocketClient.MessageDeleted BaseSocketClient.MessageUpdated BaseSocketClient.MessagePinned BaseSocketClient.MessageUnpinned BaseSocketClient.DirectMessageReceived BaseSocketClient.DirectMessageDeleted BaseSocketClient.DirectMessageUpdated BaseSocketClient.UserJoined BaseSocketClient.UserLeft BaseSocketClient.UserBanned BaseSocketClient.UserUnbanned BaseSocketClient.UserUpdated BaseSocketClient.CurrentUserUpdated BaseSocketClient.GuildMemberUpdated BaseSocketClient.GuildMemberOnline BaseSocketClient.GuildMemberOffline BaseSocketClient.UserConnected BaseSocketClient.UserDisconnected BaseSocketClient.RoleCreated BaseSocketClient.RoleDeleted BaseSocketClient.RoleUpdated BaseSocketClient.JoinedGuild BaseSocketClient.LeftGuild BaseSocketClient.GuildUpdated BaseKaiHeiLaClient.Log BaseKaiHeiLaClient.LoggedIn BaseKaiHeiLaClient.LoggedOut BaseKaiHeiLaClient.LoginState BaseKaiHeiLaClient.TokenType BaseKaiHeiLaClient.Dispose() BaseKaiHeiLaClient.LoginAsync(TokenType, String, Boolean) BaseKaiHeiLaClient.LogoutAsync() BaseKaiHeiLaClient.IKaiHeiLaClient.ConnectionState BaseKaiHeiLaClient.IKaiHeiLaClient.CurrentUser BaseKaiHeiLaClient.GetChannelAsync(UInt64, CacheMode, RequestOptions) BaseKaiHeiLaClient.GetDMChannelAsync(Guid, CacheMode, RequestOptions) BaseKaiHeiLaClient.GetDMChannelsAsync(CacheMode, RequestOptions) Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class KaiHeiLaSocketClient : BaseSocketClient, IKaiHeiLaClient, IDisposable Constructors | Improve this Doc View Source KaiHeiLaSocketClient() Initializes a new REST/WebSocket-based KaiHeiLa client. Declaration public KaiHeiLaSocketClient() | Improve this Doc View Source KaiHeiLaSocketClient(KaiHeiLaSocketConfig) Initializes a new REST/WebSocket-based KaiHeiLa client with the provided configuration. Declaration public KaiHeiLaSocketClient(KaiHeiLaSocketConfig config) Parameters Type Name Description KaiHeiLaSocketConfig config The configuration to be used with the client. Properties | Improve this Doc View Source ConnectionState Declaration public ConnectionState ConnectionState { get; } Property Value Type Description ConnectionState | Improve this Doc View Source DMChannels Gets a collection of direct message channels opened in this session. Declaration public IReadOnlyCollection<SocketDMChannel> DMChannels { get; } Property Value Type Description IReadOnlyCollection < SocketDMChannel > A collection of DM channels that have been opened in this session. Remarks This method returns a collection of currently opened direct message channels. warning This method will not return previously opened DM channels outside of the current session! If you have just started the client, this may return an empty collection. | Improve this Doc View Source Guilds Gets a collection of guilds that the user is currently in. Declaration public override IReadOnlyCollection<SocketGuild> Guilds { get; } Property Value Type Description IReadOnlyCollection < SocketGuild > A read-only collection of guilds that the current user is in. Overrides BaseSocketClient.Guilds | Improve this Doc View Source Latency Declaration public override int Latency { get; protected set; } Property Value Type Description System.Int32 Overrides BaseSocketClient.Latency | Improve this Doc View Source Rest Declaration public override KaiHeiLaSocketRestClient Rest { get; } Property Value Type Description KaiHeiLaSocketRestClient Overrides BaseSocketClient.Rest Methods | Improve this Doc View Source DownloadUsersAsync(IEnumerable<IGuild>) Declaration public Task DownloadUsersAsync(IEnumerable<IGuild> guilds) Parameters Type Name Description IEnumerable < IGuild > guilds Returns Type Description Task | Improve this Doc View Source GetChannel(UInt64) Declaration public override SocketChannel GetChannel(ulong id) Parameters Type Name Description System.UInt64 id Returns Type Description SocketChannel Overrides BaseSocketClient.GetChannel(UInt64) | Improve this Doc View Source GetChannelAsync(UInt64, RequestOptions) Gets a generic channel from the cache or does a rest request if unavailable. Declaration public ValueTask<IChannel> GetChannelAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier of the channel (e.g. 381889909113225237 ). RequestOptions options The options to be used when sending the request. Returns Type Description ValueTask < IChannel > A task that represents the asynchronous get operation. The task result contains the channel associated with the identifier; null when the channel cannot be found. | Improve this Doc View Source GetDMChannel(Guid) Declaration public SocketDMChannel GetDMChannel(Guid chatCode) Parameters Type Name Description Guid chatCode Returns Type Description SocketDMChannel | Improve this Doc View Source GetDMChannelAsync(Guid, RequestOptions) Gets a direct message channel from the cache or does a rest request if unavailable. Declaration public ValueTask<IDMChannel> GetDMChannelAsync(Guid chatCode, RequestOptions options = null) Parameters Type Name Description Guid chatCode The identifier of the channel. RequestOptions options The options to be used when sending the request. Returns Type Description ValueTask < IDMChannel > A task that represents the asynchronous get operation. The task result contains the channel associated with the identifier; null when the channel cannot be found. | Improve this Doc View Source GetDMChannelsAsync(RequestOptions) Gets a collection of direct message channels from the cache or does a rest request if unavailable. Declaration public ValueTask<IReadOnlyCollection<IDMChannel>> GetDMChannelsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description ValueTask < IReadOnlyCollection < IDMChannel >> A task that represents the asynchronous get operation. The task result contains the channel associated with the identifier; null when the channel cannot be found. | Improve this Doc View Source GetGuild(UInt64) Gets a guild. Declaration public override SocketGuild GetGuild(ulong id) Parameters Type Name Description System.UInt64 id The guild identifier. Returns Type Description SocketGuild A WebSocket-based guild associated with the identifier; null when the guild cannot be found. Overrides BaseSocketClient.GetGuild(UInt64) | Improve this Doc View Source GetUser(String, String) Gets a user. Declaration public override SocketUser GetUser(string username, string identifyNumber) Parameters Type Name Description System.String username The name of the user. System.String identifyNumber The identify value of the user. Returns Type Description SocketUser A generic WebSocket-based user; null when the user cannot be found. Overrides BaseSocketClient.GetUser(String, String) Remarks This method gets the user present in the WebSocket cache with the given condition. warning Sometimes a user may return null due to KaiHeiLa not sending offline users in large guilds (i.e. guild with 100+ members) actively. To download users on startup and to see more information about this subject, see AlwaysDownloadUsers . note This method does not attempt to fetch users that the logged-in user does not have access to (i.e. users who don't share mutual guild(s) with the current user). If you wish to get a user that you do not have access to, consider using the REST implementation of . | Improve this Doc View Source GetUser(UInt64) Gets a generic user. Declaration public override SocketUser GetUser(ulong id) Parameters Type Name Description System.UInt64 id The user ID. Returns Type Description SocketUser A generic WebSocket-based user; null when the user cannot be found. Overrides BaseSocketClient.GetUser(UInt64) Remarks This method gets the user present in the WebSocket cache with the given condition. warning Sometimes a user may return null due to KaiHeiLa not sending offline users in large guilds (i.e. guild with 100+ members) actively. To download users on startup and to see more information about this subject, see AlwaysDownloadUsers . note This method does not attempt to fetch users that the logged-in user does not have access to (i.e. users who don't share mutual guild(s) with the current user). If you wish to get a user that you do not have access to, consider using the REST implementation of . | Improve this Doc View Source GetUserAsync(UInt64, RequestOptions) Gets a user from the cache or does a rest request if unavailable. Declaration public ValueTask<IUser> GetUserAsync(ulong id, RequestOptions options = null) Parameters Type Name Description System.UInt64 id The identifier of the user (e.g. 168693960628371456 ). RequestOptions options The options to be used when sending the request. Returns Type Description ValueTask < IUser > A task that represents the asynchronous get operation. The task result contains the user associated with the identifier; null if the user is not found. Events | Improve this Doc View Source Connected Fired when connected to the KaiHeiLa gateway. Declaration public event Func<Task> Connected Event Type Type Description Func < Task > | Improve this Doc View Source DirectMessageButtonClicked Fired when a button is clicked in a direct card message. Declaration public event Func<string, SocketUser, IMessage, SocketDMChannel, Task> DirectMessageButtonClicked Event Type Type Description Func < System.String , SocketUser , IMessage , SocketDMChannel , Task > | Improve this Doc View Source DirectReactionAdded Fired when a reaction is added to a direct message. Declaration public event Func<Cacheable<IUserMessage, Guid>, Cacheable<IDMChannel, Guid>, SocketReaction, Task> DirectReactionAdded Event Type Type Description Func < Cacheable < IUserMessage , Guid >, Cacheable < IDMChannel , Guid >, SocketReaction , Task > Remarks This event is fired when a reaction is added to a user message in a private channel. The event handler must return a and accept a Cacheable<TEntity, TId> , an ISocketMessageChannel , and a SocketReaction as its parameter. If caching is enabled via KaiHeiLaSocketConfig , the Cacheable<TEntity, TId> entity will contain the original message; otherwise, in event that the message cannot be retrieved, the ID of the message is preserved in the . The source channel of the reaction addition will be passed into the IDMChannel parameter. The reaction that was added will be passed into the SocketReaction parameter. note When fetching the reaction from this event, a user may not be provided under User . Please see the documentation of the property for more information. | Improve this Doc View Source DirectReactionRemoved Fired when a reaction is removed from a message. Declaration public event Func<Cacheable<IUserMessage, Guid>, Cacheable<IDMChannel, Guid>, SocketReaction, Task> DirectReactionRemoved Event Type Type Description Func < Cacheable < IUserMessage , Guid >, Cacheable < IDMChannel , Guid >, SocketReaction , Task > | Improve this Doc View Source Disconnected Fired when disconnected to the KaiHeiLa gateway. Declaration public event Func<Exception, Task> Disconnected Event Type Type Description Func < Exception , Task > | Improve this Doc View Source GuildAvailable Fired when a guild becomes available. Declaration public event Func<SocketGuild, Task> GuildAvailable Event Type Type Description Func < SocketGuild , Task > | Improve this Doc View Source GuildUnavailable Fired when a guild becomes unavailable. Declaration public event Func<SocketGuild, Task> GuildUnavailable Event Type Type Description Func < SocketGuild , Task > | Improve this Doc View Source LatencyUpdated Fired when a heartbeat is received from the KaiHeiLa gateway. Declaration public event Func<int, int, Task> LatencyUpdated Event Type Type Description Func < System.Int32 , System.Int32 , Task > | Improve this Doc View Source MessageButtonClicked Fired when a button is clicked in a card message. Declaration public event Func<string, SocketUser, IMessage, SocketTextChannel, SocketGuild, Task> MessageButtonClicked Event Type Type Description Func < System.String , SocketUser , IMessage , SocketTextChannel , SocketGuild , Task > | Improve this Doc View Source ReactionAdded Fired when a reaction is added to a channel message. Declaration public event Func<Cacheable<IUserMessage, Guid>, Cacheable<IMessageChannel, ulong>, SocketReaction, Task> ReactionAdded Event Type Type Description Func < Cacheable < IUserMessage , Guid >, Cacheable < IMessageChannel , System.UInt64 >, SocketReaction , Task > Remarks This event is fired when a reaction is added to a user message in a channel. The event handler must return a and accept a Cacheable<TEntity, TId> , an ISocketMessageChannel , and a SocketReaction as its parameter. If caching is enabled via KaiHeiLaSocketConfig , the Cacheable<TEntity, TId> entity will contain the original message; otherwise, in event that the message cannot be retrieved, the ID of the message is preserved in the ulong. The source channel of the reaction addition will be passed into the ISocketMessageChannel parameter. The reaction that was added will be passed into the SocketReaction parameter. note When fetching the reaction from this event, a user may not be provided under User . Please see the documentation of the property for more information. | Improve this Doc View Source ReactionRemoved Fired when a reaction is removed from a message. Declaration public event Func<Cacheable<IUserMessage, Guid>, Cacheable<IMessageChannel, ulong>, SocketReaction, Task> ReactionRemoved Event Type Type Description Func < Cacheable < IUserMessage , Guid >, Cacheable < IMessageChannel , System.UInt64 >, SocketReaction , Task > | Improve this Doc View Source Ready Fired when guild data has finished downloading. Declaration public event Func<Task> Ready Event Type Type Description Func < Task > Implements IKaiHeiLaClient IDisposable"
  },
  "api/KaiHeiLa.WebSocket.KaiHeiLaSocketConfig.html": {
    "href": "api/KaiHeiLa.WebSocket.KaiHeiLaSocketConfig.html",
    "title": "Class KaiHeiLaSocketConfig | KaiHeiLa.Net 文档",
    "keywords": "Class KaiHeiLaSocketConfig Inheritance System.Object KaiHeiLaConfig KaiHeiLaRestConfig KaiHeiLaSocketConfig Inherited Members KaiHeiLaRestConfig.RestClientProvider KaiHeiLaConfig.APIVersion KaiHeiLaConfig.Version KaiHeiLaConfig.UserAgent KaiHeiLaConfig.APIUrl KaiHeiLaConfig.DefaultRequestTimeout KaiHeiLaConfig.MaxMessageSize KaiHeiLaConfig.MaxUsersPerBatch KaiHeiLaConfig.MaxMessagesPerBatch KaiHeiLaConfig.MaxItemsPerBatchByDefault KaiHeiLaConfig.MinNicknameSize KaiHeiLaConfig.MaxNicknameSize KaiHeiLaConfig.MinIntimacyScore KaiHeiLaConfig.MaxIntimacyScore KaiHeiLaConfig.DefaultRetryMode KaiHeiLaConfig.DefaultRatelimitCallback KaiHeiLaConfig.LogLevel Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class KaiHeiLaSocketConfig : KaiHeiLaRestConfig Constructors | Improve this Doc View Source KaiHeiLaSocketConfig() Declaration public KaiHeiLaSocketConfig() Fields | Improve this Doc View Source GatewayEncoding Returns the encoding gateway should use. Declaration public const string GatewayEncoding = null Field Value Type Description System.String | Improve this Doc View Source HeartbeatIntervalMilliseconds Gets the heartbeat interval of WebSocket connection in milliseconds. Declaration public const int HeartbeatIntervalMilliseconds = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source AlwaysDownloadUsers Gets or sets whether or not all users should be downloaded as guilds come available. Declaration public bool AlwaysDownloadUsers { get; set; } Property Value Type Description System.Boolean Remarks note Please note that it can be difficult to fill the cache completely on large guilds depending on the traffic. If you are experiencing issues, try setting this to false and manually call DownloadUsersAsync(IEnumerable<IGuild>) on the guilds you want. | Improve this Doc View Source ConnectionTimeout Gets or sets the time, in milliseconds, to wait for a connection to complete before aborting. Declaration public int ConnectionTimeout { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source GatewayHost Gets or sets the WebSocket host to connect to. If null , the client will use the /gateway endpoint. Declaration public string GatewayHost { get; set; } Property Value Type Description System.String | Improve this Doc View Source HandlerTimeout Gets or sets the timeout for event handlers, in milliseconds, after which a warning will be logged. Setting this property to null disables this check. Declaration public int? HandlerTimeout { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source LargeThreshold Gets or sets the max number of users a guild may have for offline users to be included in the READY packet. The maximum value allowed is 250. Declaration public int LargeThreshold { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxWaitBetweenGuildAvailablesBeforeReady Gets or sets the maximum wait time in milliseconds between GUILD_AVAILABLE events before firing READY. If zero, READY will fire as soon as it is received and all guilds will be unavailable. Declaration public int MaxWaitBetweenGuildAvailablesBeforeReady { get; set; } Property Value Type Description System.Int32 An int representing the maximum wait time in milliseconds between GUILD_AVAILABLE events before firing READY. Remarks This property is measured in milliseconds; negative values will throw an exception. If a guild is not received before READY, it will be unavailable. | Improve this Doc View Source MessageCacheSize Gets or sets the number of messages per channel that should be kept in cache. Setting this to zero disables the message cache entirely. Declaration public int MessageCacheSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source UdpSocketProvider Gets or sets the provider used to generate new UDP sockets. Declaration public UdpSocketProvider UdpSocketProvider { get; set; } Property Value Type Description UdpSocketProvider | Improve this Doc View Source WebSocketProvider Gets or sets the provider used to generate new WebSocket connections. Declaration public WebSocketProvider WebSocketProvider { get; set; } Property Value Type Description WebSocketProvider"
  },
  "api/KaiHeiLa.WebSocket.KaiHeiLaSocketRestClient.html": {
    "href": "api/KaiHeiLa.WebSocket.KaiHeiLaSocketRestClient.html",
    "title": "Class KaiHeiLaSocketRestClient | KaiHeiLa.Net 文档",
    "keywords": "Class KaiHeiLaSocketRestClient Inheritance System.Object BaseKaiHeiLaClient KaiHeiLaRestClient KaiHeiLaSocketRestClient Implements IKaiHeiLaClient IDisposable Inherited Members KaiHeiLaRestClient.CurrentUser KaiHeiLaRestClient.GetGuildAsync(UInt64, RequestOptions) KaiHeiLaRestClient.GetGuildsAsync(RequestOptions) KaiHeiLaRestClient.GetChannelAsync(UInt64, RequestOptions) KaiHeiLaRestClient.GetDMChannelAsync(Guid, RequestOptions) KaiHeiLaRestClient.GetDMChannelsAsync(RequestOptions) KaiHeiLaRestClient.AddRoleAsync(UInt64, UInt64, UInt32) KaiHeiLaRestClient.RemoveRoleAsync(UInt64, UInt64, UInt32) KaiHeiLaRestClient.GetUserAsync(UInt64, RequestOptions) KaiHeiLaRestClient.GetGuildUserAsync(UInt64, UInt64, RequestOptions) KaiHeiLaRestClient.AddReactionAsync(Guid, IEmote, RequestOptions) KaiHeiLaRestClient.RemoveReactionAsync(Guid, UInt64, IEmote, RequestOptions) KaiHeiLaRestClient.AddDirectMessageReactionAsync(Guid, IEmote, RequestOptions) KaiHeiLaRestClient.RemoveDirectMessageReactionAsync(Guid, UInt64, IEmote, RequestOptions) KaiHeiLaRestClient.CreateAssetAsync(String, String, RequestOptions) KaiHeiLaRestClient.CreateAssetAsync(Stream, String, RequestOptions) KaiHeiLaRestClient.GetGamesAsync(RequestOptions) KaiHeiLaRestClient.CreateGameAsync(String, String, String, RequestOptions) BaseKaiHeiLaClient.Log BaseKaiHeiLaClient.LoggedIn BaseKaiHeiLaClient.LoggedOut BaseKaiHeiLaClient.LoginState BaseKaiHeiLaClient.TokenType BaseKaiHeiLaClient.Dispose() BaseKaiHeiLaClient.IKaiHeiLaClient.ConnectionState BaseKaiHeiLaClient.IKaiHeiLaClient.CurrentUser BaseKaiHeiLaClient.GetChannelAsync(UInt64, CacheMode, RequestOptions) BaseKaiHeiLaClient.GetDMChannelAsync(Guid, CacheMode, RequestOptions) BaseKaiHeiLaClient.GetDMChannelsAsync(CacheMode, RequestOptions) Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class KaiHeiLaSocketRestClient : KaiHeiLaRestClient, IKaiHeiLaClient, IDisposable Methods | Improve this Doc View Source LoginAsync(TokenType, String, Boolean) Declaration public Task LoginAsync(TokenType tokenType, string token, bool validateToken = true) Parameters Type Name Description TokenType tokenType System.String token System.Boolean validateToken Returns Type Description Task | Improve this Doc View Source LogoutAsync() Declaration public Task LogoutAsync() Returns Type Description Task Implements IKaiHeiLaClient IDisposable"
  },
  "api/KaiHeiLa.WebSocket.RestPresence.html": {
    "href": "api/KaiHeiLa.WebSocket.RestPresence.html",
    "title": "Class RestPresence | KaiHeiLa.Net 文档",
    "keywords": "Class RestPresence Represents the REST user's presence status. This may include their online status and their activity. Inheritance System.Object RestPresence Implements IPresence Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.Rest.dll Syntax public class RestPresence : object, IPresence Properties | Improve this Doc View Source ActiveClient Declaration public ClientType? ActiveClient { get; } Property Value Type Description System.Nullable < ClientType > | Improve this Doc View Source IsOnline Declaration public bool? IsOnline { get; } Property Value Type Description System.Nullable < System.Boolean > Implements IPresence"
  },
  "api/KaiHeiLa.WebSocket.SocketCategoryChannel.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketCategoryChannel.html",
    "title": "Class SocketCategoryChannel | KaiHeiLa.Net 文档",
    "keywords": "Class SocketCategoryChannel Represents a WebSocket-based category channel. Inheritance System.Object SocketEntity < System.UInt64 > SocketChannel SocketGuildChannel SocketCategoryChannel Implements IEntity < System.UInt64 > IUpdateable ICategoryChannel IGuildChannel IChannel IEntity < System.UInt64 > IDeletable Inherited Members SocketGuildChannel.Guild SocketGuildChannel.Name SocketGuildChannel.Position SocketGuildChannel.Type SocketGuildChannel.RolePermissionOverwrites SocketGuildChannel.UserPermissionOverwrites SocketGuildChannel.UpdateAsync(RequestOptions) SocketGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) SocketGuildChannel.DeleteAsync(RequestOptions) SocketGuildChannel.GetPermissionOverwrite(IUser) SocketGuildChannel.GetPermissionOverwrite(IRole) SocketGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) SocketGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) SocketGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) SocketGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) SocketGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) SocketGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) SocketGuildChannel.ToString() SocketGuildChannel.IGuildChannel.Guild SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketCategoryChannel : SocketGuildChannel, IEntity<ulong>, IUpdateable, ICategoryChannel, IGuildChannel, IChannel, IEntity<ulong>, IDeletable Properties | Improve this Doc View Source Channels Gets the child channels of this category. Declaration public IReadOnlyCollection<SocketGuildChannel> Channels { get; } Property Value Type Description IReadOnlyCollection < SocketGuildChannel > A read-only collection of SocketGuildChannel whose CategoryId matches the identifier of this category channel. | Improve this Doc View Source Users Gets a collection of users that are able to view the channel. Declaration public override IReadOnlyCollection<SocketGuildUser> Users { get; } Property Value Type Description IReadOnlyCollection < SocketGuildUser > A read-only collection of users that can access the channel (i.e. the users seen in the user list). Overrides SocketGuildChannel.Users Methods | Improve this Doc View Source GetUser(UInt64) Declaration public override SocketGuildUser GetUser(ulong id) Parameters Type Name Description System.UInt64 id Returns Type Description SocketGuildUser Overrides SocketGuildChannel.GetUser(UInt64) Implements IEntity<TId> IUpdateable ICategoryChannel IGuildChannel IChannel IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.WebSocket.SocketChannel.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketChannel.html",
    "title": "Class SocketChannel | KaiHeiLa.Net 文档",
    "keywords": "Class SocketChannel Represents a WebSocket-based channel. Inheritance System.Object SocketEntity < System.UInt64 > SocketChannel SocketDMChannel SocketGuildChannel Implements IEntity < System.UInt64 > IChannel IEntity < System.UInt64 > IUpdateable Inherited Members SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public abstract class SocketChannel : SocketEntity<ulong>, IEntity<ulong>, IChannel, IEntity<ulong>, IUpdateable Properties | Improve this Doc View Source Users Gets a collection of users from the WebSocket cache. Declaration public IReadOnlyCollection<SocketUser> Users { get; } Property Value Type Description IReadOnlyCollection < SocketUser > Methods | Improve this Doc View Source GetUser(UInt64) Gets a generic user from this channel. Declaration public SocketUser GetUser(ulong id) Parameters Type Name Description System.UInt64 id The identifier of the user. Returns Type Description SocketUser A generic WebSocket-based user associated with the identifier. | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public virtual Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Implements IEntity<TId> IChannel IEntity<TId> IUpdateable"
  },
  "api/KaiHeiLa.WebSocket.SocketDMChannel.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketDMChannel.html",
    "title": "Class SocketDMChannel | KaiHeiLa.Net 文档",
    "keywords": "Class SocketDMChannel Represents a WebSocket-based direct-message channel. Inheritance System.Object SocketEntity < System.UInt64 > SocketChannel SocketDMChannel Implements IEntity < System.UInt64 > IUpdateable IDMChannel IEntity < Guid > ISocketPrivateChannel IPrivateChannel ISocketMessageChannel IMessageChannel IChannel IEntity < System.UInt64 > Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketDMChannel : SocketChannel, IEntity<ulong>, IUpdateable, IDMChannel, IEntity<Guid>, ISocketPrivateChannel, IPrivateChannel, ISocketMessageChannel, IMessageChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source CachedMessages Gets all messages in this channel's cache. Declaration public IReadOnlyCollection<SocketMessage> CachedMessages { get; } Property Value Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. | Improve this Doc View Source ChatCode Declaration public Guid ChatCode { get; } Property Value Type Description Guid Remarks This property is the same as Id . | Improve this Doc View Source Id Get the identifier of the DM channel. Declaration public Guid Id { get; } Property Value Type Description Guid Remarks This property is the same as ChatCode . | Improve this Doc View Source Recipient Gets the recipient of the channel. Declaration public SocketUser Recipient { get; } Property Value Type Description SocketUser | Improve this Doc View Source Users Gets a collection that is the current logged-in user and the recipient. Declaration public IReadOnlyCollection<SocketUser> Users { get; } Property Value Type Description IReadOnlyCollection < SocketUser > Methods | Improve this Doc View Source CloseAsync(RequestOptions) Declaration public Task CloseAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source DeleteMessageAsync(Guid, RequestOptions) Declaration public Task DeleteMessageAsync(Guid messageId, RequestOptions options = null) Parameters Type Name Description Guid messageId RequestOptions options Returns Type Description Task | Improve this Doc View Source DeleteMessageAsync(IMessage, RequestOptions) Declaration public Task DeleteMessageAsync(IMessage message, RequestOptions options = null) Parameters Type Name Description IMessage message RequestOptions options Returns Type Description Task | Improve this Doc View Source GetCachedMessage(Guid) Gets a cached message from this channel. Declaration public SocketMessage GetCachedMessage(Guid id) Parameters Type Name Description Guid id The Guid of the message. Returns Type Description SocketMessage A WebSocket-based message object; null if it does not exist in the cache or if caching is not enabled. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return null . Please refer to MessageCacheSize for more details. This method retrieves the message from the local WebSocket cache and does not send any additional request to KaiHeiLa. This message may be a message that has been deleted. | Improve this Doc View Source GetCachedMessages(Guid, Direction, Int32) Gets the last N cached messages starting from a certain message in this message channel. Declaration public IReadOnlyCollection<SocketMessage> GetCachedMessages(Guid fromMessageId, Direction dir, int limit = null) Parameters Type Name Description Guid fromMessageId The message ID to start the fetching from. Direction dir The direction of which the message should be gotten from. System.Int32 limit The number of messages to get. Returns Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return an empty collection. Please refer to MessageCacheSize for more details. This method retrieves the message(s) from the local WebSocket cache and does not send any additional request to KaiHeiLa. This read-only collection may include messages that have been deleted. The maximum number of messages that can be retrieved from this method depends on the MessageCacheSize set. | Improve this Doc View Source GetCachedMessages(IMessage, Direction, Int32) Gets the last N cached messages starting from a certain message in this message channel. Declaration public IReadOnlyCollection<SocketMessage> GetCachedMessages(IMessage fromMessage, Direction dir, int limit = null) Parameters Type Name Description IMessage fromMessage The message to start the fetching from. Direction dir The direction of which the message should be gotten from. System.Int32 limit The number of messages to get. Returns Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return an empty collection. Please refer to MessageCacheSize for more details. This method retrieves the message(s) from the local WebSocket cache and does not send any additional request to KaiHeiLa. This read-only collection may include messages that have been deleted. The maximum number of messages that can be retrieved from this method depends on the MessageCacheSize set. | Improve this Doc View Source GetCachedMessages(Int32) Gets the last N cached messages from this message channel. Declaration public IReadOnlyCollection<SocketMessage> GetCachedMessages(int limit = null) Parameters Type Name Description System.Int32 limit The number of messages to get. Returns Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return an empty collection. Please refer to MessageCacheSize for more details. This method retrieves the message(s) from the local WebSocket cache and does not send any additional request to KaiHeiLa. This read-only collection may include messages that have been deleted. The maximum number of messages that can be retrieved from this method depends on the MessageCacheSize set. | Improve this Doc View Source GetMessageAsync(Guid, RequestOptions) Gets the message associated with the given id . Declaration public Task<IMessage> GetMessageAsync(Guid id, RequestOptions options = null) Parameters Type Name Description Guid id TThe ID of the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IMessage > The message gotten from either the cache or the download, or null if none is found. | Improve this Doc View Source GetMessagesAsync(Guid, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<IMessage>> GetMessagesAsync(Guid referenceMessageId, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description Guid referenceMessageId The ID of the starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(IMessage, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<IMessage>> GetMessagesAsync(IMessage referenceMessage, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description IMessage referenceMessage The starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(Int32, RequestOptions) Gets the last N messages from this message channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<IMessage>> GetMessagesAsync(int limit = null, RequestOptions options = null) Parameters Type Name Description System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetUser(UInt64) Gets a user in this channel from the provided id . Declaration public SocketUser GetUser(ulong id) Parameters Type Name Description System.UInt64 id The identifier of the user. Returns Type Description SocketUser A SocketUser object that is a recipient of this channel; otherwise null . | Improve this Doc View Source ModifyMessageAsync(Guid, Action<MessageProperties>, RequestOptions) Declaration public Task ModifyMessageAsync(Guid messageId, Action<MessageProperties> func, RequestOptions options = null) Parameters Type Name Description Guid messageId Action < MessageProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source SendCardMessageAsync(IEnumerable<ICard>, Quote, RequestOptions) Sends a card message to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(IEnumerable<ICard> cards, Quote quote = null, RequestOptions options = null) Parameters Type Name Description IEnumerable < ICard > cards The cards to be sent. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendCardMessageAsync(ICard, Quote, RequestOptions) Sends a card message to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(ICard card, Quote quote = null, RequestOptions options = null) Parameters Type Name Description ICard card The card to be sent. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendFileMessageAsync(Stream, String, Quote, RequestOptions) Sends a file to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(Stream stream, string fileName = null, Quote quote = null, RequestOptions options = null) Parameters Type Name Description Stream stream The stream of the audio. System.String fileName The name of the audio. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends a file as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendFileMessageAsync(String, String, Quote, RequestOptions) Sends a file to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(string path, string fileName = null, Quote quote = null, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the audio. System.String fileName The name of the audio. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends a file as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendImageMessageAsync(Stream, String, Quote, RequestOptions) Sends an image to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(Stream stream, string fileName = null, Quote quote = null, RequestOptions options = null) Parameters Type Name Description Stream stream The stream of the image. System.String fileName The name of the image. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an image as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendImageMessageAsync(String, String, Quote, RequestOptions) Sends an image to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(string path, string fileName = null, Quote quote = null, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the image. System.String fileName The name of the image. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an image as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendKMarkdownMessageAsync(String, Quote, RequestOptions) Sends a KMarkdown message to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendKMarkdownMessageAsync(string text, Quote quote = null, RequestOptions options = null) Parameters Type Name Description System.String text The message to be sent. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendTextMessageAsync(String, Quote, RequestOptions) Sends a plain text to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendTextMessageAsync(string text, Quote quote = null, RequestOptions options = null) Parameters Type Name Description System.String text The message to be sent. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendVideoMessageAsync(Stream, String, Quote, RequestOptions) Sends a video to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(Stream stream, string fileName = null, Quote quote = null, RequestOptions options = null) Parameters Type Name Description Stream stream The stream of the video. System.String fileName The name of the video. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an video as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source SendVideoMessageAsync(String, String, Quote, RequestOptions) Sends a video to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(string path, string fileName = null, Quote quote = null, RequestOptions options = null) Parameters Type Name Description System.String path The file path of the video. System.String fileName The name of the video. Quote quote The message quote to be included. Used to reply to specific messages. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. Remarks This method sends an video as if you are uploading an image directly from your KaiHeiLa client. | Improve this Doc View Source ToString() Returns the recipient user. Declaration public override string ToString() Returns Type Description System.String | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public override Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Overrides SocketChannel.UpdateAsync(RequestOptions) Explicit Interface Implementations | Improve this Doc View Source IDMChannel.Recipient Gets the recipient of all messages in this channel. Declaration IUser IDMChannel.Recipient { get; } Returns Type Description IUser A user object that represents the other user in this channel. | Improve this Doc View Source ISocketPrivateChannel.Recipients Gets the users that can access this channel. Declaration IReadOnlyCollection<SocketUser> ISocketPrivateChannel.Recipients { get; } Returns Type Description IReadOnlyCollection < SocketUser > A read-only collection of users that can access this channel. Implements IEntity<TId> IUpdateable IDMChannel IEntity<TId> ISocketPrivateChannel IPrivateChannel ISocketMessageChannel IMessageChannel IChannel IEntity<TId>"
  },
  "api/KaiHeiLa.WebSocket.SocketEntity-1.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketEntity-1.html",
    "title": "Class SocketEntity<T> | KaiHeiLa.Net 文档",
    "keywords": "Class SocketEntity<T> Inheritance System.Object SocketEntity<T> SocketChannel SocketGuild SocketInvite SocketMessage SocketRole SocketUser Implements IEntity <T> Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public abstract class SocketEntity<T> : object, IEntity<T> where T : IEquatable<T> Type Parameters Name Description T Properties | Improve this Doc View Source Id Gets the unique identifier for this object. Declaration public T Id { get; } Property Value Type Description T Implements IEntity<TId>"
  },
  "api/KaiHeiLa.WebSocket.SocketGuild.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketGuild.html",
    "title": "Class SocketGuild | KaiHeiLa.Net 文档",
    "keywords": "Class SocketGuild Represents a WebSocket-based guild object. Inheritance System.Object SocketEntity < System.UInt64 > SocketGuild Implements IEntity < System.UInt64 > IGuild IEntity < System.UInt64 > IDisposable IUpdateable Inherited Members SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketGuild : SocketEntity<ulong>, IEntity<ulong>, IGuild, IEntity<ulong>, IDisposable, IUpdateable Properties | Improve this Doc View Source AutoDeleteTime TODO: To be documented. Declaration public string AutoDeleteTime { get; } Property Value Type Description System.String | Improve this Doc View Source BoostLevel Gets the level of guild boosting in this guild. Declaration public BoostLevel BoostLevel { get; } Property Value Type Description BoostLevel The level of guild boosting in this guild. | Improve this Doc View Source BoostNumber Declaration public int BoostNumber { get; } Property Value Type Description System.Int32 | Improve this Doc View Source BufferBoostNumber Declaration public int BufferBoostNumber { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CategoryChannels Gets a collection of all stage channels in this guild. Declaration public IReadOnlyCollection<SocketCategoryChannel> CategoryChannels { get; } Property Value Type Description IReadOnlyCollection < SocketCategoryChannel > A read-only collection of stage channels found within this guild. | Improve this Doc View Source Channels Gets a collection of all channels in this guild. Declaration public IReadOnlyCollection<SocketGuildChannel> Channels { get; } Property Value Type Description IReadOnlyCollection < SocketGuildChannel > A read-only collection of generic channels found within this guild. | Improve this Doc View Source CurrentUser Gets the current logged-in user. Declaration public SocketGuildUser CurrentUser { get; } Property Value Type Description SocketGuildUser | Improve this Doc View Source DefaultChannel Gets the default text channel for this guild. Declaration public SocketTextChannel DefaultChannel { get; } Property Value Type Description SocketTextChannel A SocketTextChannel representing the default text channel for this guild. Remarks This property retrieves default text channel for this guild. | Improve this Doc View Source DefaultChannelId Declaration public ulong DefaultChannelId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source DownloadedMemberCount Gets the number of members downloaded to the local guild cache. Declaration public int DownloadedMemberCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source EveryoneRole Gets the built-in role containing all users in this guild. Declaration public SocketRole EveryoneRole { get; } Property Value Type Description SocketRole A role object that represents an @everyone role in this guild. | Improve this Doc View Source Features Gets the features of this guild. Declaration public object[] Features { get; } Property Value Type Description System.Object [] An array of objects representing the features of this guild. Remarks important What this property represents is not well investigated. | Improve this Doc View Source HasAllMembers Indicates whether the client has all the members downloaded to the local guild cache. Declaration public bool HasAllMembers { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Icon Declaration public string Icon { get; } Property Value Type Description System.String | Improve this Doc View Source IsConnected Indicates whether the client is connected to this guild. Declaration public bool IsConnected { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOpenEnabled Declaration public bool IsOpenEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxBitrate Declaration public int MaxBitrate { get; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxUploadLimit Declaration public ulong MaxUploadLimit { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source MemberCount Gets the number of members. Declaration public int MemberCount { get; } Property Value Type Description System.Int32 Remarks This property retrieves the number of members returned by KaiHeiLa. tip Due to how this property is returned by KaiHeiLa instead of relying on the WebSocket cache, the number here is the most accurate in terms of counting the number of users within this guild. Use this instead of enumerating the count of the Users collection, as you may see discrepancy between that and this property. | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source NotifyType Gets the default notification type for this guild. Declaration public NotifyType NotifyType { get; } Property Value Type Description NotifyType A NotifyType representing the default notification type for this guild. | Improve this Doc View Source OpenId Declaration public uint OpenId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Owner Gets the user that owns this guild. Declaration public SocketGuildUser Owner { get; } Property Value Type Description SocketGuildUser | Improve this Doc View Source OwnerId Declaration public ulong OwnerId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source RecommendInfo Gets the recommendation information for this guild. Declaration public RecommendInfo RecommendInfo { get; } Property Value Type Description RecommendInfo A recommendation object that represents the recommendation information for this guild; null if the guild does not have a recommendation. | Improve this Doc View Source Region Declaration public string Region { get; } Property Value Type Description System.String | Improve this Doc View Source Roles Gets a collection of all roles in this guild. Declaration public IReadOnlyCollection<SocketRole> Roles { get; } Property Value Type Description IReadOnlyCollection < SocketRole > A read-only collection of roles found within this guild. Remarks warning Due to the lack of event args which should contains the reordered roles data when roles are reordered, this property may not be completely accurate. To ensure the most accurate results, it is recommended to call UpdateAsync(RequestOptions) before this property is used. | Improve this Doc View Source Status TODO: To be documented. Declaration public int Status { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TextChannels Gets a collection of all text channels in this guild. Declaration public IReadOnlyCollection<SocketTextChannel> TextChannels { get; } Property Value Type Description IReadOnlyCollection < SocketTextChannel > A read-only collection of message channels found within this guild. | Improve this Doc View Source Topic Declaration public string Topic { get; } Property Value Type Description System.String | Improve this Doc View Source Users Gets a collection of users in this guild. Declaration public IReadOnlyCollection<SocketGuildUser> Users { get; } Property Value Type Description IReadOnlyCollection < SocketGuildUser > A collection of guild users found within this guild. Remarks This property retrieves all users found within this guild. warning This property may not always return all the members for large guilds (i.e. guilds containing 100+ users). If you are simply looking to get the number of users present in this guild, consider using MemberCount instead. Otherwise, you may need to enable AlwaysDownloadUsers to fetch the full user list upon startup, or use to manually download the users. | Improve this Doc View Source VoiceChannels Gets a collection of all voice channels in this guild. Declaration public IReadOnlyCollection<SocketVoiceChannel> VoiceChannels { get; } Property Value Type Description IReadOnlyCollection < SocketVoiceChannel > A read-only collection of voice channels found within this guild. | Improve this Doc View Source WelcomeChannelId Declaration public ulong WelcomeChannelId { get; } Property Value Type Description System.UInt64 Methods | Improve this Doc View Source AddBanAsync(IUser, Int32, String, RequestOptions) Declaration public Task AddBanAsync(IUser user, int pruneDays = 0, string reason = null, RequestOptions options = null) Parameters Type Name Description IUser user System.Int32 pruneDays System.String reason RequestOptions options Returns Type Description Task | Improve this Doc View Source AddBanAsync(UInt64, Int32, String, RequestOptions) Declaration public Task AddBanAsync(ulong userId, int pruneDays = 0, string reason = null, RequestOptions options = null) Parameters Type Name Description System.UInt64 userId System.Int32 pruneDays System.String reason RequestOptions options Returns Type Description Task | Improve this Doc View Source CreateCategoryChannelAsync(String, Action<CreateCategoryChannelProperties>, RequestOptions) Creates a new channel category in this guild. Declaration public Task<RestCategoryChannel> CreateCategoryChannelAsync(string name, Action<CreateCategoryChannelProperties> func = null, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the category. Action < CreateCategoryChannelProperties > func The delegate containing the properties to be applied to the channel upon its creation. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestCategoryChannel > A task that represents the asynchronous creation operation. The task result contains the newly created category channel. | Improve this Doc View Source CreateRoleAsync(String, RequestOptions) Creates a new role with the provided name. Declaration public Task<RestRole> CreateRoleAsync(string name, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the role. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestRole > A task that represents the asynchronous creation operation. The task result contains the newly created role. | Improve this Doc View Source CreateTextChannelAsync(String, Action<CreateTextChannelProperties>, RequestOptions) Creates a new text channel in this guild. Declaration public Task<RestTextChannel> CreateTextChannelAsync(string name, Action<CreateTextChannelProperties> func = null, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the text channel. Action < CreateTextChannelProperties > func The delegate containing the properties to be applied to the channel upon its creation. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestTextChannel > A task that represents the asynchronous creation operation. The task result contains the newly created text channel. | Improve this Doc View Source CreateVoiceChannelAsync(String, Action<CreateVoiceChannelProperties>, RequestOptions) Creates a new voice channel in this guild. Declaration public Task<RestVoiceChannel> CreateVoiceChannelAsync(string name, Action<CreateVoiceChannelProperties> func = null, RequestOptions options = null) Parameters Type Name Description System.String name The new name for the voice channel. Action < CreateVoiceChannelProperties > func The delegate containing the properties to be applied to the channel upon its creation. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestVoiceChannel > A task that represents the asynchronous creation operation. The task result contains the newly created voice channel. | Improve this Doc View Source GetBanAsync(IUser, RequestOptions) Gets a ban object for a banned user. Declaration public Task<RestBan> GetBanAsync(IUser user, RequestOptions options = null) Parameters Type Name Description IUser user The banned user. RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestBan > A task that represents the asynchronous get operation. The task result contains a ban object, which contains the user information and the reason for the ban; null if the ban entry cannot be found. | Improve this Doc View Source GetBanAsync(UInt64, RequestOptions) Declaration public Task<RestBan> GetBanAsync(ulong userId, RequestOptions options = null) Parameters Type Name Description System.UInt64 userId RequestOptions options Returns Type Description Task < RestBan > | Improve this Doc View Source GetBansAsync(RequestOptions) Gets a collection of all users banned in this guild. Declaration public Task<IReadOnlyCollection<RestBan>> GetBansAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < RestBan >> A task that represents the asynchronous get operation. The task result contains a read-only collection of ban objects that this guild currently possesses, with each object containing the user banned and reason behind the ban. | Improve this Doc View Source GetChannel(UInt64) Gets a channel in this guild. Declaration public SocketGuildChannel GetChannel(ulong id) Parameters Type Name Description System.UInt64 id The identifier for the channel. Returns Type Description SocketGuildChannel A generic channel associated with the specified id ; null if none is found. | Improve this Doc View Source GetMutedDeafenedUsersAsync(RequestOptions) Gets the users who are muted or deafened in this guild. Declaration public Task<(IReadOnlyCollection<Cacheable<SocketUser, ulong>> Muted, IReadOnlyCollection<Cacheable<SocketUser, ulong>> Deafened)> GetMutedDeafenedUsersAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < IReadOnlyCollection < Cacheable < SocketUser , System.UInt64 >>, IReadOnlyCollection < Cacheable < SocketUser , System.UInt64 >>>> A task that represents the asynchronous get operation. The task result contains the collection of muted or deafened users in this guild. | Improve this Doc View Source GetRole(UInt32) Gets a role in this guild. Declaration public SocketRole GetRole(uint id) Parameters Type Name Description System.UInt32 id The identifier for the role. Returns Type Description SocketRole A role that is associated with the specified id ; null if none is found. | Improve this Doc View Source GetTextChannel(UInt64) Gets a text channel in this guild. Declaration public SocketTextChannel GetTextChannel(ulong id) Parameters Type Name Description System.UInt64 id The identifier for the text channel. Returns Type Description SocketTextChannel A text channel associated with the specified id ; null if none is found. | Improve this Doc View Source GetUser(UInt64) Gets a user from this guild. Declaration public SocketGuildUser GetUser(ulong id) Parameters Type Name Description System.UInt64 id The identifier of the user. Returns Type Description SocketGuildUser A guild user associated with the specified id ; null if none is found. Remarks This method retrieves a user found within this guild. note This may return null in the WebSocket implementation due to incomplete user collection in large guilds. | Improve this Doc View Source GetVoiceChannel(UInt64) Gets a voice channel in this guild. Declaration public SocketVoiceChannel GetVoiceChannel(ulong id) Parameters Type Name Description System.UInt64 id The identifier for the voice channel. Returns Type Description SocketVoiceChannel A voice channel associated with the specified id ; null if none is found. | Improve this Doc View Source LeaveAsync(RequestOptions) Declaration public Task LeaveAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveBanAsync(IUser, RequestOptions) Declaration public Task RemoveBanAsync(IUser user, RequestOptions options = null) Parameters Type Name Description IUser user RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveBanAsync(UInt64, RequestOptions) Declaration public Task RemoveBanAsync(ulong userId, RequestOptions options = null) Parameters Type Name Description System.UInt64 userId RequestOptions options Returns Type Description Task | Improve this Doc View Source ToString() Gets the name of the guild. Declaration public override string ToString() Returns Type Description System.String A string that resolves to Name . | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Implements IEntity<TId> IGuild IEntity<TId> IDisposable IUpdateable"
  },
  "api/KaiHeiLa.WebSocket.SocketGuildChannel.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketGuildChannel.html",
    "title": "Class SocketGuildChannel | KaiHeiLa.Net 文档",
    "keywords": "Class SocketGuildChannel Inheritance System.Object SocketEntity < System.UInt64 > SocketChannel SocketGuildChannel SocketCategoryChannel SocketTextChannel SocketVoiceChannel Implements IEntity < System.UInt64 > IUpdateable IGuildChannel IChannel IEntity < System.UInt64 > IDeletable Inherited Members SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketGuildChannel : SocketChannel, IEntity<ulong>, IUpdateable, IGuildChannel, IChannel, IEntity<ulong>, IDeletable Properties | Improve this Doc View Source Guild Gets the guild associated with this channel. Declaration public SocketGuild Guild { get; } Property Value Type Description SocketGuild A guild object that this channel belongs to. | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Position Declaration public int? Position { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source RolePermissionOverwrites Declaration public IReadOnlyCollection<RolePermissionOverwrite> RolePermissionOverwrites { get; } Property Value Type Description IReadOnlyCollection < RolePermissionOverwrite > | Improve this Doc View Source Type Gets the type of this channel. Declaration public ChannelType Type { get; } Property Value Type Description ChannelType A ChannelType representing the type of this channel. | Improve this Doc View Source UserPermissionOverwrites Declaration public IReadOnlyCollection<UserPermissionOverwrite> UserPermissionOverwrites { get; } Property Value Type Description IReadOnlyCollection < UserPermissionOverwrite > | Improve this Doc View Source Users Gets a collection of users that are able to view the channel. Declaration public virtual IReadOnlyCollection<SocketGuildUser> Users { get; } Property Value Type Description IReadOnlyCollection < SocketGuildUser > A read-only collection of users that can access the channel (i.e. the users seen in the user list). Methods | Improve this Doc View Source AddPermissionOverwriteAsync(IGuildUser, RequestOptions) Adds or updates the permission overwrite for the given user. Declaration public Task AddPermissionOverwriteAsync(IGuildUser user, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to add the overwrite to. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous permission operation for adding the specified permissions to the channel. | Improve this Doc View Source AddPermissionOverwriteAsync(IRole, RequestOptions) Adds or updates the permission overwrite for the given role. Declaration public Task AddPermissionOverwriteAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role The role to add the overwrite to. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous permission operation for adding the specified permissions to the channel. | Improve this Doc View Source DeleteAsync(RequestOptions) Declaration public Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source GetPermissionOverwrite(IRole) Gets the permission overwrite for a specific role. Declaration public virtual OverwritePermissions? GetPermissionOverwrite(IRole role) Parameters Type Name Description IRole role The role to get the overwrite from. Returns Type Description System.Nullable < OverwritePermissions > An overwrite object for the targeted role; null if none is set. | Improve this Doc View Source GetPermissionOverwrite(IUser) Gets the permission overwrite for a specific user. Declaration public virtual OverwritePermissions? GetPermissionOverwrite(IUser user) Parameters Type Name Description IUser user The user to get the overwrite from. Returns Type Description System.Nullable < OverwritePermissions > An overwrite object for the targeted user; null if none is set. | Improve this Doc View Source GetUser(UInt64) Declaration public virtual SocketGuildUser GetUser(ulong id) Parameters Type Name Description System.UInt64 id Returns Type Description SocketGuildUser | Improve this Doc View Source ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) Declaration public Task ModifyAsync(Action<ModifyGuildChannelProperties> func, RequestOptions options = null) Parameters Type Name Description Action < ModifyGuildChannelProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) Updates the permission overwrite for the given user, if one exists. Declaration public Task ModifyPermissionOverwriteAsync(IGuildUser user, Func<OverwritePermissions, OverwritePermissions> func, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to modify the overwrite for. Func < OverwritePermissions , OverwritePermissions > func A delegate containing the values to modify the permission overwrite with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. | Improve this Doc View Source ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) Updates the permission overwrite for the given role, if one exists. Declaration public Task ModifyPermissionOverwriteAsync(IRole role, Func<OverwritePermissions, OverwritePermissions> func, RequestOptions options = null) Parameters Type Name Description IRole role The role to remove the overwrite for. Func < OverwritePermissions , OverwritePermissions > func A delegate containing the values to modify the permission overwrite with. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. | Improve this Doc View Source RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) Removes the permission overwrite for the given user, if one exists. Declaration public Task RemovePermissionOverwriteAsync(IGuildUser user, RequestOptions options = null) Parameters Type Name Description IGuildUser user The user to remove the overwrite from. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. | Improve this Doc View Source RemovePermissionOverwriteAsync(IRole, RequestOptions) Removes the permission overwrite for the given role, if one exists. Declaration public Task RemovePermissionOverwriteAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role The role to remove the overwrite from. RequestOptions options The options to be used when sending the request. Returns Type Description Task A task representing the asynchronous operation for removing the specified permissions from the channel. | Improve this Doc View Source ToString() Gets the name of the channel. Declaration public override string ToString() Returns Type Description System.String A string that resolves to Name . | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public override Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Overrides SocketChannel.UpdateAsync(RequestOptions) Explicit Interface Implementations | Improve this Doc View Source IGuildChannel.Guild Gets the guild associated with this channel. Declaration IGuild IGuildChannel.Guild { get; } Returns Type Description IGuild A guild object that this channel belongs to. Implements IEntity<TId> IUpdateable IGuildChannel IChannel IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.WebSocket.SocketGuildHelper.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketGuildHelper.html",
    "title": "Class SocketGuildHelper | KaiHeiLa.Net 文档",
    "keywords": "Class SocketGuildHelper Inheritance System.Object SocketGuildHelper Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public static class SocketGuildHelper : object Methods | Improve this Doc View Source UpdateAsync(SocketGuild, KaiHeiLaSocketClient, RequestOptions) Declaration public static Task UpdateAsync(SocketGuild guild, KaiHeiLaSocketClient client, RequestOptions options) Parameters Type Name Description SocketGuild guild KaiHeiLaSocketClient client RequestOptions options Returns Type Description Task"
  },
  "api/KaiHeiLa.WebSocket.SocketGuildUser.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketGuildUser.html",
    "title": "Class SocketGuildUser | KaiHeiLa.Net 文档",
    "keywords": "Class SocketGuildUser Represents a WebSocket-based guild user. Inheritance System.Object SocketEntity < System.UInt64 > SocketUser SocketGuildUser Implements IEntity < System.UInt64 > IGuildUser IUser IEntity < System.UInt64 > IMentionable IPresence IUpdateable Inherited Members SocketUser.IdentifyNumber SocketUser.KMarkdownMention SocketUser.IsOnline SocketUser.ActiveClient SocketUser.CreateDMChannelAsync(RequestOptions) SocketUser.GetIntimacyAsync(RequestOptions) SocketUser.UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) SocketUser.ToString() SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketGuildUser : SocketUser, IEntity<ulong>, IGuildUser, IUser, IEntity<ulong>, IMentionable, IPresence, IUpdateable Properties | Improve this Doc View Source ActiveAt Declaration public DateTimeOffset ActiveAt { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Avatar Declaration public override string Avatar { get; } Property Value Type Description System.String Overrides SocketUser.Avatar | Improve this Doc View Source Color Gets the color the user's displayed name is being displayed in. Declaration public Color Color { get; } Property Value Type Description Color A Color struct representing the color the user's display name is being displayed in. | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source Guild Gets the guild the user is in. Declaration public SocketGuild Guild { get; } Property Value Type Description SocketGuild | Improve this Doc View Source GuildPermissions Gets the guild-level permissions for this user. Declaration public GuildPermissions GuildPermissions { get; } Property Value Type Description GuildPermissions A GuildPermissions structure for this user, representing what permissions this user has in the guild. | Improve this Doc View Source IdentifyNumberValue Declaration public override ushort? IdentifyNumberValue { get; } Property Value Type Description System.Nullable < System.UInt16 > Overrides SocketUser.IdentifyNumberValue | Improve this Doc View Source IsBanned Declaration public override bool? IsBanned { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsBanned | Improve this Doc View Source IsBot Declaration public override bool? IsBot { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsBot | Improve this Doc View Source IsDenoiseEnabled Declaration public override bool? IsDenoiseEnabled { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsDenoiseEnabled | Improve this Doc View Source IsMobileVerified Declaration public bool IsMobileVerified { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOwner Declaration public bool? IsOwner { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsVIP Declaration public override bool? IsVIP { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsVIP | Improve this Doc View Source JoinedAt Declaration public DateTimeOffset JoinedAt { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Nickname Declaration public string Nickname { get; } Property Value Type Description System.String | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source Roles Returns a collection of roles that the user possesses. Declaration public IReadOnlyCollection<SocketRole> Roles { get; } Property Value Type Description IReadOnlyCollection < SocketRole > Remarks warning Due to the lack of events which should be raised when a role is added or removed from a user, this property may not be completely accurate. To ensure the most accurate results, it is recommended to call UpdateAsync(RequestOptions) before this property is used. | Improve this Doc View Source Username Declaration public override string Username { get; } Property Value Type Description System.String Overrides SocketUser.Username | Improve this Doc View Source UserTag Get the tag this user has. Declaration public override UserTag UserTag { get; } Property Value Type Description UserTag Overrides SocketUser.UserTag | Improve this Doc View Source VIPAvatar Declaration public override string VIPAvatar { get; } Property Value Type Description System.String Overrides SocketUser.VIPAvatar Methods | Improve this Doc View Source AddRoleAsync(IRole, RequestOptions) Declaration public Task AddRoleAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role RequestOptions options Returns Type Description Task | Improve this Doc View Source AddRoleAsync(UInt32, RequestOptions) Declaration public Task AddRoleAsync(uint roleId, RequestOptions options = null) Parameters Type Name Description System.UInt32 roleId RequestOptions options Returns Type Description Task | Improve this Doc View Source AddRolesAsync(IEnumerable<IRole>, RequestOptions) Declaration public Task AddRolesAsync(IEnumerable<IRole> roles, RequestOptions options = null) Parameters Type Name Description IEnumerable < IRole > roles RequestOptions options Returns Type Description Task | Improve this Doc View Source AddRolesAsync(IEnumerable<UInt32>, RequestOptions) Declaration public Task AddRolesAsync(IEnumerable<uint> roleIds, RequestOptions options = null) Parameters Type Name Description IEnumerable < System.UInt32 > roleIds RequestOptions options Returns Type Description Task | Improve this Doc View Source DeafenAsync(RequestOptions) Declaration public Task DeafenAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source GetConnectedVoiceChannelsAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<IVoiceChannel>> GetConnectedVoiceChannelsAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < IVoiceChannel >> | Improve this Doc View Source GetPermissions(IGuildChannel) Gets the level permissions granted to this user to a given channel. Declaration public ChannelPermissions GetPermissions(IGuildChannel channel) Parameters Type Name Description IGuildChannel channel The channel to get the permission from. Returns Type Description ChannelPermissions A ChannelPermissions structure representing the permissions that a user has in the specified channel. | Improve this Doc View Source KickAsync(RequestOptions) Declaration public Task KickAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source ModifyNicknameAsync(Action<String>, RequestOptions) Declaration public Task ModifyNicknameAsync(Action<string> func, RequestOptions options = null) Parameters Type Name Description Action < System.String > func RequestOptions options Returns Type Description Task | Improve this Doc View Source MuteAsync(RequestOptions) Declaration public Task MuteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveRoleAsync(IRole, RequestOptions) Declaration public Task RemoveRoleAsync(IRole role, RequestOptions options = null) Parameters Type Name Description IRole role RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveRoleAsync(UInt32, RequestOptions) Declaration public Task RemoveRoleAsync(uint roleId, RequestOptions options = null) Parameters Type Name Description System.UInt32 roleId RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveRolesAsync(IEnumerable<IRole>, RequestOptions) Declaration public Task RemoveRolesAsync(IEnumerable<IRole> roles, RequestOptions options = null) Parameters Type Name Description IEnumerable < IRole > roles RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveRolesAsync(IEnumerable<UInt32>, RequestOptions) Declaration public Task RemoveRolesAsync(IEnumerable<uint> roleIds, RequestOptions options = null) Parameters Type Name Description IEnumerable < System.UInt32 > roleIds RequestOptions options Returns Type Description Task | Improve this Doc View Source UndeafenAsync(RequestOptions) Declaration public Task UndeafenAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source UnmuteAsync(RequestOptions) Declaration public Task UnmuteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source UpdateAsync(RequestOptions) Fetches the users data from the REST API to update this object, especially the Roles property. Declaration public Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task A task that represents the asynchronous reloading operation. Explicit Interface Implementations | Improve this Doc View Source IGuildUser.Guild Gets the guild for this user. Declaration IGuild IGuildUser.Guild { get; } Returns Type Description IGuild A guild object that this user belongs to. Implements IEntity<TId> IGuildUser IUser IEntity<TId> IMentionable IPresence IUpdateable"
  },
  "api/KaiHeiLa.WebSocket.SocketInvite.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketInvite.html",
    "title": "Class SocketInvite | KaiHeiLa.Net 文档",
    "keywords": "Class SocketInvite Represents a WebSocket-based invite to a guild. Inheritance System.Object SocketEntity < System.UInt32 > SocketInvite Implements IEntity < System.UInt32 > IInvite IEntity < System.UInt32 > IDeletable Inherited Members SocketEntity<UInt32>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketInvite : SocketEntity<uint>, IEntity<uint>, IInvite, IEntity<uint>, IDeletable Properties | Improve this Doc View Source Channel Gets the channel where this invite was created. Declaration public SocketGuildChannel Channel { get; } Property Value Type Description SocketGuildChannel | Improve this Doc View Source ChannelId Declaration public ulong? ChannelId { get; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source Code Declaration public string Code { get; } Property Value Type Description System.String | Improve this Doc View Source ExpiresAt Gets the time at which this invite will expire. Declaration public DateTimeOffset? ExpiresAt { get; set; } Property Value Type Description System.Nullable < DateTimeOffset > | Improve this Doc View Source Guild Gets the guild where this invite was created. Declaration public SocketGuild Guild { get; } Property Value Type Description SocketGuild | Improve this Doc View Source GuildId Declaration public ulong? GuildId { get; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source Inviter Gets the user that created this invite if available. Declaration public SocketGuildUser Inviter { get; } Property Value Type Description SocketGuildUser | Improve this Doc View Source MaxAge Gets the time span until the invite expires. Declaration public TimeSpan? MaxAge { get; } Property Value Type Description System.Nullable < TimeSpan > | Improve this Doc View Source MaxUses Gets the max number of uses this invite may have. Declaration public int? MaxUses { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source RemainingUses Gets the number of times this invite still remains. Declaration public int? RemainingUses { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Url Declaration public string Url { get; } Property Value Type Description System.String | Improve this Doc View Source Uses Gets the number of times this invite has been used. Declaration public int? Uses { get; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source DeleteAsync(RequestOptions) Declaration public Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source ToString() Gets the URL of the invite. Declaration public override string ToString() Returns Type Description System.String A string that resolves to the Url of the invite. Explicit Interface Implementations | Improve this Doc View Source IInvite.Channel Gets the channel this invite is linked to. Declaration IChannel IInvite.Channel { get; } Returns Type Description IChannel A generic channel that the invite points to. | Improve this Doc View Source IInvite.ChannelType Gets the type of the channel this invite is linked to. Declaration ChannelType IInvite.ChannelType { get; } Returns Type Description ChannelType | Improve this Doc View Source IInvite.Guild Gets the guild this invite is linked to. Declaration IGuild IInvite.Guild { get; } Returns Type Description IGuild A guild object representing the guild that the invite points to. | Improve this Doc View Source IInvite.Inviter Gets the user that created this invite. Declaration IUser IInvite.Inviter { get; } Returns Type Description IUser A user that created this invite. Implements IEntity<TId> IInvite IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.WebSocket.SocketMessage.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketMessage.html",
    "title": "Class SocketMessage | KaiHeiLa.Net 文档",
    "keywords": "Class SocketMessage Represents a WebSocket-based message. Inheritance System.Object SocketEntity < Guid > SocketMessage SocketSystemMessage SocketUserMessage Implements IEntity < Guid > IMessage IEntity < Guid > IDeletable IUpdateable Inherited Members SocketEntity<Guid>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public abstract class SocketMessage : SocketEntity<Guid>, IEntity<Guid>, IMessage, IEntity<Guid>, IDeletable, IUpdateable Properties | Improve this Doc View Source Attachment Gets the attachment included in this message. Declaration public virtual Attachment Attachment { get; } Property Value Type Description Attachment | Improve this Doc View Source Author Gets the author of this message. Declaration public SocketUser Author { get; } Property Value Type Description SocketUser A WebSocket-based user object. | Improve this Doc View Source Cards Returns all cards included in this message. Declaration public virtual IReadOnlyCollection<ICard> Cards { get; } Property Value Type Description IReadOnlyCollection < ICard > Collection of card objects. | Improve this Doc View Source Channel Gets the source channel of the message. Declaration public ISocketMessageChannel Channel { get; } Property Value Type Description ISocketMessageChannel A WebSocket-based message channel. | Improve this Doc View Source CleanContent Declaration public string CleanContent { get; } Property Value Type Description System.String | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description System.String | Improve this Doc View Source EditedTimestamp Declaration public DateTimeOffset? EditedTimestamp { get; } Property Value Type Description System.Nullable < DateTimeOffset > | Improve this Doc View Source Embeds Returns all embeds included in this message. Declaration public virtual IReadOnlyCollection<IEmbed> Embeds { get; } Property Value Type Description IReadOnlyCollection < IEmbed > Collection of embed objects. | Improve this Doc View Source IsPinned Declaration public virtual bool? IsPinned { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source MentionedEveryone Declaration public virtual bool? MentionedEveryone { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source MentionedHere Declaration public virtual bool? MentionedHere { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source MentionedRoles Returns the roles mentioned in this message. Declaration public virtual IReadOnlyCollection<SocketRole> MentionedRoles { get; } Property Value Type Description IReadOnlyCollection < SocketRole > Collection of WebSocket-based roles. | Improve this Doc View Source MentionedUsers Returns the users mentioned in this message. Declaration public IReadOnlyCollection<SocketUser> MentionedUsers { get; } Property Value Type Description IReadOnlyCollection < SocketUser > Collection of WebSocket-based users. | Improve this Doc View Source RawContent Gets the raw content of the message. Declaration public string RawContent { get; } Property Value Type Description System.String Remarks This property is only available for messages that were received from the gateway. | Improve this Doc View Source Reactions Declaration public IReadOnlyDictionary<IEmote, ReactionMetadata> Reactions { get; } Property Value Type Description IReadOnlyDictionary < IEmote , ReactionMetadata > | Improve this Doc View Source Source Gets the source type of this message. Declaration public MessageSource Source { get; } Property Value Type Description MessageSource | Improve this Doc View Source Tags Declaration public virtual IReadOnlyCollection<ITag> Tags { get; } Property Value Type Description IReadOnlyCollection < ITag > | Improve this Doc View Source Timestamp Declaration public DateTimeOffset Timestamp { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Type Gets the type of this message. Declaration public MessageType Type { get; } Property Value Type Description MessageType Methods | Improve this Doc View Source AddReactionAsync(IEmote, RequestOptions) Declaration public Task AddReactionAsync(IEmote emote, RequestOptions options = null) Parameters Type Name Description IEmote emote RequestOptions options Returns Type Description Task | Improve this Doc View Source DeleteAsync(RequestOptions) Declaration public Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source GetReactionUsersAsync(IEmote, RequestOptions) Declaration public Task<IReadOnlyCollection<IUser>> GetReactionUsersAsync(IEmote emote, RequestOptions options = null) Parameters Type Name Description IEmote emote RequestOptions options Returns Type Description Task < IReadOnlyCollection < IUser >> | Improve this Doc View Source RemoveReactionAsync(IEmote, IUser, RequestOptions) Declaration public Task RemoveReactionAsync(IEmote emote, IUser user, RequestOptions options = null) Parameters Type Name Description IEmote emote IUser user RequestOptions options Returns Type Description Task | Improve this Doc View Source RemoveReactionAsync(IEmote, UInt64, RequestOptions) Declaration public Task RemoveReactionAsync(IEmote emote, ulong userId, RequestOptions options = null) Parameters Type Name Description IEmote emote System.UInt64 userId RequestOptions options Returns Type Description Task | Improve this Doc View Source ToString() Gets the content of the message. Declaration public override string ToString() Returns Type Description System.String Content of the message. | Improve this Doc View Source UpdateAsync(RequestOptions) Declaration public Task UpdateAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task Explicit Interface Implementations | Improve this Doc View Source IMessage.Attachment Gets the attachment included in this message. Declaration IAttachment IMessage.Attachment { get; } Returns Type Description IAttachment The attachment included in this message; | Improve this Doc View Source IMessage.Author Gets the author of this message. Declaration IUser IMessage.Author { get; } Returns Type Description IUser | Improve this Doc View Source IMessage.Channel Gets the source channel of the message. Declaration IMessageChannel IMessage.Channel { get; } Returns Type Description IMessageChannel Implements IEntity<TId> IMessage IEntity<TId> IDeletable IUpdateable"
  },
  "api/KaiHeiLa.WebSocket.SocketPresence.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketPresence.html",
    "title": "Class SocketPresence | KaiHeiLa.Net 文档",
    "keywords": "Class SocketPresence Represents the WebSocket user's presence status. This may include their online status and their activity. Inheritance System.Object SocketPresence Implements IPresence Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketPresence : object, IPresence Properties | Improve this Doc View Source ActiveClient Declaration public ClientType? ActiveClient { get; } Property Value Type Description System.Nullable < ClientType > | Improve this Doc View Source IsOnline Declaration public bool? IsOnline { get; } Property Value Type Description System.Nullable < System.Boolean > Implements IPresence"
  },
  "api/KaiHeiLa.WebSocket.SocketReaction.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketReaction.html",
    "title": "Class SocketReaction | KaiHeiLa.Net 文档",
    "keywords": "Class SocketReaction Inheritance System.Object SocketReaction Implements IReaction Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketReaction : object, IReaction Properties | Improve this Doc View Source Channel Gets the channel where the reaction takes place in. Declaration public ISocketMessageChannel Channel { get; } Property Value Type Description ISocketMessageChannel A WebSocket-based message channel. | Improve this Doc View Source Emote The IEmote used in the reaction. Declaration public IEmote Emote { get; } Property Value Type Description IEmote | Improve this Doc View Source Message Gets the message that has been reacted to if possible. Declaration public Optional<SocketUserMessage> Message { get; } Property Value Type Description Optional < SocketUserMessage > A WebSocket-based message where possible; a value is not always returned. See Also Optional <T> | Improve this Doc View Source MessageId Gets the ID of the message that has been reacted to. Declaration public Guid MessageId { get; } Property Value Type Description Guid A message Guid associated with the message. | Improve this Doc View Source User Gets the user who added the reaction if possible. Declaration public Optional<IUser> User { get; } Property Value Type Description Optional < IUser > A user object where possible; a value is not always returned. Remarks This property attempts to retrieve a WebSocket-cached user that is responsible for this reaction from the client. In other words, when the user is not in the WebSocket cache, this property may not contain a value, leaving the only identifiable information to be UserId . If you wish to obtain an identifiable user object, consider utilizing KaiHeiLaRestClient which will attempt to retrieve the user from REST. See Also Optional <T> | Improve this Doc View Source UserId Gets the ID of the user who added the reaction. Declaration public ulong UserId { get; } Property Value Type Description System.UInt64 A user identifier associated with the user. Remarks This property retrieves the identifier of the user responsible for this reaction. This property will always contain the user identifier in event that User cannot be retrieved. Implements IReaction"
  },
  "api/KaiHeiLa.WebSocket.SocketRole.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketRole.html",
    "title": "Class SocketRole | KaiHeiLa.Net 文档",
    "keywords": "Class SocketRole Represents a WebSocket-based role to be given to a guild user. Inheritance System.Object SocketEntity < System.UInt32 > SocketRole Implements IEntity < System.UInt32 > IRole IEntity < System.UInt32 > IDeletable IMentionable IComparable < IRole > Inherited Members SocketEntity<UInt32>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketRole : SocketEntity<uint>, IEntity<uint>, IRole, IEntity<uint>, IDeletable, IMentionable, IComparable<IRole> Properties | Improve this Doc View Source Color Gets the color given to users of this role. Declaration public Color Color { get; } Property Value Type Description Color A Color struct representing the color of this role. | Improve this Doc View Source Guild Gets the guild that owns this role. Declaration public SocketGuild Guild { get; } Property Value Type Description SocketGuild A SocketGuild representing the parent guild of this role. | Improve this Doc View Source IsEveryone Returns a value that determines if the role is an @everyone role. Declaration public bool IsEveryone { get; } Property Value Type Description System.Boolean true if the role is @everyone; otherwise false . | Improve this Doc View Source IsHoisted Declaration public bool IsHoisted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMentionable Declaration public bool IsMentionable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KMarkdownMention Declaration public string KMarkdownMention { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Permissions Gets the permissions granted to members of this role. Declaration public GuildPermissions Permissions { get; } Property Value Type Description GuildPermissions A GuildPermissions struct that this role possesses. | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source Position Declaration public int Position { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public RoleType? Type { get; set; } Property Value Type Description System.Nullable < RoleType > Methods | Improve this Doc View Source CompareTo(IRole) Declaration public int CompareTo(IRole role) Parameters Type Name Description IRole role Returns Type Description System.Int32 | Improve this Doc View Source DeleteAsync(RequestOptions) Declaration public Task DeleteAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task | Improve this Doc View Source GetUsersAsync(RequestOptions) Gets a collection of users with this role. Declaration public IAsyncEnumerable<IReadOnlyCollection<SocketGuildUser>> GetUsersAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < SocketGuildUser >> Paged collection of users with this role. Remarks If the guild this role belongs to does not has all members cached locally by checking HasAllMembers , this method will request the data via REST and update the guild users cache, otherwise it will return the cached data. | Improve this Doc View Source ModifyAsync(Action<RoleProperties>, RequestOptions) Declaration public Task ModifyAsync(Action<RoleProperties> func, RequestOptions options = null) Parameters Type Name Description Action < RoleProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source ToString() Gets the name of the role. Declaration public override string ToString() Returns Type Description System.String A string that resolves to Name . Explicit Interface Implementations | Improve this Doc View Source IRole.Guild Gets the guild that owns this role. Declaration IGuild IRole.Guild { get; } Returns Type Description IGuild A guild representing the parent guild of this role. Implements IEntity<TId> IRole IEntity<TId> IDeletable IMentionable IComparable<>"
  },
  "api/KaiHeiLa.WebSocket.SocketSelfUser.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketSelfUser.html",
    "title": "Class SocketSelfUser | KaiHeiLa.Net 文档",
    "keywords": "Class SocketSelfUser Represents the logged-in WebSocket-based user. Inheritance System.Object SocketEntity < System.UInt64 > SocketUser SocketSelfUser Implements IEntity < System.UInt64 > ISelfUser IUser IEntity < System.UInt64 > IMentionable IPresence Inherited Members SocketUser.IdentifyNumber SocketUser.KMarkdownMention SocketUser.PlainTextMention SocketUser.IsOnline SocketUser.ActiveClient SocketUser.CreateDMChannelAsync(RequestOptions) SocketUser.GetIntimacyAsync(RequestOptions) SocketUser.UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) SocketUser.ToString() SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketSelfUser : SocketUser, IEntity<ulong>, ISelfUser, IUser, IEntity<ulong>, IMentionable, IPresence Properties | Improve this Doc View Source Avatar Declaration public override string Avatar { get; } Property Value Type Description System.String Overrides SocketUser.Avatar | Improve this Doc View Source IdentifyNumberValue Declaration public override ushort? IdentifyNumberValue { get; } Property Value Type Description System.Nullable < System.UInt16 > Overrides SocketUser.IdentifyNumberValue | Improve this Doc View Source InvitedCount Declaration public int InvitedCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsBanned Declaration public override bool? IsBanned { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsBanned | Improve this Doc View Source IsBot Declaration public override bool? IsBot { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsBot | Improve this Doc View Source IsDenoiseEnabled Declaration public override bool? IsDenoiseEnabled { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsDenoiseEnabled | Improve this Doc View Source IsMobileVerified Declaration public bool IsMobileVerified { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVIP Declaration public override bool? IsVIP { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsVIP | Improve this Doc View Source Mobile Declaration public string Mobile { get; } Property Value Type Description System.String | Improve this Doc View Source MobilePrefix Declaration public string MobilePrefix { get; } Property Value Type Description System.String | Improve this Doc View Source Username Declaration public override string Username { get; } Property Value Type Description System.String Overrides SocketUser.Username | Improve this Doc View Source UserTag Get the tag this user has. Declaration public override UserTag UserTag { get; } Property Value Type Description UserTag Overrides SocketUser.UserTag | Improve this Doc View Source VIPAvatar Declaration public override string VIPAvatar { get; } Property Value Type Description System.String Overrides SocketUser.VIPAvatar Methods | Improve this Doc View Source StartPlayingAsync(IGame, RequestOptions) Declaration public Task StartPlayingAsync(IGame game, RequestOptions options = null) Parameters Type Name Description IGame game RequestOptions options Returns Type Description Task | Improve this Doc View Source StartPlayingAsync(Music, RequestOptions) Declaration public Task StartPlayingAsync(Music music, RequestOptions options = null) Parameters Type Name Description Music music RequestOptions options Returns Type Description Task | Improve this Doc View Source StopPlayingAsync(ActivityType, RequestOptions) Declaration public Task StopPlayingAsync(ActivityType type, RequestOptions options = null) Parameters Type Name Description ActivityType type RequestOptions options Returns Type Description Task Implements IEntity<TId> ISelfUser IUser IEntity<TId> IMentionable IPresence"
  },
  "api/KaiHeiLa.WebSocket.SocketSystemMessage.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketSystemMessage.html",
    "title": "Class SocketSystemMessage | KaiHeiLa.Net 文档",
    "keywords": "Class SocketSystemMessage Represents a WebSocket-based message sent by the system. Inheritance System.Object SocketEntity < Guid > SocketMessage SocketSystemMessage Implements IEntity < Guid > IUpdateable ISystemMessage IMessage IEntity < Guid > IDeletable Inherited Members SocketMessage.Author SocketMessage.Channel SocketMessage.Source SocketMessage.Content SocketMessage.RawContent SocketMessage.CleanContent SocketMessage.Timestamp SocketMessage.EditedTimestamp SocketMessage.IsPinned SocketMessage.MentionedEveryone SocketMessage.MentionedHere SocketMessage.Type SocketMessage.Attachment SocketMessage.Cards SocketMessage.Embeds SocketMessage.MentionedRoles SocketMessage.MentionedUsers SocketMessage.Tags SocketMessage.Reactions SocketMessage.DeleteAsync(RequestOptions) SocketMessage.UpdateAsync(RequestOptions) SocketMessage.AddReactionAsync(IEmote, RequestOptions) SocketMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions) SocketMessage.RemoveReactionAsync(IEmote, UInt64, RequestOptions) SocketMessage.GetReactionUsersAsync(IEmote, RequestOptions) SocketMessage.ToString() SocketMessage.IMessage.Author SocketMessage.IMessage.Channel SocketMessage.IMessage.Attachment SocketEntity<Guid>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketSystemMessage : SocketMessage, IEntity<Guid>, IUpdateable, ISystemMessage, IMessage, IEntity<Guid>, IDeletable Properties | Improve this Doc View Source SystemMessageType Gets the type of the system message. Declaration public SystemMessageType SystemMessageType { get; } Property Value Type Description SystemMessageType Remarks warning Because the data from KaiHeiLa does not describe the type of the message in detail, this property is not implemented yet. Accessing this property will always result in an exception at present. Implements IEntity<TId> IUpdateable ISystemMessage IMessage IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.WebSocket.SocketTextChannel.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketTextChannel.html",
    "title": "Class SocketTextChannel | KaiHeiLa.Net 文档",
    "keywords": "Class SocketTextChannel Represents a WebSocket-based channel in a guild that can send and receive messages. Inheritance System.Object SocketEntity < System.UInt64 > SocketChannel SocketGuildChannel SocketTextChannel Implements IEntity < System.UInt64 > IUpdateable ITextChannel INestedChannel IGuildChannel IDeletable IMentionable ISocketMessageChannel IMessageChannel IChannel IEntity < System.UInt64 > Inherited Members SocketGuildChannel.Guild SocketGuildChannel.Name SocketGuildChannel.Position SocketGuildChannel.Type SocketGuildChannel.RolePermissionOverwrites SocketGuildChannel.UserPermissionOverwrites SocketGuildChannel.UpdateAsync(RequestOptions) SocketGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) SocketGuildChannel.DeleteAsync(RequestOptions) SocketGuildChannel.GetPermissionOverwrite(IUser) SocketGuildChannel.GetPermissionOverwrite(IRole) SocketGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) SocketGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) SocketGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) SocketGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) SocketGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) SocketGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) SocketGuildChannel.ToString() SocketGuildChannel.IGuildChannel.Guild SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketTextChannel : SocketGuildChannel, IEntity<ulong>, IUpdateable, ITextChannel, INestedChannel, IGuildChannel, IDeletable, IMentionable, ISocketMessageChannel, IMessageChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source CachedMessages Declaration public IReadOnlyCollection<SocketMessage> CachedMessages { get; } Property Value Type Description IReadOnlyCollection < SocketMessage > | Improve this Doc View Source Category Gets the parent (category) of this channel in the guild's channel list. Declaration public ICategoryChannel Category { get; } Property Value Type Description ICategoryChannel An ICategoryChannel representing the parent of this channel; null if none is set. | Improve this Doc View Source CategoryId Declaration public ulong? CategoryId { get; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source Creator Gets the creator of this channel. Declaration public SocketGuildUser Creator { get; } Property Value Type Description SocketGuildUser A task that represents the asynchronous get operation. The task result contains the creator of this channel. Remarks This method will try to get the user as a member of this channel. If the user is not a member of this guild, this method will return null . To get the creator under this circumstance, use GetUserAsync(UInt64, RequestOptions) . | Improve this Doc View Source CreatorId Declaration public ulong CreatorId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source IsPermissionSynced Declaration public bool IsPermissionSynced { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KMarkdownMention Declaration public string KMarkdownMention { get; } Property Value Type Description System.String | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source SlowModeInterval Declaration public int SlowModeInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Topic Declaration public string Topic { get; set; } Property Value Type Description System.String | Improve this Doc View Source Users Gets a collection of users that are able to view the channel. Declaration public override IReadOnlyCollection<SocketGuildUser> Users { get; } Property Value Type Description IReadOnlyCollection < SocketGuildUser > A read-only collection of users that can access the channel (i.e. the users seen in the user list). Overrides SocketGuildChannel.Users Methods | Improve this Doc View Source CreateInviteAsync(InviteMaxAge, InviteMaxUses, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(InviteMaxAge maxAge = default(InviteMaxAge), InviteMaxUses maxUses = default(InviteMaxUses), RequestOptions options = null) Parameters Type Name Description InviteMaxAge maxAge InviteMaxUses maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(int? maxAge, int? maxUses = null, RequestOptions options = null) Parameters Type Name Description System.Nullable < System.Int32 > maxAge System.Nullable < System.Int32 > maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source DeleteMessageAsync(Guid, RequestOptions) Declaration public Task DeleteMessageAsync(Guid messageId, RequestOptions options = null) Parameters Type Name Description Guid messageId RequestOptions options Returns Type Description Task | Improve this Doc View Source DeleteMessageAsync(IMessage, RequestOptions) Declaration public Task DeleteMessageAsync(IMessage message, RequestOptions options = null) Parameters Type Name Description IMessage message RequestOptions options Returns Type Description Task | Improve this Doc View Source GetCachedMessage(Guid) Gets a cached message from this channel. Declaration public SocketMessage GetCachedMessage(Guid id) Parameters Type Name Description Guid id The Guid of the message. Returns Type Description SocketMessage A WebSocket-based message object; null if it does not exist in the cache or if caching is not enabled. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return null . Please refer to MessageCacheSize for more details. This method retrieves the message from the local WebSocket cache and does not send any additional request to KaiHeiLa. This message may be a message that has been deleted. | Improve this Doc View Source GetCachedMessages(Guid, Direction, Int32) Gets the last N cached messages starting from a certain message in this message channel. Declaration public IReadOnlyCollection<SocketMessage> GetCachedMessages(Guid fromMessageId, Direction dir, int limit = null) Parameters Type Name Description Guid fromMessageId The message ID to start the fetching from. Direction dir The direction of which the message should be gotten from. System.Int32 limit The number of messages to get. Returns Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return an empty collection. Please refer to MessageCacheSize for more details. This method retrieves the message(s) from the local WebSocket cache and does not send any additional request to KaiHeiLa. This read-only collection may include messages that have been deleted. The maximum number of messages that can be retrieved from this method depends on the MessageCacheSize set. | Improve this Doc View Source GetCachedMessages(IMessage, Direction, Int32) Gets the last N cached messages starting from a certain message in this message channel. Declaration public IReadOnlyCollection<SocketMessage> GetCachedMessages(IMessage fromMessage, Direction dir, int limit = null) Parameters Type Name Description IMessage fromMessage The message to start the fetching from. Direction dir The direction of which the message should be gotten from. System.Int32 limit The number of messages to get. Returns Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return an empty collection. Please refer to MessageCacheSize for more details. This method retrieves the message(s) from the local WebSocket cache and does not send any additional request to KaiHeiLa. This read-only collection may include messages that have been deleted. The maximum number of messages that can be retrieved from this method depends on the MessageCacheSize set. | Improve this Doc View Source GetCachedMessages(Int32) Gets the last N cached messages from this message channel. Declaration public IReadOnlyCollection<SocketMessage> GetCachedMessages(int limit = null) Parameters Type Name Description System.Int32 limit The number of messages to get. Returns Type Description IReadOnlyCollection < SocketMessage > A read-only collection of WebSocket-based messages. Remarks warning This method requires the use of cache, which is not enabled by default; if caching is not enabled, this method will always return an empty collection. Please refer to MessageCacheSize for more details. This method retrieves the message(s) from the local WebSocket cache and does not send any additional request to KaiHeiLa. This read-only collection may include messages that have been deleted. The maximum number of messages that can be retrieved from this method depends on the MessageCacheSize set. | Improve this Doc View Source GetInvitesAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<IInvite>> GetInvitesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < IInvite >> | Improve this Doc View Source GetMessageAsync(Guid, RequestOptions) Gets a message from this message channel. Declaration public Task<IMessage> GetMessageAsync(Guid id, RequestOptions options = null) Parameters Type Name Description Guid id The identifier of the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < IMessage > A task that represents an asynchronous get operation for retrieving the message. The task result contains the retrieved message; null if no message is found with the specified identifier. Remarks This method follows the same behavior as described in GetMessageAsync(Guid, CacheMode, RequestOptions) . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(Guid, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<IMessage>> GetMessagesAsync(Guid referenceMessageId, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description Guid referenceMessageId The ID of the starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(IMessage, Direction, Int32, RequestOptions) Gets a collection of messages in this channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<IMessage>> GetMessagesAsync(IMessage referenceMessage, Direction dir, int limit = null, RequestOptions options = null) Parameters Type Name Description IMessage referenceMessage The starting message to get the messages from. Direction dir The direction of the messages to be gotten from. System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetMessagesAsync(Int32, RequestOptions) Gets the last N messages from this message channel. Declaration public IAsyncEnumerable<IReadOnlyCollection<IMessage>> GetMessagesAsync(int limit = null, RequestOptions options = null) Parameters Type Name Description System.Int32 limit The numbers of message to be gotten from. RequestOptions options The options to be used when sending the request. Returns Type Description IAsyncEnumerable < IReadOnlyCollection < IMessage >> Paged collection of messages. Remarks This method follows the same behavior as described in . Please visit its documentation for more details on this method. | Improve this Doc View Source GetPinnedMessagesAsync(RequestOptions) Gets a collection of pinned messages in this channel. Declaration public Task<IReadOnlyCollection<RestMessage>> GetPinnedMessagesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < IReadOnlyCollection < RestMessage >> A task that represents the asynchronous get operation for retrieving pinned messages in this channel. The task result contains a collection of messages found in the pinned messages. | Improve this Doc View Source GetUser(UInt64) Declaration public override SocketGuildUser GetUser(ulong id) Parameters Type Name Description System.UInt64 id Returns Type Description SocketGuildUser Overrides SocketGuildChannel.GetUser(UInt64) | Improve this Doc View Source ModifyAsync(Action<ModifyTextChannelProperties>, RequestOptions) Declaration public virtual Task ModifyAsync(Action<ModifyTextChannelProperties> func, RequestOptions options = null) Parameters Type Name Description Action < ModifyTextChannelProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source ModifyMessageAsync(Guid, Action<MessageProperties>, RequestOptions) Declaration public Task ModifyMessageAsync(Guid messageId, Action<MessageProperties> func, RequestOptions options = null) Parameters Type Name Description Guid messageId Action < MessageProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source SendCardMessageAsync(IEnumerable<ICard>, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(IEnumerable<ICard> cards, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description IEnumerable < ICard > cards Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendCardMessageAsync(ICard, Quote, IUser, RequestOptions) Sends a card message to this message channel. Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendCardMessageAsync(ICard card, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description ICard card The card to be sent. Quote quote The message quote to be included. Used to reply to specific messages. IUser ephemeralUser The user only who can see the message. Leave null to let everyone see the message. RequestOptions options The options to be used when sending the request. Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> A task that represents an asynchronous send operation for delivering the message. The task result contains the identifier and timestamp of the sent message. | Improve this Doc View Source SendFileMessageAsync(Stream, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(Stream stream, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendFileMessageAsync(String, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendFileMessageAsync(string path, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendImageMessageAsync(Stream, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(Stream stream, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendImageMessageAsync(String, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendImageMessageAsync(string path, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendKMarkdownMessageAsync(String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendKMarkdownMessageAsync(string text, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String text Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendTextMessageAsync(String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendTextMessageAsync(string text, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String text Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendVideoMessageAsync(Stream, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(Stream stream, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description Stream stream System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> | Improve this Doc View Source SendVideoMessageAsync(String, String, Quote, IUser, RequestOptions) Declaration public Task<(Guid MessageId, DateTimeOffset MessageTimestamp)> SendVideoMessageAsync(string path, string fileName = null, Quote quote = null, IUser ephemeralUser = null, RequestOptions options = null) Parameters Type Name Description System.String path System.String fileName Quote quote IUser ephemeralUser RequestOptions options Returns Type Description Task < System.ValueTuple < Guid , DateTimeOffset >> Implements IEntity<TId> IUpdateable ITextChannel INestedChannel IGuildChannel IDeletable IMentionable ISocketMessageChannel IMessageChannel IChannel IEntity<TId>"
  },
  "api/KaiHeiLa.WebSocket.SocketUnknownUser.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketUnknownUser.html",
    "title": "Class SocketUnknownUser | KaiHeiLa.Net 文档",
    "keywords": "Class SocketUnknownUser Represents a WebSocket-based user that is yet to be recognized by the client. Inheritance System.Object SocketEntity < System.UInt64 > SocketUser SocketUnknownUser Implements IEntity < System.UInt64 > IUser IEntity < System.UInt64 > IMentionable IPresence Inherited Members SocketUser.IdentifyNumber SocketUser.KMarkdownMention SocketUser.PlainTextMention SocketUser.IsOnline SocketUser.ActiveClient SocketUser.CreateDMChannelAsync(RequestOptions) SocketUser.GetIntimacyAsync(RequestOptions) SocketUser.UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) SocketUser.ToString() SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketUnknownUser : SocketUser, IEntity<ulong>, IUser, IEntity<ulong>, IMentionable, IPresence Remarks A user may not be recognized due to the user missing from the cache or failed to be recognized properly. Properties | Improve this Doc View Source Avatar Declaration public override string Avatar { get; } Property Value Type Description System.String Overrides SocketUser.Avatar | Improve this Doc View Source IdentifyNumberValue Declaration public override ushort? IdentifyNumberValue { get; } Property Value Type Description System.Nullable < System.UInt16 > Overrides SocketUser.IdentifyNumberValue | Improve this Doc View Source IsBanned Declaration public override bool? IsBanned { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsBanned | Improve this Doc View Source IsBot Declaration public override bool? IsBot { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsBot | Improve this Doc View Source IsDenoiseEnabled Declaration public override bool? IsDenoiseEnabled { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsDenoiseEnabled | Improve this Doc View Source IsVIP Declaration public override bool? IsVIP { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketUser.IsVIP | Improve this Doc View Source Username Declaration public override string Username { get; } Property Value Type Description System.String Overrides SocketUser.Username | Improve this Doc View Source UserTag Get the tag this user has. Declaration public override UserTag UserTag { get; } Property Value Type Description UserTag Overrides SocketUser.UserTag | Improve this Doc View Source VIPAvatar Declaration public override string VIPAvatar { get; } Property Value Type Description System.String Overrides SocketUser.VIPAvatar Implements IEntity<TId> IUser IEntity<TId> IMentionable IPresence"
  },
  "api/KaiHeiLa.WebSocket.SocketUser.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketUser.html",
    "title": "Class SocketUser | KaiHeiLa.Net 文档",
    "keywords": "Class SocketUser Represents a WebSocket-based user. Inheritance System.Object SocketEntity < System.UInt64 > SocketUser SocketGuildUser SocketSelfUser SocketUnknownUser Implements IEntity < System.UInt64 > IUser IEntity < System.UInt64 > IMentionable IPresence Inherited Members SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public abstract class SocketUser : SocketEntity<ulong>, IEntity<ulong>, IUser, IEntity<ulong>, IMentionable, IPresence Constructors | Improve this Doc View Source SocketUser(KaiHeiLaSocketClient, UInt64) Declaration protected SocketUser(KaiHeiLaSocketClient kaiHeiLa, ulong id) Parameters Type Name Description KaiHeiLaSocketClient kaiHeiLa System.UInt64 id Properties | Improve this Doc View Source ActiveClient Declaration public ClientType? ActiveClient { get; } Property Value Type Description System.Nullable < ClientType > | Improve this Doc View Source Avatar Declaration public abstract string Avatar { get; } Property Value Type Description System.String | Improve this Doc View Source IdentifyNumber Declaration public string IdentifyNumber { get; } Property Value Type Description System.String | Improve this Doc View Source IdentifyNumberValue Declaration public abstract ushort? IdentifyNumberValue { get; } Property Value Type Description System.Nullable < System.UInt16 > | Improve this Doc View Source IsBanned Declaration public abstract bool? IsBanned { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsBot Declaration public abstract bool? IsBot { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsDenoiseEnabled Declaration public abstract bool? IsDenoiseEnabled { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsOnline Declaration public bool? IsOnline { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsVIP Declaration public abstract bool? IsVIP { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source KMarkdownMention Declaration public string KMarkdownMention { get; } Property Value Type Description System.String | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source Username Declaration public abstract string Username { get; } Property Value Type Description System.String | Improve this Doc View Source UserTag Get the tag this user has. Declaration public abstract UserTag UserTag { get; } Property Value Type Description UserTag | Improve this Doc View Source VIPAvatar Declaration public abstract string VIPAvatar { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CreateDMChannelAsync(RequestOptions) Creates the direct message channel of this user. Declaration public Task<SocketDMChannel> CreateDMChannelAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < SocketDMChannel > A task that represents the asynchronous operation for getting or creating a DM channel. The task result contains the DM channel associated with this user. Remarks This method is used to obtain or create a channel used to send a direct message. warning In event that the current user cannot send a message to the target user, a channel can and will still be created by KaiHeiLa. However, attempting to send a message will yield a HttpException with a 403 as its HttpCode . There are currently no official workarounds by KaiHeiLa. | Improve this Doc View Source GetIntimacyAsync(RequestOptions) Gets the intimacy information with this user. Declaration public Task<RestIntimacy> GetIntimacyAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options The options to be used when sending the request. Returns Type Description Task < RestIntimacy > A task that represents the asynchronous operation for getting the intimacy information. The task result contains the intimacy information associated with this user. | Improve this Doc View Source ToString() Gets the full name of the user (e.g. Example#0001). Declaration public override string ToString() Returns Type Description System.String The full name of the user. | Improve this Doc View Source UpdateIntimacyAsync(Action<IntimacyProperties>, RequestOptions) Declaration public Task UpdateIntimacyAsync(Action<IntimacyProperties> func, RequestOptions options = null) Parameters Type Name Description Action < IntimacyProperties > func RequestOptions options Returns Type Description Task Implements IEntity<TId> IUser IEntity<TId> IMentionable IPresence"
  },
  "api/KaiHeiLa.WebSocket.SocketUserMessage.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketUserMessage.html",
    "title": "Class SocketUserMessage | KaiHeiLa.Net 文档",
    "keywords": "Class SocketUserMessage Represents a WebSocket-based message sent by a user. Inheritance System.Object SocketEntity < Guid > SocketMessage SocketUserMessage Implements IEntity < Guid > IUpdateable IUserMessage IMessage IEntity < Guid > IDeletable Inherited Members SocketMessage.Author SocketMessage.Channel SocketMessage.Source SocketMessage.Content SocketMessage.RawContent SocketMessage.CleanContent SocketMessage.Timestamp SocketMessage.EditedTimestamp SocketMessage.Type SocketMessage.MentionedUsers SocketMessage.Reactions SocketMessage.DeleteAsync(RequestOptions) SocketMessage.UpdateAsync(RequestOptions) SocketMessage.AddReactionAsync(IEmote, RequestOptions) SocketMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions) SocketMessage.RemoveReactionAsync(IEmote, UInt64, RequestOptions) SocketMessage.GetReactionUsersAsync(IEmote, RequestOptions) SocketMessage.ToString() SocketMessage.IMessage.Author SocketMessage.IMessage.Channel SocketMessage.IMessage.Attachment SocketEntity<Guid>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketUserMessage : SocketMessage, IEntity<Guid>, IUpdateable, IUserMessage, IMessage, IEntity<Guid>, IDeletable Properties | Improve this Doc View Source Attachment Gets the attachment included in this message. Declaration public override Attachment Attachment { get; } Property Value Type Description Attachment Overrides SocketMessage.Attachment | Improve this Doc View Source Cards Returns all cards included in this message. Declaration public override IReadOnlyCollection<ICard> Cards { get; } Property Value Type Description IReadOnlyCollection < ICard > Collection of card objects. Overrides SocketMessage.Cards | Improve this Doc View Source Embeds Returns all embeds included in this message. Declaration public override IReadOnlyCollection<IEmbed> Embeds { get; } Property Value Type Description IReadOnlyCollection < IEmbed > Collection of embed objects. Overrides SocketMessage.Embeds | Improve this Doc View Source Guild Gets the SocketGuild that the message was sent from. Declaration public SocketGuild Guild { get; } Property Value Type Description SocketGuild The SocketGuild that the message was sent from. | Improve this Doc View Source IsPinned Gets the value that indicates whether this message is pinned. Declaration public bool? IsPinned { get; } Property Value Type Description System.Nullable < System.Boolean > true if this message was added to its channel's pinned messages; otherwise false . | Improve this Doc View Source MentionedEveryone Declaration public override bool? MentionedEveryone { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketMessage.MentionedEveryone | Improve this Doc View Source MentionedHere Declaration public override bool? MentionedHere { get; } Property Value Type Description System.Nullable < System.Boolean > Overrides SocketMessage.MentionedHere | Improve this Doc View Source MentionedRoles Returns the roles mentioned in this message. Declaration public override IReadOnlyCollection<SocketRole> MentionedRoles { get; } Property Value Type Description IReadOnlyCollection < SocketRole > Collection of WebSocket-based roles. Overrides SocketMessage.MentionedRoles | Improve this Doc View Source Quote Gets the message quote. Declaration public Quote Quote { get; } Property Value Type Description Quote The message quote. | Improve this Doc View Source Tags Declaration public override IReadOnlyCollection<ITag> Tags { get; } Property Value Type Description IReadOnlyCollection < ITag > Overrides SocketMessage.Tags Methods | Improve this Doc View Source ModifyAsync(Action<MessageProperties>, RequestOptions) Declaration public Task ModifyAsync(Action<MessageProperties> func, RequestOptions options = null) Parameters Type Name Description Action < MessageProperties > func RequestOptions options Returns Type Description Task | Improve this Doc View Source Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling) Declaration public string Resolve(TagHandling userHandling = default(TagHandling), TagHandling channelHandling = default(TagHandling), TagHandling roleHandling = default(TagHandling), TagHandling everyoneHandling = default(TagHandling), TagHandling emojiHandling = default(TagHandling)) Parameters Type Name Description TagHandling userHandling TagHandling channelHandling TagHandling roleHandling TagHandling everyoneHandling TagHandling emojiHandling Returns Type Description System.String | Improve this Doc View Source Resolve(Int32, TagHandling, TagHandling, TagHandling, TagHandling, TagHandling) Transforms this message's text into a human-readable form by resolving its tags. Declaration public string Resolve(int startIndex, TagHandling userHandling = default(TagHandling), TagHandling channelHandling = default(TagHandling), TagHandling roleHandling = default(TagHandling), TagHandling everyoneHandling = default(TagHandling), TagHandling emojiHandling = default(TagHandling)) Parameters Type Name Description System.Int32 startIndex The zero-based index at which to begin the resolving for the specified value. TagHandling userHandling TagHandling channelHandling TagHandling roleHandling TagHandling everyoneHandling TagHandling emojiHandling Returns Type Description System.String Explicit Interface Implementations | Improve this Doc View Source IUserMessage.Quote Gets the message quote. Declaration IQuote IUserMessage.Quote { get; } Returns Type Description IQuote The message quote. Implements IEntity<TId> IUpdateable IUserMessage IMessage IEntity<TId> IDeletable"
  },
  "api/KaiHeiLa.WebSocket.SocketVoiceChannel.html": {
    "href": "api/KaiHeiLa.WebSocket.SocketVoiceChannel.html",
    "title": "Class SocketVoiceChannel | KaiHeiLa.Net 文档",
    "keywords": "Class SocketVoiceChannel Represents a WebSocket-based voice channel in a guild. Inheritance System.Object SocketEntity < System.UInt64 > SocketChannel SocketGuildChannel SocketVoiceChannel Implements IEntity < System.UInt64 > IUpdateable IVoiceChannel INestedChannel IGuildChannel IDeletable IMentionable ISocketAudioChannel IAudioChannel IChannel IEntity < System.UInt64 > Inherited Members SocketGuildChannel.Guild SocketGuildChannel.Name SocketGuildChannel.Position SocketGuildChannel.Type SocketGuildChannel.RolePermissionOverwrites SocketGuildChannel.UserPermissionOverwrites SocketGuildChannel.Users SocketGuildChannel.UpdateAsync(RequestOptions) SocketGuildChannel.ModifyAsync(Action<ModifyGuildChannelProperties>, RequestOptions) SocketGuildChannel.DeleteAsync(RequestOptions) SocketGuildChannel.GetPermissionOverwrite(IUser) SocketGuildChannel.GetPermissionOverwrite(IRole) SocketGuildChannel.AddPermissionOverwriteAsync(IGuildUser, RequestOptions) SocketGuildChannel.AddPermissionOverwriteAsync(IRole, RequestOptions) SocketGuildChannel.RemovePermissionOverwriteAsync(IGuildUser, RequestOptions) SocketGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions) SocketGuildChannel.ModifyPermissionOverwriteAsync(IGuildUser, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) SocketGuildChannel.ModifyPermissionOverwriteAsync(IRole, Func<OverwritePermissions, OverwritePermissions>, RequestOptions) SocketGuildChannel.GetUser(UInt64) SocketGuildChannel.ToString() SocketGuildChannel.IGuildChannel.Guild SocketEntity<UInt64>.Id Namespace : KaiHeiLa.WebSocket Assembly : KaiHeiLa.Net.WebSocket.dll Syntax public class SocketVoiceChannel : SocketGuildChannel, IEntity<ulong>, IUpdateable, IVoiceChannel, INestedChannel, IGuildChannel, IDeletable, IMentionable, ISocketAudioChannel, IAudioChannel, IChannel, IEntity<ulong> Properties | Improve this Doc View Source Category Gets the parent (category) of this channel in the guild's channel list. Declaration public ICategoryChannel Category { get; } Property Value Type Description ICategoryChannel An ICategoryChannel representing the parent of this channel; null if none is set. | Improve this Doc View Source CategoryId Declaration public ulong? CategoryId { get; set; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source Creator Gets the creator of this channel. Declaration public SocketGuildUser Creator { get; } Property Value Type Description SocketGuildUser A task that represents the asynchronous get operation. The task result contains the creator of this channel. Remarks This method will try to get the user as a member of this channel. If the user is not a member of this guild, this method will return null . To get the creator under this circumstance, use GetUserAsync(UInt64, RequestOptions) . | Improve this Doc View Source CreatorId Declaration public ulong CreatorId { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source HasPassword Declaration public bool HasPassword { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPermissionSynced Declaration public bool IsPermissionSynced { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KMarkdownMention Declaration public string KMarkdownMention { get; } Property Value Type Description System.String | Improve this Doc View Source PlainTextMention Declaration public string PlainTextMention { get; } Property Value Type Description System.String | Improve this Doc View Source ServerUrl Declaration public string ServerUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserLimit Declaration public int? UserLimit { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source VoiceQuality Declaration public VoiceQuality? VoiceQuality { get; set; } Property Value Type Description System.Nullable < VoiceQuality > Methods | Improve this Doc View Source CreateInviteAsync(InviteMaxAge, InviteMaxUses, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(InviteMaxAge maxAge = default(InviteMaxAge), InviteMaxUses maxUses = default(InviteMaxUses), RequestOptions options = null) Parameters Type Name Description InviteMaxAge maxAge InviteMaxUses maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, RequestOptions) Declaration public Task<IInvite> CreateInviteAsync(int? maxAge, int? maxUses = null, RequestOptions options = null) Parameters Type Name Description System.Nullable < System.Int32 > maxAge System.Nullable < System.Int32 > maxUses RequestOptions options Returns Type Description Task < IInvite > | Improve this Doc View Source GetInvitesAsync(RequestOptions) Declaration public Task<IReadOnlyCollection<IInvite>> GetInvitesAsync(RequestOptions options = null) Parameters Type Name Description RequestOptions options Returns Type Description Task < IReadOnlyCollection < IInvite >> | Improve this Doc View Source ModifyAsync(Action<ModifyVoiceChannelProperties>, RequestOptions) Declaration public Task ModifyAsync(Action<ModifyVoiceChannelProperties> func, RequestOptions options = null) Parameters Type Name Description Action < ModifyVoiceChannelProperties > func RequestOptions options Returns Type Description Task Implements IEntity<TId> IUpdateable IVoiceChannel INestedChannel IGuildChannel IDeletable IMentionable ISocketAudioChannel IAudioChannel IChannel IEntity<TId>"
  },
  "guides/concepts/connections.html": {
    "href": "guides/concepts/connections.html",
    "title": "管理连接 | KaiHeiLa.Net 文档",
    "keywords": "管理 KaiHeiLa.Net 中的连接 在 KaiHeiLa.Net 中，一旦客户端启动，除非客户端被手动关闭， 否则其与开黑啦网关之间将会尝试一直保持连接。 用法 要启动连接，请在客户端上调用 StartAsync 方法，这会启动一个 WebSocket 连接。 要终止连接，请在客户端上调用 StopAsync 方法，这会关闭任何已经打开的 WebSocket 连接。 由于启动/终止方法仅向底层连接管理器发送信号，指示其启动/终止连接， 启动/终止连接的操作是异步执行的，因此 这些方法会在启动/终止操作真正被执行前返回 。 因此，您需要订阅基于连接状态的事件，来准确地了解客户端何时启动/终止了连接。 所有的客户端都提供了 Connected 和 Disconnected 事件， 分别在连接启动或关闭时触发。需要注意的是，在 KaiHeiLaSocketClient 中， Connected 并不代表客户端完成了初始化以供业务逻辑进行调用。 KaiHeiLaSocketClient 上提供了一个单独的事件 Ready ， 仅当客户端下载完成所有必要的数据（如：服务器频道信息等），且拥有了完整了数据缓存， 该事件才会被触发。 重连 Tip 避免在网关现成上运行耗时代码！如果网关发生了如事件章节中所描述的死锁， 连接管理器将无法恢复并重新连接。 假设客户端由于网络波动、开黑啦服务端的重连请求或错误导致客户端断开连接， 而不是业务逻辑代码造成的死锁，客户端将会一直尝试重连并继续之前的会话。 不必担心如何维护连接，连接管理器的设计保证了重连机制的正常运行。 如果您的客户端没能成功地重连，或许这是一个 Bug，快来 开黑啦 KaiHeiLa.Net 社区 找我反馈吧！"
  },
  "guides/concepts/events.html": {
    "href": "guides/concepts/events.html",
    "title": "事件 | KaiHeiLa.Net 文档",
    "keywords": "KaiHeiLa.Net 中的事件 KaiHeiLa.Net 中的事件采用与标准 .NET 事件模式类似的方式实现， 不同的是，KaiHeiLa.Net 中的事件类型都为 Task ， 事件参数传递不使用 EventArgs ，而是直接传递到事件处理程序中。 这使得事件处理程序可以直接在异步上下文中执行，事件返回类型为 Task ，而不是 async void 。 用法 要从事件中接收数据，只需通过 C# 委托的事件模式进行订阅。 订阅事件支持命名函数，也支持匿名函数（Lambda 表达式）。 线程安全性 所有的事件都被设计为线程安全的，所有的事件都拥有与网关线程相同的上下文， 在网关线程之外的任务上同步运行， 但这样做也会存在副作用，这可能会导致网关现成死锁并终止连接。 经验之谈，任何耗时超过 3 秒的任务都 不应该 直接在事件上下文中等待， 而是应该包装在 Task.Run 中执行，或是卸载到另外一个任务中。 这意味着您不应该在与事件相同的上下文中通过开黑啦网关请求数据， 由于网关线程将等待所有被调用的事件处理程序完成，然后才会处理所有来自网关的任何其它数据， 这将导致一个无法恢复的死锁。 常见模式 KaiHeiLa.Net 中的事件签名都是形如 Func<T1, ..., Task> 的模式，没有额外定义名称， 因此，有关方法签名的详细信息，请参考 IntelliSense 智能提示，或直接浏览 API 文档。 不过，KaiHeiLa.Net 中的事件签名大多遵循类似的模式，还是可以让您从中推断参数定义。 实体变更 具有 Func<Entity, Entity, Task> 签名的事件处理程序通常表示一个实体中的信息发生了变更， 两个实体中，前者为发生变更前实体的副本，后者为变更执行完成后的实体。 此模式通常仅在 EntityUpdated 事件中出现。 缓存实体 具有 Func<Cacheable, Entity, Task> 签名的事件处理程序则通常表示 API 或网关并未提供实体发生变更前的状态，因此它可以从客户端的缓存中提取或从 API 中下载。 有关此对象的更多信息，请参阅 Cacheable 文档。 Note 许多与消息相关的实体（例如： MessageUpdated 和 ReactionAdded ）依赖于客户端的消息缓存， 该特性默认 不启用 ，因此，如果您需要使用它，请在 KaiHeiLaSocketConfig 中通过设置 MessageCacheSize 的值来启用该消息缓存。 示例 using KaiHeiLa; using KaiHeiLa.WebSocket; public class Program { private KaiHeiLaSocketClient _client; public static Task Main(string[] args) => new Program().MainAsync(); public async Task MainAsync() { // 如需使用事件中的 Cacheable<IMessage, Guid> 实体， // 您可能需要在客户端配置中启用消息缓存。 var _config = new KaiHeiLaSocketConfig { MessageCacheSize = 100 }; _client = new KaiHeiLaSocketClient(_config); await _client.LoginAsync(TokenType.Bot, Environment.GetEnvironmentVariable(\"KaiHeiLaToken\")); await _client.StartAsync(); _client.MessageUpdated += MessageUpdated; _client.Ready += () => { Console.WriteLine(\"Bot is connected!\"); return Task.CompletedTask; } await Task.Delay(Timeout.Infinite); } private async Task MessageUpdated(Cacheable<IMessage, Guid> before, SocketMessage after, ISocketMessageChannel channel) { // 如果没有启用消息缓存，消息下载方法可能会获得与 `after` 完全相同的实体 var message = await before.GetOrDownloadAsync(); Console.WriteLine($\"{message} -> {after}\"); } }"
  },
  "guides/concepts/logging.html": {
    "href": "guides/concepts/logging.html",
    "title": "日志 | KaiHeiLa.Net 文档",
    "keywords": "在 KaiHeiLa.Net 中记录日志 KaiHeiLa.Net 中提供了一个日志事件，所有的日志消息都会通过此事件传递。 有关 KaiHeiLa.Net 中的事件，请参阅 事件 章节。 Warning KaiHeiLa.Net 中所有的日志实现处理程序都将在网关线程上同步执行， 如果您要将日志消息输出到 Web API 中（例如：Sentry、Stackdriver、开黑啦频道等）， 建议将输出程序包装在 Task.Run 中，以避免网关线程在等待数据日志输出时阻塞。 在客户端中记录日志 要处理日志，只需将日志处理程序订阅至 Log 事件， 日志处理程序需接收一个 LogMessage 对象，返回 Task 对象。 在命令中记录日志 KaiHeiLa.Net 的 CommandService 也提供了 Log 事件，其签名与其它日志事件相同。 通过日志事件记录的数据往往与 CommandException 相结合使用，其中包含了命令上下文与异常信息。 示例 using KaiHeiLa; using KaiHeiLa.WebSocket; public class LoggingService { public LoggingService(KaiHeiLaSocketClient client, CommandService command) { client.Log += LogAsync; command.Log += LogAsync; } private Task LogAsync(LogMessage message) { if (message.Exception is CommandException cmdException) { Console.WriteLine($\"[Command/{message.Severity}] {cmdException.Command.Aliases.First()}\" + $\" failed to execute in {cmdException.Context.Channel}.\"); Console.WriteLine(cmdException); } else Console.WriteLine($\"[General/{message.Severity}] {message}\"); return Task.CompletedTask; } }"
  },
  "guides/entities/casting.html": {
    "href": "guides/entities/casting.html",
    "title": "类型转换 | KaiHeiLa.Net 文档",
    "keywords": "类型转换 通过类型转换，实体可以转换为其它定义下的实体，但这种转换仅能在有继承关系的变体间进行。 例如： IUser 可以转换为 IGuildUser ，但不能转换为 IMessage 。 Note 如果两个接口之间存在继承关系，它们便可以进行互相的转换。 将实体类转换为其所实现的接口也可以合法的。 向上类型转换 通过向上类型转换，实体可以被转换为更通用的变体，例如：将 IGuildUser 转换为 IUser 。 尽管向上类型转换的结果往往具有更简化的信息，但由于多态性，基类类型的变量可以保存派生类型。 向上类型转换一般是隐式进行的。 通过向下类型转换，实体可以转换为包含更详细信息的变体，例如：将 IUser 转换为 IGuildUser ， 这样便可以访问原始无法直接访问的信息。 向下类型转换 向下类型转换是访问实体的实际定义最直接的方式，如果要访问派生类型的实例成员， 可以直接进行向下类型转换。向下类型转换一般是显式进行的。 IUser user; // 这里使用了内联的向下类型转换来一次性获取字段数据 // 需要注意的是，如果类型转换的结果实体为 null，则会抛出 NullReferenceException 异常 Console.WriteLine(((IGuildUser)user).Nickname); // 如果可以保证转换是合法且结果非空的，则可以为类型转换结果赋值到另一个变量中 IGuildUser guildUser = (IGuildUser)user; Warning 作为一种强制类型转换操作，如果两种类型之间不兼容，向下类型转换可能会在执行时抛出 InvalidCastException 异常，在这种情况下，通过模式匹配来进行类型转换可以有效地避免这种异常。 更一般的类型转换 更一般情况下的类型转换往往使用 as 运算符来向将对象转换为给定的类型。 如果实体确实能被转换为给定的类型，运算结果会返回转换后的类型，来让属性可以为访问。 IChannel channel; // 如果要将通用频道接口 IChannel 转换为服务器文字频道接口 ITextChannel // 来访问 ITextChannel 中存在而 IChannel 中不存在的属性和方法 // 则可进行如下的转换 ITextChannel textChannel = channel as ITextChannel; await textChannel.DoSomethingICantWithIChannelAsync(); Warning 如果类型转换的结果可能为 null，在访问其属性或方法时则会抛出 NullReferenceException 异常， 在这种情况下，通过模式匹配进行安全类型转换则更为实用，这可以阻止此异常的抛出。 安全类型转换 安全类型转换在转换前会进行模式匹配检查，因此可以保证转换结果类型永不为 null。 C# 提供了三种语法来进行安全类型转换： 类型检查 要进行安全类型转换，需要使用 is 运算符来检查值是否属于给定地类型。 如果检查不通过，条件判断语句可以绕过代码，来保证程序不会访问 null 对象的属性。 IUser user; // 这里检查了该用户实体是否为一个 IGuildUser 实体 // 如果检查不通过，条件判断语句可以绕过可能会导致 null 对象访问的代码 if (user is IGuildUser) { Console.WriteLine(\"This user is in a guild!\"); } else { // 检查不通过 } 结合声明的初始化赋值 这里，类型检查、类型声明、初始化赋值组合在一起，可以简化代码， 这样，在类型检查通过后，对象将会被立即转换并赋值到一个新的变量中。 IUser user; // 假设这里的 user 变量内事实上存储的是一个 IGuildUser 对象 // 那么在类型检查通过后，此处的代码可以直接将 user 转换为 IGuildUser // 并赋值到 guildUser 变量中 // 这样就不用再在后面的代码中再次进行类型转换了 if (user is IGuildUser guildUser) { Console.WriteLine(guildUser.JoinedAt); } else { // 检查不通过 } 结合逻辑模式 在之前的示例中，我们通过类型检查来避免程序在进行不正确的类型转换后抛出异常， 在此实例中，代码会在类型转换检查不通过时忽略后续代码来结束整个方法返回结果， 如类型转换成功，其所一并声明的变量也可以在后续的代码中被使用。 private void MyFunction(IMessage message) { // 这里的类型检查与逻辑模式中的 not 相结合 // 当 message 不为 IUserMessage 时，方法会直接返回 if (message is not IUserMessage userMessage) return; // 由于以上代码进行的类型检查是内联的 // 类型转换结果 userMessage 变量在判断语句外也可以访问 Console.WriteLine(userMessage.Author); } Note 在类型转换或类型检查时需使用 is 、 as 和 not 关键字。 == 、 != 和 = 适用于变量或实例化对象之间，而非它们与类型之间， 如要获取变量或实例化对象的类型，请使用 Object.GetType 方法或 typeof 运算符。"
  },
  "guides/entities/glossary.html": {
    "href": "guides/entities/glossary.html",
    "title": "实体词汇表与图表 | KaiHeiLa.Net 文档",
    "keywords": "实体类型 所有 KaiHeiLa.Net 实体的列表及其之间的继承关系，来表示哪些类型之间可以进行相互转换。 Note Socket 和 Rest 实体的所有接口都具有相同的继承树，其中，图中被标记为红色的实体是其所在工程所独有的。 频道 IChannel 消息频道 服务器文字频道 ( ITextChannel )：服务器内的消息频道 私聊频道 ( IDMChannel )：私信聊天会话频道 KaiHeiLa.Net 中的私信聊天会话也被抽象为一个频道 私有频道 ( IPrivateChannel )：非服务器内的消息频道 由于开黑啦暂不支持讨论组，所以目前私有频道也只有私聊频道 消息频道 ( IMessageChannel )：可以发送文字消息的频道 其它频道 服务器频道 ( IGuildChannel )：服务器内的频道 这可以是能出现在服务器内的任何一种频道类型 音频频道 ( IAudioChannel )：音频频道 语音频道 ( IVoiceChannel )：服务器内的语音频道 分组频道 ( ICategoryChannel )：服务器内的分组频道，可以包含多个子频道 嵌套频道 ( INestedChannel )：可以出现在分组频道下的频道 消息 IMessage 用户消息 ( IUserMessage )：用户所发送的消息 系统消息 ( ISystemMessage )：开黑啦系统用户发送的消息 消息 ( IMessage )：所有消息的基本类型接口 用户 IUser 用户状态 ( IPresence )：用户的状态信息 服务器用户 ( IGuildUser )：服务器内的用户 Bot 登录用户 ( ISelfUser )：当前客户端登录到开黑啦的机器人用户 用户 ( IUser )：所有用户的基本类型接口 其它类型 表情符号 IEmote Emote ( Emote )：服务器内创建的自定义表情 Example: (emj)kaiheila-logo(emj)[1990044438283387/8BZCdG49cL069069] Emoji ( Emoji )：Unicode 表示的 Emoji 表情符号 Example: 👍 用户动态 IActivity 游戏 ( IGame )：代表用户的游戏活动"
  },
  "guides/entities/introduction.html": {
    "href": "guides/entities/introduction.html",
    "title": "实体简介 | KaiHeiLa.Net 文档",
    "keywords": "KaiHeiLa.Net 中的实体 KaiHeiLa.Net 提供了一系列多用途的实体类，来表示来自开黑啦 API 或网关的数据。 Tip 在使用 Get*** 系列方法来获取包含详细信息的实例实体时，需要为方法指定正确的 ID， 因此，建议您启用开黑啦的开发者模式，以便于获取实体的 ID，开发者模式可在 “用户设置 - 高级设置 - 开发者模式” 处启用。 实体的变体与继承 由于同一对象可能会在开黑啦 API 或网关不同的接口或事件中出现， 在不同的数据上下文中包含不同的字段，因此，KaiHeiLa.Net 中的部分实体拥有多种变体， 例如： IUser 和 IGuildUser 分别表示通用的用户实体和服务器内的用户实体。 尽管部分实体包含的信息很简略，但所有的实体模型都有一个包含尽可能详细的信息的实体变体与之对应。 Socket 与 REST REST 实体通过 HTTP API 获取，其在被使用后会被销毁释放。每一个 REST 实体的获取都会引起一次 API 请求，短时间内发起大量 API 请求可能会触发速率限制， 因此，请尽可能少地通过 REST 获取实体。 有关 REST 的更多信息 Socket 实体中的大多数都是通过 KaiHeiLaSocketClient 的网关连接中的各种事件创建的， 仅当客户端初始化或事件包含的数据过于简略时，客户端才会进一步通过 API 获取的 REST 实体补全信息。 这些 Socket 实体都会进入到客户端的全局缓存中，以在业务逻辑中使用。 以 MessageReceived 事件为例，事件所传递的数据为 SocketMessage 实体， 实体内指示消息所来源的频道的属性为 SocketMessageChannel 实体。 所有的消息都来源于支持发送消息的频道类型， 因此，频道的这种实体变体可以覆盖全部需要发送消息的频道的情况。 但这并不是说消息不能来源于 SocketTextChannel （ SocketTextChannel 表示服务器内的文本频道）， 如果要从一个消息实体获取消息所在服务器的信息，则需要将其频道实体类型转换为 SocketTextChannel 。 Note 有关各种实体的继承关系及其定义，请参阅 实体词汇表 。 导航属性 多数 Socket 实体都有一个内部的导航属性，以便于实体向其父类或派生类的转换与访问。 访问 Socket 实体 实体最基本的形式形如 SocketGuild 、 SocketUser 、 SocketChannel 等， 这些实体可以从 KaiHeiLaSocketClient 的全局缓存中获取， 也可以在 KaiHeiLaSocketClient 上通过相应的 Get*** 方法获取。 在这些实体上进一步调用 Get*** 方法可以获得包含更多信息的实体变体，例如： SocketGuild.GetUser 可以获得 SocketGuildUser 实体， SocketGuild.GetChannel 可以获得 SocketGuildChannel 实体。 按业务逻辑的需要，将这些实体进行进一步的类型转换便可获得实体的其它变体。 示例 public string GetChannelTopic(ulong id) { var channel = _client.GetChannel(8708013346475345) as SocketTextChannel; return channel?.Topic; } public SocketGuildUser GetGuildOwner(SocketChannel channel) { var guild = (channel as SocketGuildChannel)?.Guild; return guild?.Owner; } 访问 REST 实体 REST 实体的工作方式几乎与 Socket 实体相同，只是在每一次获取时都会发起一次 API 请求，因此较少使用。 访问 REST 实体需要通过 KaiHeiLaRestClient 的 Rest 属性进行， 或是创建一个新的 KaiHeiLaRestClient 实例，可以独立于网关线程。 示例 // 在 GetUserAsync 的结果中，RestUser 实体包含了用户登录开黑啦的连接方式， // 而在 RestGuild 上的 GetUsersAsync 结果中的 RestUser 不包含此信息。 // Socket 建立连接后，如果配置指示客户端始终下载全部用户信息， // 客户端则会通过 RestGuild.GetUsersAsync 所实际调用的 API 获取服务器用户信息， // 尽管如此，全局缓存中也不会包含可靠的用户连接方式的信息。 // 在这种少数情况下，则需要通过访问 GetUserAsync 返回的 RestUser 才能获取所需要的连接方式信息。 public static async Task<ClientType?> GetUserClientType(IUser user, KaiHeiLaRestClient restClient) { var restUser = await restClient.GetUserAsync(user.Id); return restUser.ActiveClient; }"
  },
  "guides/getting_started/first-bot.html": {
    "href": "guides/getting_started/first-bot.html",
    "title": "从零开始 | KaiHeiLa.Net 文档",
    "keywords": "使用 KaiHeiLa.Net 构建你的第一个 Bot 本指南将引导您使用 KaiHeiLa.Net 构建一个简单的 Bot。在此之前，请先确保您已参与开黑啦开发者，并获得开发权限。 创建一个开黑啦应用 在开始编写代码前，您需要通过开黑啦开发者中心创建一个 Bot。 访问并登录到 开黑啦开发者中心 ； 点击 新建应用 ； 填写应用名称； 点击刚刚创建好的应用； 点击左侧的 机器人 ； 确保机器人的连接模式为 WebSocket ； (可选) 如果要创建公共 Bot，开启 开启公共机器人 开关。 将 Bot 添加到服务器 Bot 无法通过访问服务器的邀请链接进入频道，因此需要 Bot 的邀请链接将 Bot 添加到服务器。 在 开黑啦开发者中心 中访问要添加到服务器的 Bot 应用； 点击左侧的 邀请链接 ； 在右侧的 角色权限设置 中勾选要在 Bot 进入服务器后直接拥有的权限； Note 这将会在服务器内创建一个仅可授予给该 Bot 的托管角色，该 Bot 将会在进入服务器后自动获得该角色。 如需在进入服务器后变更权限，可通过 服务器设置 中的 角色权限 进行修改。 打开上方生成的邀请链接； 选择要将 Bot 添加到的服务器； 点击邀请。 Note 列表中仅显示您拥有 管理服务器 权限的服务器。 将 Bot 连接至开黑啦 如果您已创建工程，并安装了 KaiHeiLa.Net，可参考以下步骤， 否则，请参考 安装 KaiHeiLa.Net 。 异步启动 KaiHeiLa.Net 广泛采用 .NET 的 异步编程模型 ，绝大多数操作都是以异步方式完成， 请尽可能地在异步上下文中等待这些操作。 可以通过这样的方式创建异步的入口点函数，来建立一个在异步上下文中启动的程序： public class Program { public static Task Main(string[] args) => new Program().MainAsync(); public async Task MainAsync() { } } Warning 应用程序中异步上下文抛出的任何异常都会被持续向上层抛出直到首个同步方法， 由于该程序的首个同步方法是程序的入口点函数 Main ， 所有 未经处理的异常都会被抛出到这里，这将导致程序退出。 KaiHeiLa.Net 会阻止事件处理函数中发生的异常，以避免该异常导致程序退出， 但 MainAsync 中的任何其它未经处理的异常仍然会导致程序退出。 创建日志方法 在创建并配置开黑啦 Bot 客户端程序前，我们需要创建一个事件处理程序来订阅 KaiHeiLa.Net 的日志事件。 为了尽可能地广泛支持各种日志提供程序，KaiHeiLa.Net 通过 Log 事件来记录日志信息， 其事件参数为 LogMessage 。有关该事件地详细信息，可参考 API 文档 。 如需要使用自己的日志记录框架，请在此该事件行调用。此处，为了简单起见，我们仅将日志记录到控制台中。 private Task Log(LogMessage msg) { Console.WriteLine(msg.ToString()); return Task.CompletedTask; } 创建开黑啦 Bot 客户端程序 为了编写一个能与开黑啦服务端实时互动的 Bot，请使用 KaiHeiLaSocketClient 作为客户端， 使用 Socket 实体，如您不了解 KaiHeiLa.Net 的多种实现，请参考 术语 。 在异步入口点中创建一个 KaiHeiLaSocketClient 的实例，用于与开黑啦服务端建立连接， 如有需要，也可向构造函数中传递一个 KaiHeiLaSocketConfig 的可选参数， 多数情况下，默认值即可。 在连接前，将刚刚创建的日志事件处理程序订阅到客户端的 Log 事件中。 KaiHeiLa.Net 中的事件与 C# 中的任何其他事件的工作机制类似。 使用 LoginAsync 方法登录到开黑啦服务端，登录过程采用的身份认证信息为机器人的 Token。 通过调用客户端的 StartAsync 方法，客户端启动与服务端的连接/重连机制， 该方法会在连接/重连机制启动后立刻返回 ，因此，任何依赖于客户端状态的方法 都应以事件处理程序的形式执行。 为了阻止程序在运行期间的异步入口点返回，请在 MainAsync 方法退出前等待一个无限时长的延迟， 获取其它可以阻止程序继续运行的方法，例如，等待控制台中输入信息。 Important Token 可允许您获得对 Bot 的所有访问权限，因此， 不要 与任何无关人员共享 Token！ 如您要公开 Bot 的源代码，请将该 Token 存储在外部源中。 在下面的示例中，我们从预定义的变量中获取变量，这是 极其不安全 的， 尤其是在有计划将应用程序以任何形式发布的情况下。 为了能够安全地处理该机密信息，建议以 环境变量 、 配置文件 、 机密管理 等形式存储 Token。 private KaiHeiLaSocketClient _client; public async Task MainAsync() { _client = new KaiHeiLaSocketClient(); _client.Log += Log; // 将 Token 写入字符串变量，用于 Bot 登录过程的身份认证 // 这很不安全，尤其是在有公开源代码的情况下，不应该这么做 var token = \"token\"; // 一些其它存储 Token 的方案，如环境变量、文件等 // var token = Environment.GetEnvironmentVariable(\"NameOfYourEnvironmentVariable\"); // var token = File.ReadAllText(\"token.txt\"); // var token = JsonConvert.DeserializeObject<AConfigurationClass>(File.ReadAllText(\"config.json\")).Token; await _client.LoginAsync(TokenType.Bot, token); await _client.StartAsync(); // 阻止程序退出 await Task.Delay(Timeout.Infinite); } 到这里，客户端应该可以连接到开黑啦服务端，运行程序，等待片刻，应该可以在开黑啦客户端中看到 Bot 上线。 Note 如需查看完整代码示例，可访问 完整代码示例 。"
  },
  "guides/getting_started/installing.html": {
    "href": "guides/getting_started/installing.html",
    "title": "安装 KaiHeiLa.Net | KaiHeiLa.Net 文档",
    "keywords": "安装 KaiHeiLa.Net KaiHeiLa.Net 通过 NuGet 分发，推荐通过 NuGet 包管理工具安装， 如有需要，也可从源代码进行编译。 支持的平台 KaiHeiLa.Net 目前仅支持 .NET 6.0 ，版本稳定后将会扩展到较旧的平台。 通过 NuGet 包管理器安装 支持的 NuGet 源有： NuGet Gallery GitHub Packages 使用 Visual Studio 找到 解决方案资源管理器 窗口，在 Bot 项目下找到 依赖项 右键点击 依赖项 ，选择 管理 NuGet 程序包 在 浏览 选项卡中，搜索 KaiHeiLa.Net Note 在正式版发布前，搜索 KaiHeiLa.Net 需勾选 包括预发行版 ，否则，该搜索结果无法展示在列表中。 选择 KaiHeiLa.Net ，点击 安装 使用 JetBrains Rider 找到 Explorer 窗口，在 Bot 项目下找到 Dependencies 右键点击 Dependencies ，选择 Manage NuGet Packages 在 Packages 选项卡中，搜索 KaiHeiLa.Net Note 在正式版发布前，搜索 KaiHeiLa.Net 需勾选 Prerelease ，否则，该搜索结果无法展示在列表中。 右键点击 KaiHeiLa.Net ，点击 Install KaiHeiLa.Net ... 使用 Visual Studio Code 找到 Bot 项目的 *.csproj 文件 添加 KaiHeiLa.Net 到 *.csproj 中 <Project Sdk=\"Microsoft.NET.Sdk\"> <!-- 目标框架与 KaiHeiLa.Net 版本可能会随着未来的开发而发生变化 --> <PropertyGroup> <OutputType>Exe</OutputType> <TargetFramework>net6.0</TargetFramework> </PropertyGroup> <ItemGroup> <PackageReference Include=\"KaiHeiLa.Net\" Version=\"0.0.18-alpha\" /> </ItemGroup> </Project> 使用 dotnet CLI 启动终端 导航至 Bot 项目中 *.csproj 文件的所在目录 执行 dotnet add package KaiHeiLa.Net Note 在正式版发布前，使用 dotnet CLI 添加 KaiHeiLa.Net 需附加 --prerelease 选项， 否则，dotnet CLI 将只尝试为项目添加稳定版本的 NuGet 包。 从源代码编译 要从源代码编译 KaiHeiLa.Net，请参考： 使用 Visual Studio Visual Studio 2022 或更新版本。 .NET 6 SDK 安装 Visual Studio 期间需选择 .NET 6 工作负载。 使用 JetBrains Rider JetBrains 2021.3 或更新版本。 .NET 6 SDK 使用 Command Line .NET 6 SDK"
  },
  "guides/getting_started/terminology.html": {
    "href": "guides/getting_started/terminology.html",
    "title": "术语 | KaiHeiLa.Net 文档",
    "keywords": "术语 实现指定实体类 KaiHeiLa.Net 分为核心库与两个不同的实现： KaiHeiLa.Net.Core 、 KaiHeiLa.Net.Rest 和 KaiHeiLa.Net.WebSocket 。作为 Bot 的开发者， 您只需要了解如何使用 KaiHeiLa.Net.WebSocket ，但也需要了解它们之间的区别。 KaiHeiLa.Net.Core 提供了一组抽象化开黑啦 API 的接口，这些接口保证了 KaiHeiLa.Net 中的所有实现都保持一致。如果您正在编写与实现无关的库，可仅依赖 核心库来确保您的库能够与 KaiHeiLa.Net 一起在任何类型的实现中都能正常工作。 KaiHeiLa.Net.Rest 提供了一组具体的类，用于实现开黑啦 API 中的 HTTP 接口部分。 该实现中的实体以 Rest 为前缀，例如 RestChannel 。 KaiHeiLa.Net.WebSocket 提供了一组具体的类，用于实现开黑啦 API 中的 WebSocket 接口部分， 并支持实体的缓存。开发 Bot 时，您应使用此实现。该实现中的实体以 Socket 为前缀， 例如 SocketChannel 。"
  },
  "guides/introduction/intro.html": {
    "href": "guides/introduction/intro.html",
    "title": "KaiHeiLa.Net 简介 | KaiHeiLa.Net 文档",
    "keywords": "简介 要准备使用 KaiHeiLa.Net？ 欢迎！在开始使用本类库前，请先确认您应了解如何开发 .NET 应用程序， 并对 C# 语言有一定的了解，包括 异步编程 、 多态 、 接口 等关键内容。 如果想与使用本类库的开发者交流、获取帮助、反馈问题，请访问我们的 开黑啦 KaiHeiLa.Net 社区 。 Note 请注意，本文档中的代码片段仅为示例，请不要盲目地直接复制使用。 还不熟悉 .NET 与 C#？ 本类库的样例、代码片段、文档都是以 .NET 和 C# 开发的，如有需要，可参考以下文档： C# 编程指南 C# 文档 C# 语言参考 .NET API"
  },
  "guides/other_libs/efcore.html": {
    "href": "guides/other_libs/efcore.html",
    "title": "Entity Framework Core | KaiHeiLa.Net 文档",
    "keywords": "对象关系映射框架 Entity Framework Core 本向导可以指引您配置并基于 SQL Server 数据库使用 Entity Framework Core，本文末尾罗列了其它数据库的信息。 先决条件 配置好依赖注入服务的 Bot 客户端程序 SQL Server 数据库实例 EF Core CLI 工具 安装所需类库 可通过集成开发环境的用户界面或 dotnet CLI 安装以下类库： 名称 链接 Microsoft.EntityFrameworkCore 链接 Microsoft.EntityFrameworkCore.SqlServer 链接 配置 DbContext EF Core 中的 DbContext 是一个抽象类，它提供了一系列方法来操作数据库。数据库上下文及其包装的实体示例如下： // ApplicationDbContext.cs using Microsoft.EntityFrameworkCore; public class ApplicationDbContext : DbContext { public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) : base(options) { } public DbSet<UserEntity> Users { get; set; } } // UserEntity.cs public class UserEntity { public ulong Id { get; set; } public string Name { get; set; } } Note 有关创建用于 EF Core 的实体模型，请参阅 EF Core 文档 。 将数据库上下文添加到依赖注入服务容器中 要将此数据库上下文添加到依赖注入服务容器中，只需调用 EF Core 中所提供的扩展方法，示例如下： private static ServiceProvider ConfigureServices() { return new ServiceCollection() .AddDbContext<ApplicationDbContext>( optionsBuilder => optionsBuilder.UseSqlServer(\"数据库连接字符串\") ) // ... .BuildServiceProvider(); } Note 有关如何书写数据库连接字符串，可参考 EF Core 文档 。 迁移 在使用数据库上下文前，需要将代码中的更改迁移到实际的数据库中。有关迁移的更多信息，请参阅 EF Core 文档 。 使用数据库上下文 要使用数据库上下文，请通过依赖注入服务将其注入到要使用的类中，示例如下： using KaiHeiLa.Commands; public class DatabaseModule : ModuleBase<SocketCommandContext> { private readonly ApplicationDbContext _dbContext; public SampleModule(ApplicationDbContext dbContext) { _dbContext = dbContext; } [Command(\"sample\")] public async Task Sample() { // 在命令的业务逻辑中使用所注入的数据库上下文 var user = _dbContext.Users.SingleOrDefault(x => x.Id == Context.User.Id); // ... } } 使用其它数据库提供程序 此处有一些 EF Core 可用的主流的数据库提供程序，及其相关的文档，通常来说，与上文示例代码中不同的仅有 DbContextOptions / DbContextOptionsBuilder 中进行配置的部分。 名称 链接 MySQL 链接 SQLite 链接 PostgreSQL 链接"
  },
  "guides/other_libs/mediatr.html": {
    "href": "guides/other_libs/mediatr.html",
    "title": "MediatR | KaiHeiLa.Net 文档",
    "keywords": "中介者模式 MediatR 先决条件 配置好依赖注入服务的 Bot 客户端程序 安装所需类库 可通过集成开发环境的用户界面或 dotnet CLI 安装以下类库： 名称 链接 MediatR 链接 MediatR.Extensions.Microsoft.DependencyInjection 链接 将 MediatR 添加到依赖注入服务容器中 MediatR.Extensions.Microsoft.DependencyInjection 提供了方法 .AddMediatR() 允许您以将 MediatR 便捷地添加到依赖注入服务容器中，其参数可以是事件处理程序中将会用到地任何类型，代码示例片段如下： .AddMediatR(typeof(Bot)) 创建消息通知 MediatR 基于消息通知和其处理程序传递事件。下面的示例创建了一个消息通知来处理 KaiHeiLaSocketClient 中的 MessageReceived 事件。 // MessageReceivedNotification.cs using KaiHeiLa.WebSocket; using MediatR; namespace MediatRSample.Notifications; public class MessageReceivedNotification : INotification { public MessageReceivedNotification(SocketMessage message) { Message = message ?? throw new ArgumentNullException(nameof(message)); } public SocketMessage Message { get; } } 创建事件发布者与订阅者 在 MediatR 中，事件发布者所发布的事件需要通过订阅者的监听来使用，下面的示例创建了一个事件订阅者来监听 KaiHeiLaSocketClient 中的 MessageReceived 事件： // KaiHeiLaEventListener.cs using KaiHeiLa.WebSocket; using MediatR; using MediatRSample.Notifications; using Microsoft.Extensions.DependencyInjection; using System.Threading; using System.Threading.Tasks; namespace MediatRSample; public class KaiHeiLaEventListener { private readonly CancellationToken _cancellationToken; private readonly KaiHeiLaSocketClient _client; private readonly IServiceScopeFactory _serviceScope; public KaiHeiLaEventListener(KaiHeiLaSocketClient client, IServiceScopeFactory serviceScope) { _client = client; _serviceScope = serviceScope; _cancellationToken = new CancellationTokenSource().Token; } private IMediator Mediator { get { var scope = _serviceScope.CreateScope(); return scope.ServiceProvider.GetRequiredService<IMediator>(); } } public async Task StartAsync() { _client.MessageReceived += OnMessageReceivedAsync; await Task.CompletedTask; } private Task OnMessageReceivedAsync(SocketMessage arg) { return Mediator.Publish(new MessageReceivedNotification(arg), _cancellationToken); } } 此示例代码中， KaiHeiLaEventListener 首先从依赖注入服务中接收 KaiHeiLaSocketClient 实例用于订阅事件，本示例仅演示了 MessageReceived ，其他事件也可以使用同样的方式， 但事件处理程序使用了 MediatR 将事件发布到所有监听此事件的的消息通知处理程序。 添加事件订阅者添加到依赖注入服务容器中 要开始监听事件，需在入口点函数内调用 KaiHeiLaEventListener 类的 StartAsync() 方法，在此之前，需在依赖注入容器中注册 KaiHeiLaEventListener 类，并在入口点函数中获取对它的引用。 // Program.cs var listener = services.GetRequiredService<KaiHeiLaEventListener>(); await listener.StartAsync(); 创建消息通知处理程序 MediatR 将消息通知发布到所有监听此消息通知的事件订阅者，下面的示例创建了一个消息通知处理程序： // MessageReceivedHandler.cs using System; using MediatR; using MediatRSample.Notifications; namespace MediatRSample; public class MessageReceivedHandler : INotificationHandler<MessageReceivedNotification> { public async Task Handle(MessageReceivedNotification notification, CancellationToken cancellationToken) { Console.WriteLine($\"MediatR works! (Received a message by {notification.Message.Author.Username})\"); // ... } } 此示例代码实现了 MediatR 提供的 INotificationHandler<> 接口，这告知了 MediatR 需要将 MessageReceivedNotification 通知发送到此消息通知处理程序类。 Note 您可根据需要为同一消息通知创建任意数量的消息通知处理程序。 测试 要测试 MediatR 是否正常工作，可以启动此 Bot 客户端，并在开黑啦客户端中向此 Bot 可访问的文字频道内发送消息，应该能看到之前在 MessageReceivedHandler 中定义的输出信息： 添加更多的事件类型 要添加更多的事件类型，可遵循以下步骤： 为事件创建消息通知类，其应包含该事件所传递的所有参数（例如： MessageReceived 事件接收一个 SocketMessage 对象作为参数，则消息通知类也应该映射此参数） 将此事件注册到 KaiHeiLaEventListener 类 创建消息通知处理程序来处理此消息通知"
  },
  "guides/other_libs/serilog.html": {
    "href": "guides/other_libs/serilog.html",
    "title": "Serilog | KaiHeiLa.Net 文档",
    "keywords": "日志框架 Serilog 先决条件 如 使用 KaiHeiLa.Net 构建你的第一个 Bot 中所描述的带有日志处理方法的 Bot 客户端程序。 安装 Serilog 类库 可通过集成开发环境的用户界面或 dotnet CLI 安装以下类库： 名称 链接 Serilog.Extensions.Logging 链接 Serilog.Sinks.Console 链接 配置 Serilog Serilog 需在异步函数入口点的顶部进行配置： using KaiHeiLa; using Serilog; using Serilog.Events; public class Program { private KaiHeiLaSocketClient _client; public static Task Main(string[] args) => new Program().MainAsync(); public async Task MainAsync() { Log.Logger = new LoggerConfiguration() .MinimumLevel.Verbose() .Enrich.FromLogContext() .WriteTo.Console() .CreateLogger(); _client = new KaiHeiLaSocketClient(); _client.Log += LogAsync; // 将 Token 写入字符串变量，用于 Bot 登录过程的身份认证 // 这很不安全，尤其是在有公开源代码的情况下，不应该这么做 var token = \"token\"; // 一些其它存储 Token 的方案，如环境变量、文件等 // var token = Environment.GetEnvironmentVariable(\"NameOfYourEnvironmentVariable\"); // var token = File.ReadAllText(\"token.txt\"); // var token = JsonConvert.DeserializeObject<AConfigurationClass>(File.ReadAllText(\"config.json\")).Token; await _client.LoginAsync(TokenType.Bot, token); await _client.StartAsync(); // Block this task until the program is closed. await Task.Delay(Timeout.Infinite); } } 修改日志方法 要想让 Serilog 能够正确地记录开黑啦的日志，需要将 KaiHeiLa.Net 的 LogSeverity 映射到 Serilog 的 LogEventLevel ，映射的示例如下： private static async Task LogAsync(LogMessage message) { var severity = message.Severity switch { LogSeverity.Critical => LogEventLevel.Fatal, LogSeverity.Error => LogEventLevel.Error, LogSeverity.Warning => LogEventLevel.Warning, LogSeverity.Info => LogEventLevel.Information, // Serilog 中，LogEventLevel.Verbose 相比 LogEventLevel.Debug 会输出更多的信息 LogSeverity.Verbose => LogEventLevel.Debug, LogSeverity.Debug => LogEventLevel.Verbose, _ => LogEventLevel.Information }; Log.Write(severity, message.Exception, \"[{Source}] {Message}\", message.Source, message.Message); await Task.CompletedTask; } 测试 如果现在运行程序，应该会看到以下输出： 在其它位置使用此日志记录器 至此，Serilog 已配置完毕，要想使用此日志记录器，只需按如下方式调用： Now that you have set up Serilog, you can use it everywhere in your application by simply calling Log.Debug(\"Your log message, with {Variables}!\", 10); // 这将输出信息：\"[20:36:00 DBG] Your log message, with 10!\" Note 根据所配置的日志级别，部分日志消息可能不会输出。有关日志级别的更多信息，请参见 Serilog 文档 。 Note KaiHeiLa.Net 与 Serilog 对日志级别的定义不完全一致，要简化最低输出日志级别控制，有两种可选策略： 将 Serilog 的 MinimumLevel 配置为 Verbose ，转而在 KaiHeiLa.Net 的 KaiHeiLaConfig 中配置 LogLevel 在 KaiHeiLa.Net 的 KaiHeiLaConfig 中配置 LogLevel 为 Debug ，转而在 Serilog 中配置 MinimumLevel 同时配置两侧的最低日志级别可能会导致预期之外的最低日志级别控制结果。"
  },
  "guides/text_commands/dependency-injection.html": {
    "href": "guides/text_commands/dependency-injection.html",
    "title": "依赖注入 | KaiHeiLa.Net 文档",
    "keywords": "依赖注入 为了方便起见，文本命令服务基于基本的依赖注入服务设计，建议在使用本框架时使用依赖注入。 配置依赖注入 创建 ServiceCollection 实例 将要使用的模块添加到依赖注入的 ServiceCollection 中 将 ServiceCollection 构建为 ServiceProvider 将 ServiceProvider 作为参数传入 AddModulesAsync / AddModuleAsync , ExecuteAsync . 示例 using System.Reflection; using KaiHeiLa.Commands; using KaiHeiLa.WebSocket; using Microsoft.Extensions.DependencyInjection; public class Initialize { private readonly CommandService _commands; private readonly KaiHeiLaSocketClient _client; // 如果服务容器内存在 CommandService and KaiHeiLaSocketClient 的实例 // 则从容器内获取这两个实例，否则需要创建新的实例 public Initialize(CommandService commands = null, KaiHeiLaSocketClient client = null) { _commands = commands ?? new CommandService(); _client = client ?? new KaiHeiLaSocketClient(); } public IServiceProvider BuildServiceProvider() => new ServiceCollection() .AddSingleton(_client) .AddSingleton(_commands) // 可以使用所需类型的实例注入容器 .AddSingleton(new NotificationService()) // 也可以通过泛型注入容器 // 通过泛型注入容器时，ASP.NET 依赖注入服务将会基于构造函数注入所需依赖 .AddSingleton<DatabaseService>() .AddSingleton<CommandHandler>() .BuildServiceProvider(); } public class CommandHandler { private readonly KaiHeiLaSocketClient _client; private readonly CommandService _commands; private readonly IServiceProvider _services; public CommandHandler(IServiceProvider services, CommandService commands, KaiHeiLaSocketClient client) { _commands = commands; _services = services; _client = client; } public async Task InitializeAsync() { // 将 ServiceProvider 作为第二个个参数传入 AddModulesAsync // 可以将依赖注入到所有可能需要该服务的模块中 await _commands.AddModulesAsync( assembly: Assembly.GetEntryAssembly(), services: _services); _client.MessageReceived += HandleCommandAsync; } public async Task HandleCommandAsync(SocketMessage msg) { // ... // 传入 ExecuteAsync 方法的 ServiceProvider 可用于先决条件 await _commands.ExecuteAsync( context: context, argPos: argPos, services: _services); // ... } } 在模块中的用法 在模块的构造函数中，任何参数都会通过 IServiceProvider 进行填充。 任何可公共写的属性也会通过 IServiceProvider 进行填充。 Note 为属性标记 DontInjectAttribute 特性标签可以阻止属性被 IServiceProvider 填充。 Note 如果将 CommandService 或 IServiceProvider 作为构造函数参数或未被阻止注入的属性， 那么该参数或属性将会被填充为加载此模块的 CommandService 或由此构建的 IServiceProvider 。 示例 using KaiHeiLa.Commands; // 在配置依赖注入后，模块需要通过某种方式让类库知道容器为其在执行时注入哪些依赖 // KaiHeiLa.Net 中支持两种注入方式：构造函数 / 可公共写属性 // 通过构造函数注入 public class DatabaseModule : ModuleBase<SocketCommandContext> { private readonly DatabaseService _database; public DatabaseModule(DatabaseService database) { _database = database; } [Command(\"read\")] public async Task ReadFromDbAsync() { await ReplyKMarkdownAsync(_database.GetData()); } } // 通过可公共写属性注入 public class DatabaseModule : ModuleBase<SocketCommandContext> { public DatabaseService DbService { get; set; } [Command(\"read\")] public async Task ReadFromDbAsync() { await ReplyKMarkdownAsync(DbService.GetData()); } } // 通过依赖注入服务注入可公共写属性有时是预期之外的 // 可通过两种方式显式告知 KaiHeiLa.Net 不要为属性进行注入： // 限制访问修饰符 / 标记 DontInjectAttribute 特性标签 // 限制属性的访问修饰符 public class ImageModule : ModuleBase<SocketCommandContext> { public ImageService ImageService { get; } public ImageModule() { ImageService = new ImageService(); } } // 标记 DontInjectAttribute 特性标签 public class ImageModule : ModuleBase<SocketCommandContext> { [DontInject] public ImageService ImageService { get; set; } public ImageModule() { ImageService = new ImageService(); } }"
  },
  "guides/text_commands/intro.html": {
    "href": "guides/text_commands/intro.html",
    "title": "文本命令框架入门 | KaiHeiLa.Net 文档",
    "keywords": "文本命令框架 KaiHeiLa.Commands 命名空间提供了一组基于特性标签的文本命令服务。 入门 要使用文本命令框架，需要先创建 CommandService 及命令处理程序。 下面的代码演示了如何创建命令服务和命令处理程序的最小程序，可在此基础上扩展功能模块。 Note CommandService 可接收一个 CommandServiceConfig 类型的可选参数用于命令服务的配置， 如果不提供此参数，则使用默认配置。建议在使用配置时，通过 IDE 的自动提示与代码注释 浏览并了解各项属性与默认参数值，并在需要时修改。 public class CommandHandler { private readonly KaiHeiLaSocketClient _client; private readonly CommandService _commands; // 从构造函数中获取 KaiHeiLaSocketClient 与 CommandService 的示例 public CommandHandler(KaiHeiLaSocketClient client, CommandService commands) { _commands = commands; _client = client; } public async Task InstallCommandsAsync() { // 将命令服务处理程序订阅至 MessageReceived 事件 _client.MessageReceived += HandleCommandAsync; // 通过反射查找所有命令模块并加载至命令服务 // 如不使用依赖注入，services 参数传 null // 如有需要可参考依赖注入指南 await _commands.AddModulesAsync(assembly: Assembly.GetEntryAssembly(), services: null); } private async Task HandleCommandAsync(SocketMessage messageParam) { // 过滤系统信息 var message = messageParam as SocketUserMessage; if (message == null) return; // 追踪消息前缀结束即文本命令开始的位置 int argPos = 0; // 过滤来自 Bot 的消息，过滤前缀不合命令触发规则的消息 if (!(message.HasCharPrefix('!', ref argPos) || message.HasMentionPrefix(_client.CurrentUser, ref argPos)) || message.Author.IsBot) return; // 基于此消息创建命令上下文 var context = new SocketCommandContext(_client, message); // 执行命令 await _commands.ExecuteAsync( context: context, argPos: argPos, services: null); } } 使用特性 文本命令框架支持通过特性标签来预先定义命令，也可以在运行时通过命令构建类来定义命令。 绝大多数情况下，Bot 的命令服务的确定的，因此推荐使用特性标签来定义命令。 模块 命令的功能由模块定义，在不同的类中可以分别定义不同的命令功能，在启动时可以一并加载。 要使模块能够被自动发现，模块需要满足： 公开 继承自 ModuleBase 则模块类的声明形如： using KaiHeiLa.Commands; // 模块类 **必须** 为公开类，且继承自 ModuleBase // 否则，AddModulesAsync 将无法发现此模块 public class InfoModule : ModuleBase<SocketCommandContext> { } Note ModuleBase 是一个抽象类，可根据需要进行派生或重写。 模块可以继承自 ModuleBase 的任何派生类。 添加/创建命令 Warning 尽量避免模型内代码运行耗时过长，这可能会导致网关线程的阻塞，进而中断 Bot 与开黑啦服务端的连接。 创建命令的处理程序，方法的返回类型必须是 Task 或 Task<RuntimeResult> ，按需标记 async 关键字。 对该方法标记 [CommandAttribute] 特性标签，并指定命令的名称。 如该方法是 模块组 中的命令，名称可以留空。 命令参数 命令处理函数的参数即为命令的参数，例如： 整型作为参数： int num 用户作为参数： IUser user 命令参数几乎可以是任何类型的，默认支持读取的类型列表参见 类型解析 。 可选参数 默认地，命令参数为必选参数，要设置为可选参数，需为其指定默认值，例如： int num = 0 。 参数中的空格 如要接收一个以空格分隔的列表，可指定可变参数关键字 params ，例如： params int[] 。 如果实参包含空格，在调用命令时，该实参应以双引号进行包装， 例如：对于参数 string food ，可通过 !favoritefood \"Key Lime Pie\" 的形式进行调用。 如果某个参数可以包含空格地持续读取到命令末尾，可以为该参数标记 RemainderAttribute ， 用户在调用时便不必将实参包装在双引号中。 命令重载 命令处理函数支持重载，命令解析过程将自动地选择类型匹配的方法。 如果两个命令处理函数间在调用时会存在不明确的引用， 可为应优先尝试进行类型匹配的重载标记 PriorityAttribute 。 命令上下文 每个命令都可以通过 ModuleBase 上的 [Context] 属性访问执行上下文。 ICommandContext 支持访问消息、频道、服务器、用户、以及调用命令的底层开黑啦客户端。 使用 ModuleBase 的派生类可以指定不同类型的上下文。 例如，[SocketCommandContext] 中的上下文中的属性为是 Socket 实体，不再需要进行强制类型转换。 回复消息也可通过调用以 Reply 为前缀的方法完成，无需调用上下文中频道内发送消息的方法来回复命令。 Warning 上下文的类型不应该混合使用，使用 CommandContext 上下文的模块与使用 SocketCommandContext 的模块不可同时使用。 Tip 模块的完整代码示例： // 无前缀的模块 public class InfoModule : ModuleBase<SocketCommandContext> { // !say hello world -> hello world [Command(\"say\")] [Summary(\"回显消息\")] public Task SayAsync([Remainder] [Summary(\"要回显的消息\")] string echo) => ReplyTextAsync(echo); // ReplyTextAsync 为 ModuleBase 上的方法 } // 创建前缀为 'sample' 的模块 [Group(\"sample\")] public class SampleModule : ModuleBase<SocketCommandContext> { // !sample square 20 -> 400 [Command(\"square\")] [Summary(\"计算给定数字的平方\")] public async Task SquareAsync( [Summary(\"要计算的数字\")]) int num) { // 也可通过命令上下文访问频道属性 await Context.Channel.SendTextMessageAsync($\"{num}^2 = {Math.Pow(num, 2)}\"); } // !sample userinfo --> 戈小荷#0439 // !sample userinfo @戈小荷 --> 戈小荷#0439 // !sample userinfo 戈小荷#0439 --> 戈小荷#0439 // !sample userinfo 戈小荷 --> 戈小荷#0439 // !sample userinfo 2810246202 --> 戈小荷#0439 // !sample whois 2810246202 --> 戈小荷#0439 [Command(\"userinfo\")] [Summary(\"打印当前用户的信息，或用户参数指定的用户信息\")] [Alias(\"user\", \"whois\")] public async Task UserInfoAsync( [Summary(\"要获取信息的用户\")] SocketUser user = null) { var userInfo = user ?? Context.Client.CurrentUser; await ReplyTextAsync($\"{userInfo.Username}#{userInfo.IdentifyNumber}\"); } } 自动加载模块 命令服务可以自动发现并加载程序集内继承自 ModuleBase 的类，调用 CommandService.AddModulesAsync 可以进行自动发现与模块加载。如果要指定某个模块跳过自动加载，可对其标记特性 DontAutoLoadAttribute 。 手动加载模块 要手动加载模块，可调用 CommandService.AddModuleAsync ，模块的类通过泛型传递。 如有需要，也可以向该方法传入 IServiceProvider. 模块构造函数 模块通过 依赖注入 进行构造， 构造函数内的任何参数都应先注入服务容器中。 Tip 模块构造函数也可以将 IServiceProvider 作为参数，并从中手动抽取所需服务，但并不推荐。 模块属性 具有公共 set 访问器属性的模块在模块构造后会被服务容器中，详细信息可参考 依赖注入 。 模块组 模块组为一组具有相同名称前缀的命令，要声明模块组，可标记特性 GroupAttribute 。 在模块组内，如果命令的 CommandAttribute 特性标签中不传入名称参数，则为创建以该组名称作为命令名称的命令。 子模块 子模块是模块内的模块，可用于创建嵌套组。 [Group(\"admin\")] public class AdminModule : ModuleBase<SocketCommandContext> { [Group(\"ban\")] public class CleanModule : ModuleBase<SocketCommandContext> { // !admin ban @戈小荷 [Command] public Task BanAsync(IGuildUser user) => Context.Guild.AddBanAsync(user); // !admin ban clean @戈小荷 7 [Command(\"clean\")] public Task BanAsync(IGuildUser user, int pruneDays) => Context.Guild.AddBanAsync(user, pruneDays); // !admin ban list [Command(\"list\")] public async Task ListBansAsync() { var bans = await Context.Guild.GetBansAsync(); var banInfo = bans.Select(ban => $\"> {ban.User.Username}#{ban.User.IdentifyNumber} \" + $\"({ban.CreatedAt:yyyy'/'M'/'d HH':'mm}, {ban.Reason})\") .Aggregate((a, b) => $\"{a}\\n{b}\"); await ReplyKMarkdownAsync($\"{bans.Count} 条封禁：\\n{banInfo}\"); } } // !admin kick @戈小荷 [Command(\"kick\")] public Task KickAsync(IGuildUser user) => user.KickAsync(); }"
  },
  "guides/text_commands/namedarguments.html": {
    "href": "guides/text_commands/namedarguments.html",
    "title": "命名参数 | KaiHeiLa.Net 文档",
    "keywords": "命名参数 默认情况下，命令中的参数是按照顺序逐个解析的，位置决定了参数的对应。 如果定义了多个可选参数，对于用户来说，只设置想要传入的可选参数而不全部一一写出会更加方便。 设置参数名称 要想用户能够通过指定参数名称来设置对应的参数，您需要创建一个可选参数容器类， 其中需包含了命令会用到的所有可选参数，并为其添加 NamedArgumentTypeAttribute 特性标签。 示例 [NamedArgumentType] public class NamableArguments { public string First { get; set; } public string Second { get; set; } public string Third { get; set; } public string Fourth { get; set; } } 用法 要使用这些可选参数的命令可以通过如下的方式定义： [Command(\"act\")] public async Task Act(int requiredArg, NamableArguments namedArgs) 该命令则可以按如下方式调用： .act 42 first: Hello fourth: \"A string with spaces must be wrapped in quotes\" second: World 可选参数容器类的类型解析是自动注册的，无需对该容器类创建并注册自定义类型解析。 Important 一个命令 只能 有用一个被 NamedArgumentTypeAttribute 特性标注的可选参数容器类，且 必须 位于参数列表的末位。 被该特性标注的类会在解析参数是自动应用 RemainderAttribute 特性的效果。 复杂类型 可选参数容器类中的每个属性在进行匹配时，所有注册到文本命令服务内的类型解析都会如以往正常匹配。 如果要将多个相同类型的值读入单个属性中，则可以将属性声明为形如 IEnumerable<T> 的类型。 例如：如果可选参数容器类中包含了一个这样的属性： public IEnumerable<int> Numbers { get; set; } 那么该命令可以以如下的方式调用： .cmd numbers: \"1, 2, 4, 8, 16, 32\" 补充说明 可选参数容器类中的属性也可以使用 OverrideTypeReader 。"
  },
  "guides/text_commands/post-execution.html": {
    "href": "guides/text_commands/post-execution.html",
    "title": "后处理程序 | KaiHeiLa.Net 文档",
    "keywords": "文本命令执行的后处理程序 在开发命令时，您可能想要在执行命令后执行一些操作，KaiHeiLa.Net 提供了一些命令执行后处理工作流来实现这个目的。 文本命令框架入门 中展示了下面的示例来执行并处理命令及其内的数据： public class CommandHandler { private readonly KaiHeiLaSocketClient _client; private readonly CommandService _commands; // 从构造函数中获取 KaiHeiLaSocketClient 与 CommandService 的示例 public CommandHandler(KaiHeiLaSocketClient client, CommandService commands) { _commands = commands; _client = client; } public async Task InstallCommandsAsync() { // 将命令服务处理程序订阅至 MessageReceived 事件 _client.MessageReceived += HandleCommandAsync; // 通过反射查找所有命令模块并加载至命令服务 // 如不使用依赖注入，services 参数传 null // 如有需要可参考依赖注入指南 await _commands.AddModulesAsync(assembly: Assembly.GetEntryAssembly(), services: null); } private async Task HandleCommandAsync(SocketMessage messageParam) { // 过滤系统信息 var message = messageParam as SocketUserMessage; if (message == null) return; // 追踪消息前缀结束即文本命令开始的位置 int argPos = 0; // 过滤来自 Bot 的消息，过滤前缀不合命令触发规则的消息 if (!(message.HasCharPrefix('!', ref argPos) || message.HasMentionPrefix(_client.CurrentUser, ref argPos)) || message.Author.IsBot) return; // 基于此消息创建命令上下文 var context = new SocketCommandContext(_client, message); // 执行命令 await _commands.ExecuteAsync( context: context, argPos: argPos, services: null); } } 示例中， ExecuteAsync 方法的运行结果会返回一个 Task<IResult> 对象，要将结果打印到聊天中，可以采用以下的代码示例： // 此部分代码处理命令直接结果的方式不受推荐 // 请不要盲目赋值本示例的代码 IResult result = await _commands.ExecuteAsync(context, argPos, _services); if (result.Error != null) switch (result.Error) { case CommandError.BadArgCount: await context.Channel.SendKMarkdownMessageAsync( \"Parameter count does not match any command's.\"); break; default: await context.Channel.SendKMarkdownMessageAsync( $\"An error has occurred {result.ErrorReason}\"); break; } 然而，这种处理方式中，命令执行后处理程序被嵌入到了基本的命令执行逻辑中， 这样会导致命令执行逻辑部分的代码更混乱，且可能违反了单一职责原则（SRP），不受推荐。 另一个主要的问题是，如果命令的处理程序被 RunMode.Async 标记为异步模式运行， ExecuteAsync 将 总是 返回包含执行成功信息的 ExecuteResult ，而非真正的执行结果。 CommandExecuted 事件 当命令执行完成时，无论其结果如何，都会触发 CommandExecuted 事件。 该事件可以简化前面示例中混乱的结构，且可以避免 RunMode.Async 模式的问题。 采用事件模式的代码示例如下： public async Task SetupAsync() { await _commands.AddModulesAsync(Assembly.GetEntryAssembly(), _services); // 订阅命令执行后处理程序 _commands.CommandExecuted += OnCommandExecutedAsync; // 订阅命令执行处理程序 _client.MessageReceived += HandleCommandAsync; } public async Task OnCommandExecutedAsync(Optional<CommandInfo> command, ICommandContext context, IResult result) { // CommandExecuted 提供三个参数：所执行的命令、命令执行上下文、命令执行结果 // 可以告知命令调用者异常信息 if (!string.IsNullOrEmpty(result?.ErrorReason)) { await context.Channel.SendKMarkdownMessageAsync(result.ErrorReason); } // 或者可以将结果记入日志系统 var commandName = command.IsSpecified ? command.Value.Name : \"A command\"; await _log.LogAsync(new LogMessage(LogSeverity.Info, \"CommandExecution\", $\"{commandName} was executed at {DateTime.UtcNow}.\")); } public async Task HandleCommandAsync(SocketMessage msg) { var message = msg as SocketUserMessage; if (message == null) return; int argPos = 0; if (!(message.HasCharPrefix('!', ref argPos) || message.HasMentionPrefix(_client.CurrentUser, ref argPos)) || (message.Author.IsBot ?? false)) return; var context = new SocketCommandContext(_client, message); await _commands.ExecuteAsync(context, argPos, _services); } So now we have a streamlined post-execution pipeline, great! What's next? We can take this further by using RuntimeResult . RuntimeResult 命令执行完成后可以返回 RuntimeResult 对象， RuntimeResult 是一个结果类，可以用来表示命令执行结果的逻辑。 由于 ExecuteAsync 中异步执行的命令始终无法返回错误信息， RuntimeResult 往往不应与 ExecuteResult 共同使用，而应在 CommandExecuted 事件处理程序中使用。 在实践中，您可以基于 RuntimeResult 派生自定义的结果类，以记录更多的结果信息及逻辑。 下面的示例创建了一个 RuntimeResult 的最小派生类： public class MyCustomResult : RuntimeResult { public MyCustomResult(CommandError? error, string reason) : base(error, reason) { } } 派生类中的信息及逻辑没有什么特殊的限制，您可以添加有关执行结果的任何其他信息。 例如，可能根据命令的执行结果添加更多的方法、字段或属性， 或是一些静态方法来更容易地创建该结果类。 public class MyCustomResult : RuntimeResult { public string Hint { get; set; } public MyCustomResult(CommandError? error, string reason, string hint) : base(error, reason) { Hint = hint; } public static MyCustomResult FromError(string reason, string hint = null) => new MyCustomResult(CommandError.Unsuccessful, reason, hint); public static MyCustomResult FromSuccess(string reason = null) => new MyCustomResult(null, reason); } 要想在命令执行后返回该结果类，请将方法前面的返回类型更改为 Task<RuntimeResult> 。 Note 方法签名中的返回类型必须是 Task<RuntimeResult> 而不应是 Task<MyCustomResult> ，后者无法被自动模块加载发现并加载。 下面的示例展示了如何使用该自定义结果类： public class MyModule : ModuleBase<SocketCommandContext> { [Command(\"eat\")] public async Task<RuntimeResult> ChooseAsync(string food) { if (food == \"salad\") return MyCustomResult.FromError(\"No, I don't want that!\", \"Give me something others!\"); return MyCustomResult.FromSuccess($\"Give me the {food}!\"). } } 进而可以在 CommandExecuted 的事件处理程序中使用该结果类： public async Task OnCommandExecutedAsync(Optional<CommandInfo> command, ICommandContext context, IResult result) { switch(result) { case MyCustomResult customResult: // 提取自定义结果类中的信息进行进一步的处理 break; default: if (!string.IsNullOrEmpty(result.ErrorReason)) await context.Channel.SendMessageAsync(result.ErrorReason); break; } } CommandService.Log 事件 CommandService.Log 事件可以记录命令执行过程中发生的异常信息, 而这些信息由于业务逻辑抛出异常而中断执行，无法被传递到正常的命令执行后处理程序中。 所有命令执行过程中发生的异常信息都会被捕获并传入 CommandException 类内的 LogMessage.Exception 属性中， CommandException 类记录了抛出的异常及命令执行的上下文。 public async Task LogAsync(LogMessage logMessage) { if (logMessage.Exception is CommandException cmdException) { // 可以告知命令调用者所发生的异常 await cmdException.Context.Channel.SendMessageAsync(\"Something went catastrophically wrong!\"); // 也可以将此异常记入日志系统 Console.WriteLine($\"{cmdException.Context.User} failed to execute '{cmdException.Command.Name}' in {cmdException.Context.Channel}.\"); Console.WriteLine(cmdException.ToString()); } }"
  },
  "guides/text_commands/preconditions.html": {
    "href": "guides/text_commands/preconditions.html",
    "title": "先决条件 | KaiHeiLa.Net 文档",
    "keywords": "先决条件 先决条件可以被用作为命令服务中的权限系统，但其能力也不仅限于权限， 您也可以通过创建自定义先决条件实现更复杂的先决条件逻辑。 有两种可供使用的先决条件： PreconditionAttribute 可以被应用于模块、组、命令上 ParameterPreconditionAttribute 可以被应用于参数上 有关这两种先决条件的详细信息，请参阅各自的 API 文档。 内置的先决条件 KaiHeiLa.Commands 提供了几个内置的先决条件。 RequireContextAttribute RequireUserAttribute RequireBotPermissionAttribute RequireUserPermissionAttribute 用法 要使用先决条件，只需将先决条件特性标记于命令的方法签名上。 示例 [RequireOwner] [Command(\"echo\")] public Task EchoAsync(string input) => ReplyKMarkdownAsync(input); 先决条件的析取 命令的先决条件可以存在多个，如果想要其中的部分先决条件满足任一即可被是作为先决条件校验通过， 则需要为先决条件进行分组来表示先决条件的析取。 PreconditionAttribute 提供了一个可选的 Group 属性，如果为两个或多个先决条件制定了相同的 Group 属性，则命令系统在进行先决条件检查时，这些条件中的任何一个满足时，分组内的其他先决条件都将被忽略。 示例 // 该示例展示了先决条件的析取的声明方式 // 将 RequireUserPermission 与 RequireUser 中的 Group 属性都设置为 \"Permission\" // 则该命令调用者在当前服务器内拥有管理员权限或其用户 ID 为 2810246202 时都可以通过先决条件检查 [RequireUserPermission(GuildPermission.Administrator, Group = \"Permission\")] [RequireUser(2810246202, Group = \"Permission\")] public class AdminModule : ModuleBase<SocketCommandContext> { [Command(\"ban\")] public Task BanAsync(IUser user) => Context.Guild.AddBanAsync(user); } 自定义先决条件 要创建自定义先决条件，请根据用途创建一个继承自 PreconditionAttribute 或 ParameterPreconditionAttribute 的类。 要实现函数上的先决条件，请重写 CheckPermissionsAsync 方法。 如果命令调用上下文满足条件，则返回 PreconditionResult.FromSuccess 创建的对象，否则，请返回 PreconditionResult.FromError 创建的对象， 如有需要，请在返回的对象中添加错误消息。 Note Visual Studio、JetBrains Rider 等集成开发环境中的 IntelliSense 智能提示可以帮助您添加抽象类的实现中缺失的成员。 示例 using System; using System.Linq; using System.Threading.Tasks; using KaiHeiLa.Commands; using KaiHeiLa.WebSocket; // 继承自 PreconditionAttribute public class RequireRoleAttribute : PreconditionAttribute { // 创建字段存储指定的角色名称 private readonly string _name; // 创建构造函数，用来在使用时接收角色名称作为参数 public RequireRoleAttribute(string name) => _name = name; // 重写 CheckPermissions 方法 public override Task<PreconditionResult> CheckPermissionsAsync(ICommandContext context, CommandInfo command, IServiceProvider services) { // 检查该用户是否为服务器内的用户，只有服务器内的用户存在角色 if (context.User is SocketGuildUser guildUser) { // 如果该用户存在预先指定的角色，则返回成功 if (guildUser.Roles.Any(r => r.Name == _name)) // 由于方法内没有异步代码，要返回的结果需要包装在 `Task.FromResult` 中来避免编译错误 return Task.FromResult(PreconditionResult.FromSuccess()); // 角色检查不通过，则返回失败及错误信息 else return Task.FromResult(PreconditionResult.FromError($\"You must have a role named {_name} to run this command.\")); } else return Task.FromResult(PreconditionResult.FromError(\"You must be in a guild to run this command.\")); } }"
  },
  "guides/text_commands/typereaders.html": {
    "href": "guides/text_commands/typereaders.html",
    "title": "类型解析 | KaiHeiLa.Net 文档",
    "keywords": "类型解析 通过类型解析，命令中传入的各种参数可以被自动转换为各种类型。 默认支持的类型解析包括： bool char sbyte / byte ushort / short uint / int ulong / long float , double , decimal string enum DateTime / DateTimeOffset / TimeSpan 任何可空的值类型 (例如： int? , bool? ) 任何 IChannel / IMessage / IUser / IRole 的实现类 自定义类型解析 要自定义类型解析，可以创建一个类，引入 KaiHeiLa 和 KaiHeiLa.Commands 命名空间，继承 @KaiHeiLa.Commands.TypeReader，并重写 ReadAsync 方法， 该方法内为将输入的字符串解析为指定类型的逻辑。 如果类型解析成功，请将解析结果传入 TypeReaderResult.FromSuccess 返回； 如果类型解析失败，请将错误信息传入 TypeReaderResult.FromError 返回。 Note Visual Studio、JetBrains Rider 等集成开发环境中的 IntelliSense 智能提示可以帮助您添加抽象类的实现中缺失的成员。 示例 // 本类库已对多数基本类型的类型解析进行了实现 // 本示例仅用来展示如何创建一个简单的自定义类型解析 using KaiHeiLa; using KaiHeiLa.Commands; public class BooleanTypeReader : TypeReader { public override Task<TypeReaderResult> ReadAsync(ICommandContext context, string input, IServiceProvider services) { bool result; if (bool.TryParse(input, out result)) return Task.FromResult(TypeReaderResult.FromSuccess(result)); return Task.FromResult(TypeReaderResult.FromError(CommandError.ParseFailed, \"Input could not be parsed as a boolean.\")); } } 注册自定义类型解析 自定义类型解析无法被文本命令服务自动发现，需要显式注册。 要添加自定义类型解析，请调用 CommandService.AddTypeReader 方法。 Important 自定义类型解析注册需要在模块发现前进行，否则自定义类型接解析无法正常工作。 示例 public class CommandHandler { private readonly CommandService _commands; private readonly KaiHeiLaSocketClient _client; private readonly IServiceProvider _services; public CommandHandler(CommandService commands, KaiHeiLaSocketClient client, IServiceProvider services) { _commands = commands; _client = client; _services = services; } public async Task SetupAsync() { _client.MessageReceived += CommandHandleAsync; // 添加 BooleanTypeReader 来解析 `bool` 类型的参数 _commands.AddTypeReader(typeof(bool), new BooleanTypeReader()); // 注册模块 await _commands.AddModulesAsync(Assembly.GetEntryAssembly(), _services); } public async Task CommandHandleAsync(SocketMessage msg) { // ... } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "首页 | KaiHeiLa.Net 文档",
    "keywords": "KaiHeiLa.Net 文档 什么是 KaiHeiLa.Net？ KaiHeiLa.Net 是一个对 KOOK（原开黑啦）API 进行功能封装的类库，以 C# 编写，可运行在 .NET 6 平台上。 Note 请注意，KaiHeiLa.Net 计划更名为 Kook.Net，请在开发过程中留意潜在的避免命名空间冲突。 我应该从哪里开始？ 如果您是初次使用 KaiHeiLa.Net，请参考 用户指南 。 如果您想浏览 KaiHeiLa.Net API，请参考 API 文档 。 寻求帮助？ 如果您在开发中遇到无法解决的问题，请访问我们的 开黑啦 KaiHeiLa.Net 社区 寻求帮助。"
  }
}